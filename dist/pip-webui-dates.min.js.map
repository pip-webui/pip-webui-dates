{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/date/date.ts","src/date/date_filter.ts","src/date/date_service.ts","src/date_directive/date.ts","src/date_range_directive/date_range.ts","src/dates.ts","src/dependencies/translate.js","src/time_range_directive/time_range.ts","src/time_range_edit_directive/time_range_edit.ts","temp/pip-webui-dates-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dates","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","formatTimeFilter","pipDateTime","value","format","formatTime","formatDateOptionalFilter","formatDateOptional","formatLongDateFilter","formatLongDate","formatShortDateFilter","formatShortDate","formatMiddleDateFilter","formatMiddleDate","formatMonthFilter","formatMonth","formatLongMonthFilter","formatLongMonth","formatYearFilter","formatYear","formatWeekFilter","formatWeek","formatShortWeekFilter","formatShortWeek","formatShortDateTimeFilter","formatShortDateTime","formatMiddleDateTimeFilter","formatMiddleDateTime","formatLongDateTimeFilter","formatLongDateTime","formatShortDateLongTimeFilter","firstTime","formatShortDateLongTime","formatMiddleDateLongTimeFilter","formatMiddleDateLongTime","formatLongDateLongTimeFilter","formatLongDateLongTime","bbFormatDateLongTimeFilter","bbFormatDateLongTime","formatFullDateTimeFilter","formatFullDateTime","formatShortTimeFilter","formatShortTime","formatLongTimeFilter","formatLongTime","formatShortDayOfWeekFilter","formatShortDayOfWeek","formatLongDayOfWeekFilter","formatLongDayOfWeek","formatLongMonthDayFilter","formatLongMonthDay","formatShortMonthDayFilter","formatShortMonthDay","formatDateRangeFilter","value1","value2","formatDateRange","formatDateTimeRangeFilter","formatDateTimeRange","formatISOWeekFilter","formatISOWeek","formatShortISOWeekFilter","formatShortISOWeek","formatISOWeekOrdinalFilter","formatISOWeekOrdinal","formatDateYFilter","formatDateY","formatLongDateYFilter","formatLongDateY","formatTodayDateLongTimeLongFilter","formatTodayDateLongTimeLong","formatTodayDateShortTimeLongFilter","formatTodayDateShortTimeLong","formatTodayDateLongTimeShortFilter","formatTodayDateLongTimeShort","formatTodayDateShortTimeShortFilter","formatTodayDateShortTimeShort","formatMillisecondsToSecondsFilter","formatMillisecondsToSeconds","formatElapsedIntervalFilter","start","formatElapsedInterval","getDateJSONFilter","getDateJSON","$inject","filter","__extends","d","b","__","constructor","p","hasOwnProperty","Object","create","prototype","DateTimeConfig","DateTime","config","_momentRanged","Array","_defaultFormat","_config","timeZone","isUndefinedOrNull","isUndefined","getRange","index","indexOf","getOperationRange","range","formatDateTime","basicFormat","date","formatTpl","undefined","moment","utcOffset","isValid","formatDateTimeY","nowDate","formatMoment","localeData","longDateFormat","year","replace","formatDay","formatMonthYearless","formatMonthDay","formatLL","formatYearlessLL","formatRange","dateStart","dateEnd","isSame","isAfter","month","toStartRange","startOf","toDate","toEndRange","offset","result","mssOffset","isNumber","add","toDateWithTime","formatDate","toTodayDate","day","defineProperty","get","enumerable","configurable","useTimeZone","fromNow","JSON","stringify","getNextStart","category","getPrevStart","getNowStart","addHours","hours","toStartDay","toEndDay","toStartWeek","toEndWeek","toStartMonth","toEndMonth","toStartYear","toEndYear","DateTimeService","datetime","_datetime","_super","$get","_service","DateTimeProvider","thisModule","directive","scope","timeMode","model","ngChange","controller","$scope","$element","$injector","dayList","count","days","push","monthList","months","id","name","momentMonths","yearList","currentYear","Date","getFullYear","startYear","endYear","years","adjustDay","getValue","v","_","isDate","getDate","getMonth","setValue","localeDate","isArray","_months","pipTranslate","_weekdays","_weekdaysMin","_week","dow","has","setTranslations","DAY","MONTH","YEAR","dayLabel","translate","monthLabel","yearLabel","onYearChanged","disableControls","disabled","$watch","newValue","restrict","pipChanged","pipDateRangeType","pipDateFormat","pipNoLine","templateUrl","$mdMedia","$rootScope","$timeout","setCurrent","currentState","week","dateRangeType","fillLists","weeks","weekList","shortMonths","correctWeek","prevState","getTime","init","getUTCDate","getUTCMonth","getUTCFullYear","getWeekByDate","adjustWeek","getCountDay","nameDays","momentShortDays","weekday","dayOfWeek","startWeek","UTC","getUTCDay","getWeek","countDay","countPrevMonthDay","startDay","toString","Math","abs","endDay","getTimezoneOffset","cloneDeep","currentMonth","currentDay","currentDate","onDayChanged","onMonthChanged","onWeekChange","onChange","oldValue","onYearClick","onMonthClick","onDayClick","6","key","$attrs","defineStartDate","pipStartDate","defineEndDate","pipEndDate","data","end","toBoolean","toLowerCase","pipRebind","addClass","pipStartLabel","pipEndLabel","pipHideTime","pipSize","setDuration","startDate","endDate","startTime","endTime","validateStartDate","floor","duration","validateEndDate","setDate","time","bind","log","defineDate","getTimeInterval","j","minutes","pad","substr","initDate","showTime","EVENT_NEW_END_TIME","EVENT_NEW_START_TIME","startLabel","endLabel","intervalTimeCollection","newV","onChangeEndDate","onChangeStartTime","onChangeEndTime","isDisabled","$watchGroup","10","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dates.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nangular.module('pipDateTime', [\r\n    'pipDateTime.Service', 'pipDateTime.Filter'\r\n]);\r\n","'use strict';\r\n\r\nfunction formatTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";\r\n\r\n    return function (value: any, format: string): string {\r\n        return pipDateTime.formatTime(value, format);\r\n    }\r\n}\r\n\r\nfunction formatDateOptionalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, format: string): string {\r\n        return pipDateTime.formatDateOptional(value, format);\r\n    }\r\n}\r\n\r\nfunction formatLongDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDate(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMiddleDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMonthFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any) {\r\n        return pipDateTime.formatMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatYearFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatYear(value);\r\n    }\r\n}\r\n\r\nfunction formatWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMiddleDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatShortDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatLongDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatLongDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction bbFormatDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.bbFormatDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatFullDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatFullDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDayOfWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDayOfWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthDayFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatShortMonthDayFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatDateRangeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value1: any, value2: any): string {\r\n        return pipDateTime.formatDateRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatDateTimeRangeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value1: any, value2: any): string {\r\n        return pipDateTime.formatDateTimeRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortISOWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekOrdinalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatISOWeekOrdinal(value);\r\n    }\r\n}\r\n\r\nfunction formatDateYFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateYFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeLongFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateLongTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeLongFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateShortTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeShortFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateLongTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeShortFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateShortTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatMillisecondsToSecondsFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMillisecondsToSeconds(value);\r\n    }\r\n}\r\n\r\nfunction formatElapsedIntervalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, start: any): string {\r\n        return pipDateTime.formatElapsedInterval(value, start);\r\n    }\r\n}\r\n\r\nfunction getDateJSONFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.getDateJSON(value);\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDateTime.Filter', [])\r\n    .filter('formatTime', formatTimeFilter)\r\n    .filter('formatDateOptional', formatDateOptionalFilter)\r\n    .filter('bbFormatDateLongTime', bbFormatDateLongTimeFilter)\r\n    .filter('formatShortDate', formatShortDateFilter)\r\n    .filter('formatMiddleDate', formatMiddleDateFilter)\r\n    .filter('formatLongDate', formatLongDateFilter)\r\n    .filter('formatMonth', formatMonthFilter)\r\n    .filter('formatLongMonth', formatLongMonthFilter)\r\n    .filter('formatYear', formatYearFilter)\r\n    .filter('formatWeek', formatWeekFilter)\r\n    .filter('formatShortWeek', formatShortWeekFilter)\r\n    .filter('formatShortDateTime', formatShortDateTimeFilter)\r\n    .filter('formatMiddleDateTime', formatMiddleDateTimeFilter)    \r\n    .filter('formatLongDateTime', formatLongDateTimeFilter)\r\n    .filter('formatShortDateLongTime', formatShortDateLongTimeFilter)\r\n    .filter('formatMiddleDateLongTime', formatMiddleDateLongTimeFilter)    \r\n    .filter('formatLongDateLongTime', formatLongDateLongTimeFilter)    \r\n    .filter('formatFullDateTime', formatFullDateTimeFilter)\r\n    .filter('formatShortTime', formatShortTimeFilter)\r\n    .filter('formatLongTime', formatLongTimeFilter)\r\n    .filter('formatShortDayOfWeek', formatShortDayOfWeekFilter)\r\n    .filter('formatLongDayOfWeek', formatLongDayOfWeekFilter)\r\n    .filter('formatLongMonthDay', formatLongMonthDayFilter)\r\n    .filter('formatShortMonthDay', formatShortMonthDayFilter)\r\n    .filter('formatDateRange', formatDateRangeFilter)\r\n    .filter('formatDateTimeRange', formatDateTimeRangeFilter)\r\n    .filter('formatISOWeek', formatISOWeekFilter)\r\n    .filter('formatShortISOWeek', formatShortISOWeekFilter)\r\n    .filter('formatISOWeekOrdinal', formatISOWeekOrdinalFilter)\r\n    .filter('formatDateY', formatDateYFilter)\r\n    .filter('formatLongDateY', formatLongDateYFilter)\r\n    .filter('formatTodayDateLongTimeLong', formatTodayDateLongTimeLongFilter)\r\n    .filter('formatTodayDateShortTimeLong', formatTodayDateShortTimeLongFilter)\r\n    .filter('formatTodayDateLongTimeShort', formatTodayDateLongTimeShortFilter)\r\n    .filter('formatTodayDateShortTimeShort', formatTodayDateShortTimeShortFilter)\r\n    .filter('formatMillisecondsToSeconds', formatMillisecondsToSecondsFilter)\r\n    .filter('formatElapsedInterval', formatElapsedIntervalFilter);\r\n","'use strict';\r\n\r\nexport class DateTimeConfig {\r\n    timeZone: number;\r\n}\r\n\r\nexport interface IDateTimeService {\r\n    readonly config: DateTimeConfig;\r\n    useTimeZone(offset: number);\r\n\r\n    bbFormatDateLongTime(value: any, firstTime?: boolean): string; \r\n    \r\n    formatTime(value: any, format: string): string;\r\n    formatDateOptional(value: any, format: string): string;\r\n    formatShortDate(value: any): string;\r\n    formatMiddleDate(value: any): string;\r\n    formatLongDate(value: any): string;\r\n    formatMonth(value: any): string;\r\n    formatLongMonth(value: any): string;\r\n    formatYear(value: any): string;\r\n    formatWeek(value: any): string;\r\n    formatShortWeek(value: any): string;\r\n    formatShortDateTime(value: any): string;\r\n    formatMiddleDateTime(value: any): string;    \r\n    formatLongDateTime(value: any): string;\r\n    formatFullDateTime(value: any): string;\r\n    formatShortDateLongTime(value: any, firstTime?: boolean): string;\r\n    formatMiddleDateLongTime(value: any, firstTime?: boolean): string;    \r\n    formatLongDateLongTime(value: any, firstTime?: boolean): string;    \r\n    formatShortTime(value: any): string;\r\n    formatLongTime(value: any): string;\r\n    formatShortDayOfWeek(value: any): string;\r\n    formatLongDayOfWeek(value: any): string;\r\n    formatLongMonthDay(value: any): string;\r\n    formatShortMonthDay(value: any): string;\r\n    formatDateRange(value1: any, value2: any): string;\r\n    formatDateTimeRange(value1: any, value2: any): string;\r\n    formatISOWeek(value: any): string;\r\n    formatShortISOWeek(value: any): string;\r\n    formatISOWeekOrdinal(value: any): string;\r\n    formatDateY(value: any): string;\r\n    formatLongDateY(value: any): string;\r\n    formatTodayDateLongTimeLong(value: any): string;\r\n    formatTodayDateShortTimeLong(value: any): string;\r\n    formatTodayDateLongTimeShort(value: any): string;\r\n    formatTodayDateShortTimeShort(value: any): string;\r\n    formatMillisecondsToSeconds(value: any): string;\r\n    formatElapsedInterval(value: any, start: any): string;\r\n\r\n    getDateJSON(date: any): string;\r\n    getNextStart(value: any, category: string): any;\r\n    getPrevStart(value: any, category: string): any;\r\n    getNowStart(category: string): any;\r\n\r\n    addHours(value: any, hours: number): any;\r\n    toStartDay(value: any): any;\r\n    toEndDay(value: any, offset: number): any;\r\n    toStartWeek(value: any): any;\r\n    toEndWeek(value: any, offset: number): any;\r\n    toStartMonth(value: any): any;\r\n    toEndMonth(value: any, offset: number): any;\r\n    toStartYear(value: any): any;\r\n    toEndYear(value: any, offset: number): any;\r\n \r\n}\r\n\r\nexport interface IDateTimeProvider extends IDateTimeService, ng.IServiceProvider {\r\n\r\n}\r\n\r\nclass DateTime implements IDateTimeService {\r\n    private _config: DateTimeConfig;\r\n    protected _momentRanged = new Array('year', 'month', 'week', 'isoweek', 'day');\r\n    protected _defaultFormat = 'LL'\r\n\r\n    private isUndefinedOrNull(value: any): boolean {\r\n        return angular.isUndefined(value) || value === null;\r\n    }\r\n\r\n    private getRange(value: string): string {\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return 'day';\r\n        }\r\n\r\n        let index = this._momentRanged.indexOf(value)\r\n\r\n        if (index < 0) {\r\n            return 'day'\r\n        } else {\r\n            return this._momentRanged[index];\r\n        }\r\n    }\r\n\r\n    private getOperationRange(value: string): string {\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return 'day';\r\n        }\r\n\r\n        let range = value == 'isoweek' ? 'week' : value,\r\n            index = this._momentRanged.indexOf(range)\r\n\r\n        if (index < 0) {\r\n            return 'day'\r\n        } else {\r\n            return this._momentRanged[index];\r\n        }\r\n    }\r\n\r\n    private formatDateTime(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            formatTpl: string;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        formatTpl = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n        return date.format(formatTpl);\r\n    }\r\n\r\n    private formatDateTimeY(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            nowDate: any,\r\n            formatMoment: string;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n        formatMoment = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat);\r\n\r\n        if (nowDate.year() == date.year()) {\r\n            formatMoment = formatMoment.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n        }\r\n\r\n        return date.format(formatMoment);\r\n    }\r\n\r\n    private formatDay(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            format = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat),\r\n            formatMonthYearless = format.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '').replace(/M/g, '');\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.format(formatMonthYearless);\r\n    }\r\n\r\n    private formatMonthDay(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            format = basicFormat ? basicFormat : this._defaultFormat,\r\n            formatLL = moment.localeData().longDateFormat(format),\r\n            formatYearlessLL = formatLL.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.format(formatYearlessLL);\r\n    }\r\n\r\n//  use timezone not testing\r\n    private formatRange(value1: any, value2: any, basicFormat: string): string {\r\n        var dateStart: any,\r\n            dateEnd: any,\r\n            format = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n        if (this.isUndefinedOrNull(value1)) {\r\n            dateStart = null;\r\n        } else {\r\n            dateStart = (this._config.timeZone != undefined && this._config.timeZone != null) ?  moment(value1).utcOffset(this._config.timeZone) : moment(value1);\r\n        }\r\n        if (this.isUndefinedOrNull(value2)) {\r\n            dateEnd = null;\r\n        } else {\r\n            dateEnd = (this._config.timeZone != undefined && this._config.timeZone != null) ?  moment(value2).utcOffset(this._config.timeZone) : moment(value2);\r\n        }\r\n\r\n        if (dateStart === null && dateEnd === null) return '';\r\n\r\n        if (dateStart === null) {\r\n            return dateEnd.format(basicFormat);\r\n        } else if (dateEnd === null || dateStart.isSame(dateEnd)) {\r\n            return dateStart.format(basicFormat);;\r\n        }\r\n\r\n        if (dateStart.isAfter(dateEnd)) {\r\n            // todo localization\r\n            throw new Error('Date range error. Start date is more than end date.');\r\n        }\r\n\r\n        if (dateStart.year() == dateEnd.year()) {\r\n            if (dateStart.month() == dateEnd.month()) {\r\n                return this.formatDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            } else {\r\n                return this.formatMonthDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            }\r\n        } else {\r\n            return dateStart.format(basicFormat) + '-' + dateEnd.format(basicFormat);\r\n        }\r\n    }\r\n\r\n    private toStartRange(value: any, range: string): any {\r\n        var date: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.startOf(range).toDate();\r\n    }\r\n\r\n    private toEndRange(value: any, range: string, offset: number): any {\r\n        var date: any,\r\n            result: any,\r\n            mssOffset: number;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (!angular.isNumber(offset)) {\r\n            mssOffset = 0;\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        if (mssOffset) {\r\n            result = date.startOf(range).add(mssOffset, 'milliseconds');\r\n        } else {\r\n            result = date.startOf(range);\r\n        }\r\n\r\n        return date.startOf(range).toDate();\r\n    }\r\n\r\n    private toDateWithTime(value: any, formatDate: string, formatTime: string, firstTime?: boolean): any {\r\n        var date: any,\r\n            result: string,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n        if (firstTime) {\r\n            result = date.format(formatTime) + ' ' + date.format(formatDate);\r\n        } else {\r\n            result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private toTodayDate(value: any, formatDate: string, formatTime: string): any {\r\n        var date: any,\r\n            result: string,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n\r\n        if (nowDate.year() == date.year() && nowDate.month() == date.month() && nowDate.day() == date.day()) {\r\n            result = date.format(formatTime);\r\n        } else {\r\n            result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public constructor(config: DateTimeConfig) { \r\n        this._config = config || { timeZone: null };\r\n    };\r\n\r\n    public get config(): DateTimeConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public useTimeZone(offset: number) {\r\n        this._config.timeZone = offset;\r\n    }\r\n    // formating functions \r\n    // -------------------\r\n\r\n    // todo Optional\r\n    public formatTime(value: any, format: string): string {\r\n        return this.formatDateTime(value, 'LLL');\r\n    }\r\n    // todo Optional\r\n    public formatDateOptional(value: any, format: string): string {\r\n        return this.formatDateTime(value, 'L');\r\n    }\r\n\r\n    // date formats\r\n    public formatShortDate(value: any): string {\r\n        return this.formatDateTime(value, 'L');\r\n    }\r\n\r\n    public bbFormatDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'MM/DD/YY', 'LTS', firstTime); \r\n    }\r\n\r\n    public formatMiddleDate(value: any): string {\r\n        return this.formatDateTime(value, 'll');\r\n    }\r\n\r\n    public formatLongDate(value: any): string {\r\n        return this.formatDateTime(value, 'LL');\r\n    }\r\n\r\n    public formatMonth(value: any): string {\r\n        return this.formatDateTime(value, 'MM');\r\n    }\r\n\r\n    public formatLongMonth(value: any): string {\r\n        return this.formatDateTime(value, 'MMMM');\r\n    }\r\n\r\n    public formatYear(value: any): string {\r\n        return this.formatDateTime(value, 'YYYY');\r\n    }\r\n\r\n    public formatWeek(value: any): string {\r\n        return this.formatDateTime(value, 'ww');\r\n    }\r\n\r\n    public formatShortWeek(value: any): string {\r\n        return this.formatDateTime(value, 'w');\r\n    }\r\n\r\n    public formatShortDateTime(value: any): string {\r\n        return this.toDateWithTime(value, 'L', 'LT'); \r\n    }\r\n\r\n    public formatMiddleDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'lll');\r\n    }\r\n\r\n    public formatLongDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'LLL');\r\n    }\r\n\r\n    public formatFullDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'LLLL');\r\n    }\r\n\r\n    public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'L', 'LTS', firstTime); \r\n    }\r\n\r\n    public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'll', 'LTS', firstTime);\r\n    }\r\n\r\n    public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'LL', 'LTS', firstTime);\r\n    }\r\n\r\n    public formatShortTime(value: any): string {\r\n        return this.formatDateTime(value, 'LT');\r\n    }\r\n\r\n    public formatLongTime(value: any): string {\r\n        return this.formatDateTime(value, 'LTS');\r\n    }\r\n\r\n    public formatShortDayOfWeek(value: any): string {\r\n        return this.formatDateTime(value, 'dd');\r\n    }\r\n\r\n    public formatLongDayOfWeek(value: any): string {\r\n        return this.formatDateTime(value, 'dddd');\r\n    }\r\n\r\n    // public formatTimeNumber(value: any): string {\r\n    //     return this.formatDateTime(value, 'LLL');\r\n    // }\r\n\r\n    // public formatLongTimeNumber(value: any): string {\r\n    //     return this.formatDateTime(value, 'LLLL');\r\n    // }\r\n\r\n    ///-----------------\r\n\r\n    public formatLongMonthDay(value: any): string {\r\n        return this.formatMonthDay(value, 'LL');\r\n    }\r\n\r\n    public formatShortMonthDay(value: any): string {\r\n        return this.formatMonthDay(value, 'L');\r\n    }\r\n\r\n    public formatDateRange(value1: any, value2: any): string {\r\n        return this.formatRange(value1, value2, 'LL');\r\n    }\r\n\r\n    public formatDateTimeRange(value1: any, value2: any): string {\r\n        return this.formatRange(value1, value2, 'LLL');\r\n    }\r\n\r\n    // iso function\r\n    // --------------\r\n\r\n    public formatISOWeek(value: any): string {\r\n        return this.formatDateTime(value, 'WW');\r\n    }\r\n\r\n    public formatShortISOWeek(value: any): string {\r\n        return this.formatDateTime(value, 'W');\r\n    }\r\n\r\n    public formatISOWeekOrdinal(value: any): string {\r\n        return this.formatDateTime(value, 'Wo');\r\n    }\r\n    // special formats \r\n    // --------------\r\n\r\n    // year option displays if the current year is not equal to, the date of \r\n    public formatDateY(value: any): string {\r\n        return this.formatDateTimeY(value, 'L');\r\n    }\r\n\r\n    // year option displays if the current year is not equal to, the date of\r\n    public formatLongDateY(value: any): string {\r\n        return this.formatDateTimeY(value, 'LL');\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateLongTimeLong(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LTS')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateShortTimeLong(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LTS')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateLongTimeShort(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LT')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateShortTimeShort(value: any): string {\r\n        return this.toTodayDate(value, 'll', 'LT')\r\n    }\r\n\r\n    // todo\r\n    public formatMillisecondsToSeconds(value: any): string {\r\n        return '';\r\n    }\r\n\r\n    // todo\r\n    public formatElapsedInterval(value: any, start: any): string {\r\n        var date: any,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n        if (this.isUndefinedOrNull(start)) {\r\n            nowDate = moment();\r\n        } else {\r\n            nowDate = moment(start);\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid() || !nowDate.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return moment(date).fromNow(nowDate);\r\n    }\r\n\r\n    public getDateJSON(date: any): string {\r\n        return JSON.stringify(moment(date));\r\n    }\r\n\r\n    // navigation functions \r\n    // ------------------\r\n\r\n    public getNextStart(value: any, category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category);\r\n        result = moment(date).startOf(range).add(this.getOperationRange(range));\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public getPrevStart(value: any, category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category);\r\n        result = moment(date).startOf(range).add(-1, this.getOperationRange(range));\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public getNowStart(category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        date = moment();\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category)\r\n        result = moment(date).startOf(range);\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public addHours(value: any, hours: number): any {\r\n        var date: any;\r\n\r\n        if (this.isUndefinedOrNull(value) || !angular.isNumber(hours)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.add(hours, 'hours').toDate();\r\n    }\r\n\r\n    public toStartDay(value: any): any {\r\n        return this.toStartRange(value, 'day');\r\n    }\r\n\r\n    public toEndDay(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'day', offset);\r\n    }\r\n\r\n    public toStartWeek(value: any): any {\r\n        return this.toStartRange(value, 'week');\r\n    }\r\n\r\n    public toEndWeek(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'week', offset);\r\n    }\r\n\r\n    public toStartMonth(value: any): any {\r\n        return this.toStartRange(value, 'month');\r\n    }\r\n\r\n    public toEndMonth(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'month', offset);\r\n    }\r\n\r\n    public toStartYear(value: any): any {\r\n        return this.toStartRange(value, 'year');\r\n    }\r\n\r\n    public toEndYear(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'year', offset);\r\n    }\r\n\r\n}\r\n\r\nclass DateTimeService {\r\n    private _datetime: DateTime;\r\n    private _config: DateTimeConfig;\r\n\r\n    public constructor(\r\n        datetime: DateTime,\r\n    ) {\r\n        this._config = { timeZone: null};\r\n        this._datetime = datetime;\r\n    }\r\n\r\n    // todo Optional\r\n    public useTimeZone(offset: number): void {\r\n        return this._datetime.useTimeZone(offset);\r\n    }\r\n\r\n    // todo Optional\r\n    public formatTime(value: any, format: string): string {\r\n        return this._datetime.formatTime(value, format);\r\n    }\r\n\r\n    // todo Optional\r\n    public formatDateOptional(value: any, format: string): string {\r\n        return this._datetime.formatDateOptional(value, format);\r\n    }\r\n\r\n    public formatShortDate(value: any): string {\r\n        return this._datetime.formatShortDate(value);\r\n    }\r\n\r\n    public formatMiddleDate(value: any): string {\r\n        return this._datetime.formatMiddleDate(value);\r\n    }\r\n\r\n    public formatLongDate(value: any): string {\r\n        return this._datetime.formatLongDate(value);\r\n    }\r\n\r\n    public formatMonth(value: any): string {\r\n        return this._datetime.formatMonth(value);\r\n    }\r\n\r\n    public formatLongMonth(value: any): string {\r\n        return this._datetime.formatLongMonth(value);\r\n    }\r\n\r\n    public formatYear(value: any): string {\r\n        return this._datetime.formatYear(value);\r\n    }\r\n\r\n    public formatWeek(value: any): string {\r\n        return this._datetime.formatWeek(value);\r\n    }\r\n\r\n    public formatShortWeek(value: any): string {\r\n        return this._datetime.formatShortWeek(value);\r\n    }\r\n\r\n    public formatShortDateTime(value: any): string {\r\n        return this._datetime.formatShortDateTime(value);\r\n    }\r\n\r\n    public formatMiddleDateTime(value: any): string {\r\n        return this._datetime.formatMiddleDateTime(value);\r\n    }\r\n\r\n    public formatLongDateTime(value: any): string {\r\n        return this._datetime.formatLongDateTime(value);\r\n    }\r\n\r\n    public formatFullDateTime(value: any): string {\r\n        return this._datetime.formatFullDateTime(value);\r\n    }\r\n\r\n    public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatShortDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatLongDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public bbFormatDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.bbFormatDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatShortTime(value: any): string {\r\n        return this._datetime.formatShortTime(value);\r\n    }\r\n\r\n    public formatLongTime(value: any): string {\r\n        return this._datetime.formatLongTime(value);\r\n    }\r\n\r\n    public formatShortDayOfWeek(value: any): string {\r\n        return this._datetime.formatShortDayOfWeek(value);\r\n    }\r\n\r\n    public formatLongDayOfWeek(value: any): string {\r\n        return this._datetime.formatLongDayOfWeek(value);\r\n    }\r\n\r\n    public formatLongMonthDay(value: any): string {\r\n        return this._datetime.formatLongMonthDay(value);\r\n    }\r\n\r\n    public formatShortMonthDay(value: any): string {\r\n        return this._datetime.formatShortMonthDay(value);\r\n    }\r\n\r\n    public formatDateRange(value1: any, value2: any): string {\r\n        return this._datetime.formatDateRange(value1, value2);\r\n    }\r\n\r\n    public formatDateTimeRange(value1: any, value2: any): string {\r\n        return this._datetime.formatDateTimeRange(value1, value2);\r\n    }\r\n\r\n    // iso function\r\n    // --------------\r\n\r\n    public formatISOWeek(value: any): string {\r\n        return this._datetime.formatISOWeek(value);\r\n    }\r\n\r\n    public formatShortISOWeek(value: any): string {\r\n        return this._datetime.formatShortISOWeek(value);\r\n    }\r\n\r\n    public formatISOWeekOrdinal(value: any): string {\r\n        return this._datetime.formatISOWeekOrdinal(value);\r\n    }\r\n    // special formats \r\n    // --------------\r\n\r\n    // year option displays if the current year is not equal to, the date of \r\n    public formatDateY(value: any): string {\r\n        return this._datetime.formatDateY(value);\r\n    }\r\n\r\n    // year option displays if the current year is not equal to, the date of\r\n    public formatLongDateY(value: any): string {\r\n        return this._datetime.formatLongDateY(value);\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateLongTimeLong(value: any): string {\r\n        return this._datetime.formatTodayDateLongTimeLong(value);\r\n    }    \r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateShortTimeLong(value: any): string {\r\n        return this._datetime.formatTodayDateShortTimeLong(value);\r\n    }     \r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateLongTimeShort(value: any): string {\r\n        return this._datetime.formatTodayDateLongTimeShort(value);\r\n    }     \r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateShortTimeShort(value: any): string {\r\n        return this._datetime.formatTodayDateShortTimeShort(value);\r\n    }     \r\n\r\n    // todo\r\n    public formatMillisecondsToSeconds(value: any) {\r\n        return this._datetime.formatMillisecondsToSeconds(value);\r\n    }\r\n\r\n    // todo\r\n    public formatElapsedInterval(value: any, start: any): string {\r\n        return this._datetime.formatElapsedInterval(value, start);\r\n    }\r\n\r\n    public getDateJSON(date: any): string {\r\n        return this._datetime.getDateJSON(date);\r\n    }\r\n\r\n    // navigation functions \r\n    // ------------------\r\n\r\n    public getNextStart(value: any, category: string): any {\r\n        return this._datetime.getNextStart(value, category);\r\n    }\r\n\r\n    public getPrevStart(value: any, category: string): any {\r\n        return this._datetime.getPrevStart(value, category);\r\n    }\r\n\r\n    public getNowStart(category: string): any {\r\n        return this._datetime.getNowStart(category);\r\n    }\r\n\r\n    public addHours(value: any, hours: number): any {\r\n        return this._datetime.addHours(value, hours);\r\n    }\r\n\r\n    public toStartDay(value: any): any {\r\n        return this._datetime.toStartDay(value);\r\n    }\r\n\r\n    public toEndDay(value: any, offset: number): any {\r\n        return this._datetime.toEndDay(value, offset);\r\n    }\r\n\r\n    public toStartWeek(value: any): any {\r\n        return this._datetime.toStartWeek(value);\r\n    }\r\n\r\n    public toEndWeek(value: any, offset: number): any {\r\n        return this._datetime.toEndWeek(value, offset);\r\n    }\r\n\r\n    public toStartMonth(value: any): any {\r\n        return this._datetime.toStartMonth(value);\r\n    }\r\n\r\n    public toEndMonth(value: any, offset: number): any {\r\n        return this._datetime.toEndMonth(value, offset);\r\n    }\r\n\r\n    public toStartYear(value: any): any {\r\n        return this._datetime.toStartYear(value);\r\n    }\r\n\r\n    public toEndYear(value: any, offset: number): any {\r\n        return this._datetime.toEndYear(value, offset);\r\n    }\r\n\r\n}\r\n\r\nclass DateTimeProvider extends DateTime implements IDateTimeProvider {\r\n    private _translation: DateTime;\r\n    private _service: DateTimeService;\r\n\r\n    public constructor() {\r\n        super({ timeZone: null });\r\n    }\r\n\r\n    public $get(): any {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new DateTimeService(this);\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDateTime.Service', [])\r\n    .provider('pipDateTime', DateTimeProvider);\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDate', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDate',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    ngChange: '&'\r\n                },\r\n                templateUrl: 'date_directive/date.html',\r\n                controller: 'pipDateController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateController',\r\n        function ($scope, $element, $injector) { //pipTranslate\r\n            var value,\r\n                localeDate: any = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    DAY: 'Day',\r\n                    MONTH: 'Month',\r\n                    YEAR: 'Year'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    DAY: 'День',\r\n                    MONTH: 'Месяц',\r\n                    YEAR: 'Год'                    \r\n                });\r\n                $scope.dayLabel = pipTranslate.translate('DAY');\r\n                $scope.monthLabel = pipTranslate.translate('MONTH');\r\n                $scope.yearLabel = pipTranslate.translate('YEAR');\r\n            } else {\r\n                $scope.dayLabel = 'Day';\r\n                $scope.monthLabel = 'Month';                \r\n                $scope.yearLabel = 'Year';\r\n\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count = 31, days = [], i;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var i,\r\n                    currentYear = new Date().getFullYear(),\r\n                    startYear = $scope.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                    endYear = $scope.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                    years = [];\r\n\r\n                if ($scope.timeMode === 'past') {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                if ($scope.days.length !== days.length) {\r\n                    if ($scope.day > days.length) {\r\n                        $scope.day = days.length;\r\n                    }\r\n\r\n                    $scope.days = days;\r\n                }\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                    day = value ? value.getDate() : null,\r\n                    month = value ? value.getMonth() + 1 : null,\r\n                    year = value ? value.getFullYear() : null;\r\n\r\n                // Update day list if month and year were changed\r\n                if ($scope.month !== month && $scope.year !== year) {\r\n                    $scope.days = dayList($scope.month, $scope.year);\r\n                }\r\n\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.day && $scope.month && $scope.year) {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    $scope.model = value;\r\n                    $scope.ngChange();\r\n                }\r\n            }\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            // Set initial values\r\n            value = $scope.model ? _.isDate($scope.model) ? $scope.model : new Date($scope.model) : null;\r\n            $scope.day = value ? value.getDate() : null;\r\n            $scope.month = value ? value.getMonth() + 1 : null;\r\n            $scope.year = value ? value.getFullYear() : null;\r\n\r\n\r\n\r\n            $scope.days = dayList($scope.month, $scope.year);\r\n            $scope.months = monthList();\r\n            $scope.years = yearList();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue) {\r\n                getValue(newValue);\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n    var thisModule = angular.module('pipDateRange', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDateRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    pipChanged: '&',\r\n                    pipDateRangeType: '@',\r\n                    pipDateFormat: '@',\r\n                    pipNoLine: '@'\r\n                },\r\n                templateUrl: 'date_range_directive/date_range.html',\r\n                controller: 'pipDateRangeController'\r\n            };\r\n        });\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateRangeController',\r\n        function ($scope, $element, $mdMedia, $rootScope, $injector, $timeout) { //pipTranslate, \r\n            var currentDate,\r\n                currentYear,\r\n                currentMonth,\r\n                currentDay,\r\n                prevState: any = {}, \r\n                currentState: any = {},\r\n                localeDate: any = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            // var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            // if (pipTranslate) {\r\n            //     pipTranslate.setTranslations('en', {\r\n            //         EVENT_NEW_START_TIME: 'Start time',\r\n            //         EVENT_NEW_END_TIME: 'End time'\r\n            //     });\r\n            //     pipTranslate.setTranslations('ru', {\r\n            //         EVENT_NEW_START_TIME: 'Начало',\r\n            //         EVENT_NEW_END_TIME: 'Конец'                \r\n            //     });\r\n            //     $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n            //     $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            // } else {\r\n            //     $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n            //     $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            // }\r\n\r\n            currentDate = new Date();\r\n            currentYear = currentDate.getUTCFullYear();\r\n            currentMonth = currentDate.getUTCMonth() + 1;\r\n            currentDay = currentDate.getUTCDate();\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    var date, dayOfWeek;\r\n\r\n                    date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                    dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                var date, dayOfWeek;\r\n\r\n                date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onWeekChange = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            // visibility\r\n            $scope.isDay = function () {\r\n                return $scope.pipDateRangeType === 'daily';\r\n            };\r\n\r\n            $scope.isWeek = function () {\r\n                return $scope.pipDateRangeType === 'weekly';\r\n            };\r\n\r\n            $scope.isMonth = function () {\r\n                return $scope.pipDateRangeType === 'daily' ||\r\n                    $scope.pipDateRangeType === 'weekly' ||\r\n                    $scope.pipDateRangeType === 'monthly';\r\n            };\r\n\r\n            $scope.onChange = function () {\r\n                if ($scope.pipChanged) {\r\n                    $timeout(function() {\r\n                        $scope.pipChanged();\r\n                    }, 0);\r\n                }\r\n            };\r\n\r\n            function setCurrent() {\r\n                currentState.day = $scope.day;\r\n                currentState.month = $scope.month;\r\n                currentState.year = $scope.year;\r\n                currentState.week = $scope.week;\r\n                currentState.dateRangeType = $scope.pipDateRangeType;\r\n                currentState.model = $scope.model;\r\n            }\r\n\r\n            function fillLists() {\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n                $scope.months = monthList();\r\n                $scope.shortMonths = monthList();\r\n                $scope.years = yearList();\r\n\r\n            }\r\n\r\n            function correctWeek() {\r\n                if (!prevState.model || prevState.model && prevState.model.getTime() >= $scope.model.getTime()) {\r\n                    // if shift week -> increase month\r\n                    if ($scope.weeks && $scope.weeks[$scope.week] && $scope.weeks[$scope.week].id <= 0) {\r\n                        if ($scope.month < 12) {\r\n                            $scope.month += 1;\r\n                        } else {\r\n                            $scope.month = 1;\r\n                            $scope.year += 1;\r\n                        }\r\n                        fillLists();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function init() {\r\n                var value;\r\n\r\n                value = $scope.model ? new Date($scope.model) : null;\r\n                $scope.day = value ? value.getUTCDate() : null;\r\n                $scope.month = value ? value.getUTCMonth() + 1 : null;\r\n                $scope.year = value ? value.getUTCFullYear() : null;\r\n                $scope.week = value ? getWeekByDate($scope.day, $scope.month - 1, $scope.year) : null;\r\n\r\n                fillLists();\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            }\r\n\r\n            // Set initial values\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    getValue(newValue);\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            $scope.$watch('pipDateRangeType', function (newValue, oldValue) {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    init();\r\n                }\r\n            });\r\n\r\n            $scope.onYearClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.year = currentYear;\r\n                }\r\n            };\r\n\r\n            $scope.onMonthClick = function () {\r\n                if (!$scope.month) {\r\n                    $scope.month = currentMonth;\r\n                }\r\n            };\r\n\r\n            $scope.onDayClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.day = currentDay;\r\n                }\r\n            };\r\n            // ---------------------------------------------------------------------------------------\r\n\r\n            function getCountDay(month, year) {\r\n                var count = 31;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count, days, i, ln;\r\n\r\n              //  ln = $rootScope.$language || 'en';\r\n                count = getCountDay(month, year);\r\n                $scope.nameDays = [];\r\n                days = [];\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                    $scope.nameDays.push(momentShortDays[moment([year, month - 1, i]).weekday()]);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function getWeekByDate(day, month, year) {\r\n                var date, dayOfWeek, startWeek;\r\n\r\n                date = new Date(Date.UTC(year, month, day));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n                if (dayOfWeek === 1) {\r\n                    startWeek = day;\r\n                } else {\r\n                    startWeek = day + 1 - dayOfWeek;\r\n                }\r\n\r\n                return startWeek;\r\n            }\r\n\r\n            function getWeek(day, countDay, countPrevMonthDay) {\r\n                var endDay, startDay;\r\n\r\n                endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n                startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n                return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n            }\r\n\r\n            function weekList(month, year) { // возвращает список начала надели\r\n                var weeks, countDay, countPrevMonthDay, startWeek;\r\n\r\n                weeks = [];  // в массиве первые дни недели в текущем месяце\r\n                countDay = getCountDay(month, year);\r\n                startWeek = getWeekByDate(1, month - 1, year);\r\n\r\n                countPrevMonthDay = month - 1 ? getCountDay(month - 1, year) : getCountDay(12, year - 1);\r\n                while (startWeek < countDay + 1) {\r\n                    weeks.push({\r\n                        id: startWeek,\r\n                        name: getWeek(startWeek, countDay, countPrevMonthDay)\r\n                    });\r\n                    startWeek = startWeek + 7;\r\n                }\r\n\r\n                return weeks;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var startYear, i,\r\n                    endYear,\r\n                    years = [];\r\n\r\n                switch ($scope.timeMode) {\r\n                    case 'future':\r\n                        startYear = currentYear;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    case 'past':\r\n                        startYear = currentYear - 100;\r\n                        endYear = currentYear;\r\n                        break;\r\n                    case 'now':\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    default:\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 50;\r\n                        break;\r\n                }\r\n                if ($scope.timeMode === 'future') {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                switch ($scope.pipDateRangeType) {\r\n                    case 'monthly':\r\n                        $scope.day = 1;\r\n                        break;\r\n                    case 'yearly':\r\n                        $scope.month = 1;\r\n                        $scope.day = 1;\r\n                        break;\r\n                    default:\r\n                        if ($scope.days.length !== days.length) {\r\n                            if ($scope.day > days.length) {\r\n                                $scope.day = days.length;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                $scope.days = days;\r\n            }\r\n\r\n            function adjustWeek() {\r\n                var weeks;\r\n\r\n                weeks = weekList($scope.month, $scope.year);\r\n                $scope.week = getWeekByDate($scope.week, $scope.month - 1, $scope.year);\r\n                $scope.weeks = weeks;\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value, day, month, year, week;\r\n\r\n                value = v ? new Date(v) : null;\r\n                // Define values\r\n                day = value ? value.getUTCDate() : null;\r\n                month = value ? value.getUTCMonth() + 1 : null;\r\n                year = value ? value.getUTCFullYear() : null;\r\n                week = value ? getWeekByDate(day, month - 1, year) : null;\r\n                // Exit if nothing to update\r\n                if ($scope.day === day && $scope.month === month && $scope.year === year && $scope.week === week) {\r\n                    return;\r\n                }\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n                $scope.week = week;\r\n\r\n                // Define data sources\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.week, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                } else {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                }\r\n\r\n                prevState = _.cloneDeep(currentState);\r\n                setCurrent();\r\n                $scope.onChange();\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","'use strict';\r\n\r\nangular.module('pipDates', [\r\n    'pipDate',\r\n    'pipTimeRange',\r\n    'pipDateTime',\r\n    'pipTimeRangeEdit',\r\n    'pipDateRange',\r\n    'pipDates.Translate'\r\n]);\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDates.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRange', []);\r\n\r\n    thisModule.directive('pipTimeRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipEndDate: '='\r\n                },\r\n                templateUrl: 'time_range_directive/time_range.html',\r\n                link: function ($scope: any, $element, $attrs) {\r\n\r\n                    function getDateJSON(value) {\r\n                        return value ? new Date(value) : null;\r\n                    }\r\n\r\n                    function defineStartDate() {\r\n                        if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                            $scope.data.start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate\r\n                                : getDateJSON($scope.pipStartDate);\r\n                        }\r\n                    }\r\n\r\n                    function defineEndDate() {\r\n                        if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                            $scope.data.end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate\r\n                                : getDateJSON($scope.pipEndDate);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    $scope.data = {};\r\n                    $scope.data.start = null;\r\n                    $scope.data.end = null;\r\n                    defineStartDate();\r\n                    defineEndDate();\r\n\r\n                    if (toBoolean((<any>$attrs).pipRebind)) {\r\n                        $scope.$watch('pipStartDate',\r\n                            function () {\r\n                                $scope.data.start = null;\r\n                                defineStartDate();\r\n                            }\r\n                        );\r\n                        $scope.$watch('pipEndDate',\r\n                            function () {\r\n                                $scope.data.end = null;\r\n                                defineEndDate();\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-time-range');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRangeEdit', []);\r\n\r\n    thisModule.directive('pipTimeRangeEdit',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipChanged: '&',\r\n                    pipEndDate: '=',\r\n                    pipStartLabel: '@',\r\n                    pipEndLabel: '@',\r\n                    disabled: '&ngDisabled',\r\n                    pipHideTime: '=',\r\n                    pipSize: '='\r\n                },\r\n                templateUrl: 'time_range_edit_directive/time_range_edit.html',\r\n                controller: 'pipTimeRangeEditController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipTimeRangeEditController',\r\n        function ($scope, $element, $attrs, $injector, pipDateTime) { //pipTranslate\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    EVENT_NEW_START_TIME: 'Start time',\r\n                    EVENT_NEW_END_TIME: 'End time'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    EVENT_NEW_START_TIME: 'Начало',\r\n                    EVENT_NEW_END_TIME: 'Конец'                \r\n                });\r\n                $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n                $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            } else {\r\n                $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n                $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            }\r\n\r\n            function getDateJSON(value) {\r\n                return value ? new Date(value) : null;\r\n            }\r\n\r\n            function setDuration() {\r\n                var start, end;\r\n\r\n                if (!$scope.data.startDate || !$scope.data.endDate) {\r\n                    return null;\r\n                }\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                return end - start;\r\n            }\r\n\r\n            function validateStartDate() {\r\n                var date, start, end;\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано начальное время - задаем его\r\n                if ($scope.data.startTime === undefined || $scope.data.startTime === null) {\r\n                    if (!$scope.data.endTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.startTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.startTime = $scope.data.endTime === 0 ? 0 : $scope.data.endTime - 30;\r\n                    }\r\n                }\r\n\r\n                // если конечная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if ($scope.data.duration) {\r\n                    end = new Date(start.getTime() + $scope.data.duration);\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    end = end.getTime() - $scope.data.endDate.getTime();\r\n                    $scope.data.endTime = Math.floor(end / (30 * 60 * 1000)) * 30;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        $scope.data.endDate = pipDateTime.toStartDay(new Date(start.getTime() + 30 * 60000));\r\n                        $scope.data.endTime = ($scope.data.startTime + 30) % 1440;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function validateEndDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано конечное время - задаем его\r\n                if ($scope.data.endTime === undefined || $scope.data.endTime === null) {\r\n                    if (!$scope.data.startTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.endTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.endTime = $scope.data.startTime === 1410 ? 1410 : $scope.data.startTime + 30;\r\n                    }\r\n                }\r\n\r\n                // если yачальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                if (start >= end) {\r\n                    // Если начальная дата больше, то двигаем начальную дату\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date(end.getTime() - 30 * 60000));\r\n                    $scope.data.startTime = $scope.data.endTime % 1440 === 0 ? 1410 : $scope.data.endTime - 30;\r\n                }\r\n\r\n                $scope.data.duration = setDuration();\r\n            }\r\n\r\n            function setDate() {\r\n                var time;\r\n\r\n                $scope.data.bind = false;\r\n\r\n                if ($scope.data.startDate) {\r\n                    time = $scope.data.startTime ? $scope.data.startTime * 60 * 1000 : 0;\r\n                    console.log('time', $scope.data.startTime);\r\n                    $scope.pipStartDate = new Date($scope.data.startDate.getTime() + time);\r\n                }\r\n\r\n                if ($scope.data.endDate) {\r\n                    time = $scope.data.endTime ? $scope.data.endTime * 60 * 1000 : 0;\r\n                    $scope.pipEndDate = new Date($scope.data.endDate.getTime() + time);\r\n                }\r\n\r\n                $scope.data.bind = true;\r\n            }\r\n\r\n            function defineDate() {\r\n                var start, end;\r\n\r\n                if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                    start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate : null;\r\n\r\n                    if (!start) {\r\n                        start = getDateJSON($scope.pipStartDate);\r\n                    }\r\n\r\n                    $scope.data.startDate = pipDateTime.toStartDay(start);\r\n                    $scope.data.startTime = (<any>new Date(start) - $scope.data.startDate) / (60 * 1000);\r\n                }\r\n\r\n                if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                    end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate : null;\r\n\r\n                    if (!start) {\r\n                        end = getDateJSON($scope.pipEndDate);\r\n                    }\r\n\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    $scope.data.endTime = (<any>new Date(end) - $scope.data.endDate) / (60 * 1000);\r\n                }\r\n\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n            }\r\n\r\n            function getTimeInterval() {\r\n                var result, i, j, minutes;\r\n\r\n                result = [];\r\n                for (i = 0; i < 24; i++) {\r\n                    for (j = 0; j < 2; j++) {\r\n                        minutes = j * 30;\r\n                        result.push({\r\n                            id: i * 60 + minutes,\r\n                            time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            function initDate() {\r\n                $scope.data.startDate = null;\r\n                $scope.data.startTime = null;\r\n                $scope.data.endDate = null;\r\n                $scope.data.endTime = null;\r\n                $scope.data.duration = null;\r\n                $scope.showTime = !toBoolean($scope.pipHideTime);\r\n            }\r\n\r\n            // initialize data\r\n            $scope.intervalTimeCollection = getTimeInterval();\r\n            $scope.data = {};\r\n            initDate();\r\n            defineDate();\r\n\r\n            // process function\r\n            $scope.onChangeStartDate = function (newV) {\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndDate = function () {\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeStartTime = function () {\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndTime = function () {\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.isDisabled = function () {\r\n                if ($scope.disabled) {\r\n                    return $scope.disabled();\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            $scope.$watchGroup([$scope.pipStartDate, $scope.pipEndDate], function () {\r\n                if ($scope.data.bind) {\r\n                    initDate();\r\n                    defineDate();\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_range_directive/date_range.html',\n    '<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\"><md-input-container ng-show=\"isDay()\" class=\"input-container pip-day flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-day\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onDayClick()\" ng-model=\"day\" ng-change=\"onDayChanged()\" placeholder=\"{{dayLabel}}\" aria-label=\"DAY\"><md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{nameDays[$index]}} {{ opt }}</md-option></md-select></md-input-container><md-input-container ng-show=\"isWeek()\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-week\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" ng-model=\"week\" ng-change=\"onWeekChange()\" placeholder=\"{{weekLabel}}\" aria-label=\"WEEK\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in weeks track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $mdMedia(\\'gt-xs\\'), \\'space8\\': $mdMedia(\\'xs\\')}\" ng-show=\"isDay() || isWeek()\"></div><md-input-container ng-show=\"isMonth() && !monthFormatShort\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onMonthClick()\" ng-model=\"month\" ng-change=\"onMonthChanged()\" placeholder=\"{{monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><md-input-container ng-show=\"isMonth() && monthFormatShort\" class=\"flex input-container\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onMonthClick()\" ng-model=\"month\" ng-change=\"onMonthChanged()\" placeholder=\"{{monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in shortMonths track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $mdMedia(\\'gt-xs\\'), \\'space8\\': $mdMedia(\\'xs\\')}\" ng-show=\"isMonth()\"></div><md-input-container class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-year\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onYearClick()\" ng-model=\"year\" ng-change=\"onYearChanged()\" placeholder=\"{{yearLabel}}\" aria-label=\"YEAR\"><md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{ opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_directive/date.html',\n    '<div class=\"pip-date layout-row flex\" tabindex=\"-1\"><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-day flex\" ng-disabled=\"disableControls\" ng-model=\"day\" placeholder=\"{{dayLabel}}\" ng-change=\"onDayChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{:: opt }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-monthflex\" ng-disabled=\"disableControls\" ng-model=\"month\" placeholder=\"{{monthLabel}}\" ng-change=\"onMonthChanged()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{:: opt.name }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-year flex\" ng-disabled=\"disableControls\" ng-model=\"year\" placeholder=\"{{yearLabel}}\" ng-change=\"onYearChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{:: opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_directive/time_range.html',\n    '<p><span ng-if=\"data.start != null\">{{data.start | formatLongDateTime}}</span> <span class=\"separator\" ng-if=\"data.start && data.end\">-</span> <span ng-if=\"data.end != null\">{{data.end | formatLongDateTime}}</span></p>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_edit_directive/time_range_edit.html',\n    '<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\"><div flex=\"47\" class=\"start-time-container\"><p class=\"text-caption text-grey\">{{startLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container\" flex=\"49\"><md-datepicker ng-model=\"data.startDate\" xmd-placeholder=\"{{startLabel}}\" ng-change=\"onChangeStartDate()\" ng-disabled=\"isDisabled()\" aria-label=\"START-DATE\"></md-datepicker></div><div flex=\"\" ng-if=\"showTime\"><md-input-container class=\"input-container\"><md-select aria-label=\"START-TIME\" ng-model=\"data.startTime\" ng-disabled=\"isDisabled()\" ng-change=\"onChangeStartTime(data.startTime)\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div><div flex=\"47\" class=\"end-time-container\"><p class=\"text-caption text-grey\">{{endLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container flex-49\"><md-datepicker ng-model=\"data.endDate\" xmd-placeholder=\"{{endLabel}}\" ng-disabled=\"isDisabled()\" ng-change=\"onChangeEndDate()\" aria-label=\"END-DATE\"></md-datepicker></div><div flex=\"\" ng-if=\"showTime\"><md-input-container class=\"input-container\"><md-select aria-label=\"END-TIME\" ng-model=\"data.endTime\" ng-change=\"onChangeEndTime()\" ng-disabled=\"isDisabled()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dates-html.min.js.map\n"]}