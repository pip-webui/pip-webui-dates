{"version":3,"sources":["date_directive/date.html","date_range_directive/date_range.html","time_range_directive/time_range.html","time_range_edit_directive/time_range_edit.html","dependencies/translate.js","dates.ts","date/date.ts","date/date_filter.ts","date/date_service.ts","date_directive/date.ts","date_range_directive/date_range.ts","time_range_directive/time_range.ts","time_range_edit_directive/time_range_edit.ts"],"names":["module","angular","e","run","$templateCache","put","thisModule","filter","$injector","pipTranslate","has","get","key","translate","pip","datetime","formatTimeFilter","pipDateTime","value","format","formatTime","formatDateOptionalFilter","formatDateOptional","formatLongDateFilter","formatLongDate","formatShortDateFilter","formatShortDate","formatMonthFilter","formatMonth","formatLongMonthFilter","formatLongMonth","formatYearFilter","formatYear","formatWeekFilter","formatWeek","formatShortWeekFilter","formatShortWeek","formatShortDateTimeFilter","formatShortDateTime","formatLongDateTimeFilter","formatLongDateTime","formatShortTimeFilter","formatShortTime","formatLongTimeFilter","formatLongTime","formatShortDayOfWeekFilter","formatShortDayOfWeek","formatLongDayOfWeekFilter","formatLongDayOfWeek","formatDateNumberFilter","formatDateNumber","formatLongDateNumberFilter","formatLongDateNumber","formatTimeNumberFilter","formatTimeNumber","formatLongTimeNumberFilter","formatLongTimeNumber","formatLongMonthDayFilter","formatLongMonthDay","formatShortMonthDayFilter","formatShortMonthDay","formatDateRangeFilter","value1","value2","formatDateRange","formatDateTimeRangeFilter","formatDateTimeRange","formatISOWeekFilter","formatISOWeek","formatShortISOWeekFilter","formatShortISOWeek","formatISOWeekOrdinalFilter","formatISOWeekOrdinal","formatDateYFilter","formatDateY","formatLongDateYFilter","formatLongDateY","formatMillisecondsToSecondsFilter","formatMillisecondsToSeconds","formatElapsedIntervalFilter","start","formatElapsedInterval","getDateJSONFilter","getDateJSON","$inject","this","__extends","d","b","constructor","hasOwnProperty","p","Object","create","__","prototype","DateTime","_momentRanged","Array","_defaultFormat","isUndefinedOrNull","isUndefined","getRange","index","indexOf","getOperationRange","range","formatDateTime","basicFormat","date","formatTpl","moment","isValid","formatDateTimeY","nowDate","formatMoment","localeData","longDateFormat","year","replace","formatDay","formatMonthYearless","formatMonthDay","formatLL","formatYearlessLL","formatRange","dateStart","dateEnd","isSame","isAfter","Error","month","startOf","toDate","toEndRange","offset","result","mssOffset","isNumber","add","fromNow","JSON","stringify","getNextStart","category","getPrevStart","getNowStart","addHours","hours","toStartDay","toStartRange","toEndDay","toStartWeek","toEndWeek","toStartMonth","toEndMonth","toStartYear","toEndYear","DateTimeService","_datetime","_super","DateTimeProvider","call","$get","_service","_","directive","restrict","require","scope","timeMode","disabled","model","ngChange","templateUrl","controller","$scope","$element","dayList","i","days","count","push","monthList","months","id","name","momentMonths","yearList","currentYear","Date","getFullYear","startYear","endYear","years","adjustDay","length","day","getValue","v","isDate","getDate","getMonth","setValue","localeDate","isArray","_months","_weekdays","_weekdaysMin","_week","dow","setTranslations","DAY","MONTH","YEAR","yearLabel","dayLabel","monthLabel","onDayChanged","onMonthChanged","disableControls","$watch","newValue","window","pipChanged","pipDateRangeType","pipDateFormat","pipNoLine","$mdMedia","$rootScope","setCurrent","currentState","week","dateRangeType","fillLists","weeks","weekList","shortMonths","correctWeek","prevState","getTime","init","getUTCDate","getUTCMonth","getUTCFullYear","getWeekByDate","adjustWeek","getCountDay","nameDays","momentShortDays","weekday","dayOfWeek","startWeek","UTC","getUTCDay","getWeek","countDay","countPrevMonthDay","endDay","startDay","toString","Math","abs","getTimezoneOffset","onChange","currentDate","currentMonth","currentDay","onYearChanged","onWeekChange","isDay","oldValue","onYearClick","onDayClick","pipStartDate","pipEndDate","$attrs","defineStartDate","undefined","data","defineEndDate","end","toBoolean","toLowerCase","pipRebind","addClass","pipStartLabel","pipEndLabel","pipSize","setDuration","startDate","endDate","startTime","endTime","floor","duration","validateEndDate","setDate","time","bind","validateStartDate","getTimeInterval","j","minutes","pad","substr","initDate","EVENT_NEW_START_TIME","EVENT_NEW_END_TIME","endLabel","startLabel","intervalTimeCollection","defineDate","onChangeStartDate","onChangeEndDate","onChangeStartTime"],"mappings":"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","file":"pip-webui-dates.min.js","sourcesContent":["<!--\r\n@file Date control content\r\n@copyright Digital Living Software Corp. 2014-2016\r\n-->\r\n\r\n<div class=\"pip-date layout-row flex\" tabindex=\"-1\">\r\n\t<md-input-container class=\"input-container flex\">\r\n\t\t<md-select class=\"pip-date-day flex\" ng-disabled=\"disableControls\"\r\n\t\t\t\t   ng-model=\"day\" placeholder=\"{{dayLabel}}\" ng-change=\"onDayChanged()\">\r\n\t\t\t<md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{:: opt }}</md-option>\r\n\t\t</md-select>\r\n\t</md-input-container>\r\n\t<div class=\"input-container-separator flex-fixed\"></div>\r\n\t<md-input-container class=\"input-container flex\">\r\n\t\t<md-select class=\"pip-date-monthflex\" ng-disabled=\"disableControls\"\r\n\t\t\t\t   ng-model=\"month\" placeholder=\"{{monthLabel}}\" ng-change=\"onMonthChanged()\">\r\n\t\t\t<md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{:: opt.name }}</md-option>\r\n\t\t</md-select>\r\n\t</md-input-container>\r\n\t<div class=\"input-container-separator flex-fixed\"></div>\r\n\t<md-input-container class=\"input-container flex\">\r\n\t\t<md-select class=\"pip-date-year flex\" ng-disabled=\"disableControls\"\r\n\t\t\t\t   ng-model=\"year\" placeholder=\"{{yearLabel}}\" ng-change=\"onYearChanged()\">\r\n\t\t\t<md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{:: opt }}</md-option>\r\n\t\t</md-select>\r\n\t</md-input-container>\r\n</div>\r\n\t\t\t\t\t","<!--\r\n@file Date range control content\r\n@copyright Digital Living Software Corp. 2014-2016\r\n-->\r\n\r\n<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\">\r\n    <md-input-container ng-show=\"isDay()\" class=\"input-container pip-day flex\"\r\n            ng-class=\"{'flex-fixed' : $mdMedia('gt-xs')}\">\r\n        <md-select class=\"select-day\"\r\n                   ng-class=\"{'pip-no-line' : pipNoLine}\"\r\n                   ng-disable=\"{{disableControls}}\"\r\n                   md-on-open=\"onDayClick()\"\r\n                   ng-model=\"day\"\r\n                   ng-change=\"onDayChanged()\"\r\n                   placeholder=\"{{dayLabel}}\"\r\n                   aria-label=\"DAY\">\r\n\r\n            <md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt \">\r\n               {{nameDays[$index]}} {{ opt }}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n    <md-input-container ng-show=\"isWeek()\" class=\"input-container flex\"\r\n                        ng-class=\"{'flex-fixed' : $mdMedia('gt-xs')}\">\r\n        <md-select class=\"select-week\"\r\n                   ng-class=\"{'pip-no-line' : pipNoLine}\"\r\n                   ng-disable=\"{{disableControls}}\"\r\n                   ng-model=\"week\"\r\n                   ng-change=\"onWeekChange()\"\r\n                   placeholder=\"{{weekLabel}}\"\r\n                   aria-label=\"WEEK\">\r\n\r\n            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in weeks track by opt.id\">\r\n                {{ opt.name }}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container >\r\n    <div class=\"flex-fixed\"\r\n         ng-class=\"{'space16': $mdMedia('gt-xs'), 'space8':  $mdMedia('xs')}\"\r\n         ng-show=\"isDay() || isWeek()\">\r\n    </div>\r\n    <md-input-container ng-show=\"isMonth() && !monthFormatShort \" class=\"input-container flex\"\r\n                        ng-class=\"{'flex-fixed' : $mdMedia('gt-xs')}\">\r\n        <md-select class=\"select-month\"\r\n                   ng-class=\"{'pip-no-line' : pipNoLine}\"\r\n                   ng-disable=\"{{disableControls}}\"\r\n                   md-on-open=\"onMonthClick()\"\r\n                   ng-model=\"month\"\r\n                   ng-change=\"onMonthChanged()\"\r\n                   placeholder=\"{{monthLabel}}\"\r\n                   aria-label=\"MONTH\">\r\n\r\n            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">\r\n                {{ opt.name }}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n    <md-input-container ng-show=\"isMonth() && monthFormatShort\" class=\"flex input-container\"\r\n                        ng-class=\"{'flex-fixed' : $mdMedia('gt-xs')}\">\r\n        <md-select class=\"select-month\"\r\n                   ng-class=\"{'pip-no-line' : pipNoLine}\"\r\n                   ng-disable=\"{{disableControls}}\"\r\n                   md-on-open=\"onMonthClick()\"\r\n                   ng-model=\"month\"\r\n                   ng-change=\"onMonthChanged()\"\r\n                   placeholder=\"{{monthLabel}}\"\r\n                   aria-label=\"MONTH\">\r\n\r\n            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in shortMonths track by opt.id\">\r\n                {{ opt.name }}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n    <div class=\"flex-fixed\"\r\n         ng-class=\"{'space16': $mdMedia('gt-xs'), 'space8':  $mdMedia('xs')}\"\r\n         ng-show=\"isMonth()\">\r\n    </div>\r\n    <md-input-container class=\"input-container flex\"\r\n                        ng-class=\"{'flex-fixed' : $mdMedia('gt-xs')}\">\r\n        <md-select class=\"select-year\"\r\n                   ng-class=\"{'pip-no-line' : pipNoLine}\"\r\n                   ng-disable=\"{{disableControls}}\"\r\n                   md-on-open=\"onYearClick()\"\r\n                   ng-model=\"year\"\r\n                   ng-change=\"onYearChanged()\"\r\n                   placeholder=\"{{yearLabel}}\"\r\n                   aria-label=\"YEAR\">\r\n\r\n            <md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">\r\n                {{ opt }}\r\n            </md-option>\r\n        </md-select>\r\n    </md-input-container>\r\n</div>","<p>\r\n    <span ng-if=\"data.start != null\">{{data.start | formatShortDateTime}}</span>\r\n    <span  class=\"separator\" ng-if=\"data.start && data.end\"> - </span>\r\n    <span ng-if=\"data.end != null\">{{data.end | formatShortDateTime}}</span>\r\n</p>","<!--\r\n@file Time edit control content\r\n@copyright Digital Living Software Corp. 2014-2016\r\n-->\r\n\r\n<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\">\r\n    <div flex=\"47\" class=\"start-time-container \">\r\n        <p class=\"text-caption text-grey\">{{startLabel}}</p>\r\n\r\n        <div class=\"layout-row layout-align-space-between-center\">\r\n            <div class=\"pip-datepicker-container\" flex=\"49\">\r\n                <md-datepicker ng-model=\"data.startDate\"\r\n                               xmd-placeholder=\"{{startLabel}}\"\r\n                               ng-change=\"onChangeStartDate()\"\r\n                               ng-disabled=\"isDisabled()\"\r\n                               aria-label=\"START-DATE\">\r\n                </md-datepicker>\r\n            </div>\r\n            <div flex>\r\n                <md-input-container class=\"input-container\">\r\n                    <md-select aria-label=\"START-TIME\" ng-model=\"data.startTime\" ng-disabled=\"isDisabled()\"\r\n                               ng-change=\"onChangeStartTime()\">\r\n                        <md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}\r\n                        </md-option>\r\n                    </md-select>\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div flex=\"47\" class=\"end-time-container\">\r\n        <p class=\"text-caption text-grey\">{{endLabel}}</p>\r\n\r\n        <div class=\"layout-row layout-align-space-between-center\">\r\n            <div class=\"pip-datepicker-container flex-49\">\r\n                <md-datepicker ng-model=\"data.endDate\"\r\n                               xmd-placeholder=\"{{endLabel}}\"\r\n                               ng-disabled=\"isDisabled()\"\r\n                               ng-change=\"onChangeEndDate()\"\r\n                               aria-label=\"END-DATE\">\r\n                </md-datepicker>\r\n            </div>\r\n            <div flex>\r\n                <md-input-container class=\"input-container\">\r\n                    <md-select aria-label=\"END-TIME\" ng-model=\"data.endTime\" ng-change=\"onChangeEndTime()\"\r\n                               ng-disabled=\"isDisabled()\">\r\n                        <md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{\r\n                            opt.time }}\r\n                        </md-option>\r\n                    </md-select>\r\n                </md-input-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDates.Translate', []);\r\n\r\n    thisModule.filter('translate', ['$injector', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }]);\r\n\r\n})();\r\n","/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipDates', [\r\n        'pipDate',\r\n        'pipTimeRange',\r\n        'pipDateTime',\r\n        'pipTimeRangeEdit',\r\n        'pipDateRange',\r\n        'pipDates.Translate'\r\n    ]);\r\n    \r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nmodule pip.datetime {\r\n    'use strict';\r\n\r\n    angular.module('pipDateTime', [\r\n        'pipDateTime.Service', 'pipDateTime.Filter'\r\n    ]);\r\n\r\n}","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nmodule pip.datetime {\r\n    'use strict';\r\n\r\n    function formatTimeFilter(pipDateTime: any) {\r\n        \"ngInject\";\r\n\r\n        return function (value: any, format: string): string {\r\n            return pipDateTime.formatTime(value, format);\r\n        }\r\n    }\r\n\r\n    function formatDateOptionalFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any, format: string): string {\r\n            return pipDateTime.formatDateOptional(value, format);\r\n        }\r\n    }\r\n\r\n    function formatLongDateFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongDate(value);\r\n        }\r\n    }\r\n\r\n    function formatShortDateFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortDate(value);\r\n        }\r\n    }\r\n\r\n    function formatMonthFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any) {\r\n            return pipDateTime.formatMonth(value);\r\n        }\r\n    }\r\n\r\n    function formatLongMonthFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongMonth(value);\r\n        }\r\n    }\r\n\r\n    function formatYearFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatYear(value);\r\n        }\r\n    }\r\n\r\n    function formatWeekFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatWeek(value);\r\n        }\r\n    }\r\n\r\n    function formatShortWeekFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortWeek(value);\r\n        }\r\n    }\r\n\r\n    function formatShortDateTimeFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortDateTime(value);\r\n        }\r\n    }\r\n\r\n    function formatLongDateTimeFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongDateTime(value);\r\n        }\r\n    }\r\n\r\n    function formatShortTimeFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortTime(value);\r\n        }\r\n    }\r\n\r\n    function formatLongTimeFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongTime(value);\r\n        }\r\n    }\r\n\r\n    function formatShortDayOfWeekFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortDayOfWeek(value);\r\n        }\r\n    }\r\n\r\n    function formatLongDayOfWeekFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongDayOfWeek(value);\r\n        }\r\n    }\r\n\r\n    function formatDateNumberFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatDateNumber(value);\r\n        }\r\n    }\r\n\r\n    function formatLongDateNumberFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongDateNumber(value);\r\n        }\r\n    }\r\n\r\n    function formatTimeNumberFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatTimeNumber(value);\r\n        }\r\n    }\r\n\r\n    function formatLongTimeNumberFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongTimeNumber(value);\r\n        }\r\n    }\r\n\r\n    function formatLongMonthDayFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongMonthDay(value);\r\n        }\r\n    }\r\n\r\n    function formatShortMonthDayFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortMonthDay(value);\r\n        }\r\n    }\r\n\r\n    function formatDateRangeFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value1: any, value2: any): string {\r\n            return pipDateTime.formatDateRange(value1, value2);\r\n        }\r\n    }\r\n\r\n    function formatDateTimeRangeFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value1: any, value2: any): string {\r\n            return pipDateTime.formatDateTimeRange(value1, value2);\r\n        }\r\n    }\r\n\r\n    function formatISOWeekFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatISOWeek(value);\r\n        }\r\n    }\r\n\r\n    function formatShortISOWeekFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatShortISOWeek(value);\r\n        }\r\n    }\r\n\r\n    function formatISOWeekOrdinalFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatISOWeekOrdinal(value);\r\n        }\r\n    }\r\n\r\n    function formatDateYFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatDateY(value);\r\n        }\r\n    }\r\n\r\n    function formatLongDateYFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatLongDateY(value);\r\n        }\r\n    }\r\n\r\n    function formatMillisecondsToSecondsFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.formatMillisecondsToSeconds(value);\r\n        }\r\n    }\r\n\r\n    function formatElapsedIntervalFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any, start: any): string {\r\n            return pipDateTime.formatElapsedInterval(value, start);\r\n        }\r\n    }\r\n\r\n    function getDateJSONFilter(pipDateTime: any) {\r\n        \"ngInject\";  \r\n\r\n        return function (value: any): string {\r\n            return pipDateTime.getDateJSON(value);\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDateTime.Filter', [])\r\n        .filter('formatTime', formatTimeFilter)\r\n        .filter('formatDateOptional', formatDateOptionalFilter)\r\n        .filter('formatShortDate', formatShortDateFilter)\r\n        .filter('formatLongDate', formatLongDateFilter)\r\n        .filter('formatMonth', formatMonthFilter)\r\n        .filter('formatLongMonth', formatLongMonthFilter)\r\n        .filter('formatYear', formatYearFilter)\r\n        .filter('formatWeek', formatWeekFilter)\r\n        .filter('formatShortWeek', formatShortWeekFilter)\r\n        .filter('formatShortDateTime', formatShortDateTimeFilter)\r\n        .filter('formatLongDateTime', formatLongDateTimeFilter)\r\n        .filter('formatShortTime', formatShortTimeFilter)\r\n        .filter('formatLongTime', formatLongTimeFilter)\r\n        .filter('formatShortDayOfWeek', formatShortDayOfWeekFilter)\r\n        .filter('formatLongDayOfWeek', formatLongDayOfWeekFilter)\r\n        .filter('formatDateNumber', formatDateNumberFilter)\r\n        .filter('formatLongDateNumber', formatLongDateNumberFilter)\r\n        .filter('formatTimeNumber', formatTimeNumberFilter)\r\n        .filter('formatLongTimeNumber', formatLongTimeNumberFilter)\r\n        .filter('formatLongMonthDay', formatLongMonthDayFilter)\r\n        .filter('formatShortMonthDay', formatShortMonthDayFilter)\r\n        .filter('formatDateRange', formatDateRangeFilter)\r\n        .filter('formatDateTimeRange', formatDateTimeRangeFilter)\r\n        .filter('formatISOWeek', formatISOWeekFilter)\r\n        .filter('formatShortISOWeek', formatShortISOWeekFilter)\r\n        .filter('formatISOWeekOrdinal', formatISOWeekOrdinalFilter)\r\n        .filter('formatDateY', formatDateYFilter)\r\n        .filter('formatLongDateY', formatLongDateYFilter)\r\n        .filter('formatMillisecondsToSeconds', formatMillisecondsToSecondsFilter)\r\n        .filter('formatElapsedInterval', formatElapsedIntervalFilter);\r\n}\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\nmodule pip.datetime {\r\n    'use strict';\r\n\r\n    export interface IDateTimeService {\r\n        formatTime(value: any, format: string): string;\r\n        formatDateOptional(value: any, format: string): string;\r\n        formatShortDate(value: any): string;\r\n        formatLongDate(value: any): string;\r\n        formatMonth(value: any): string;\r\n        formatLongMonth(value: any): string;\r\n        formatYear(value: any): string;\r\n        formatWeek(value: any): string;\r\n        formatShortWeek(value: any): string;\r\n        formatShortDateTime(value: any): string;\r\n        formatLongDateTime(value: any): string;\r\n        formatShortTime(value: any): string;\r\n        formatLongTime(value: any): string;\r\n        formatShortDayOfWeek(value: any): string;\r\n        formatLongDayOfWeek(value: any): string;\r\n        formatDateNumber(value: any): string;\r\n        formatLongDateNumber(value: any): string;\r\n        formatTimeNumber(value: any): string;\r\n        formatLongTimeNumber(value: any): string;\r\n        formatLongMonthDay(value: any): string;\r\n        formatShortMonthDay(value: any): string;\r\n        formatDateRange(value1: any, value2: any): string;\r\n        formatDateTimeRange(value1: any, value2: any): string;\r\n        formatISOWeek(value: any): string;\r\n        formatShortISOWeek(value: any): string;\r\n        formatISOWeekOrdinal(value: any): string;\r\n        formatDateY(value: any): string;\r\n        formatLongDateY(value: any): string;\r\n        formatMillisecondsToSeconds(value: any): string;\r\n        formatElapsedInterval(value: any, start: any): string;\r\n        getDateJSON(date: any): string;\r\n        getNextStart(value: any, category: string): any;\r\n        getPrevStart(value: any, category: string): any;\r\n        getNowStart(category: string): any;\r\n        addHours(value: any, hours: number): any;\r\n        toStartDay(value: any): any;\r\n        toEndDay(value: any, offset: number): any;\r\n        toStartWeek(value: any): any;\r\n        toEndWeek(value: any, offset: number): any;\r\n        toStartMonth(value: any): any;\r\n        toEndMonth(value: any, offset: number): any;\r\n        toStartYear(value: any): any;\r\n        toEndYear(value: any, offset: number): any;\r\n\r\n    }    \r\n\r\n    export interface IDateTimeProvider extends IDateTimeService, ng.IServiceProvider {\r\n\r\n    }    \r\n\r\n    class DateTime implements IDateTimeService{\r\n        protected _momentRanged = new Array('year','month','week','isoweek', 'day');\r\n        protected _defaultFormat = 'LL'\r\n\r\n        private isUndefinedOrNull(value: any): boolean {\r\n            return angular.isUndefined(value) || value === null;\r\n        }\r\n\r\n        private getRange(value: string): string {\r\n            if (this.isUndefinedOrNull(value)) {\r\n                return 'day';\r\n            }\r\n\r\n            let index = this._momentRanged.indexOf(value)\r\n\r\n            if (index < 0) {\r\n                return 'day'\r\n            } else {\r\n                return this._momentRanged[index];\r\n            }\r\n        }\r\n\r\n        private getOperationRange(value: string): string {\r\n            if (this.isUndefinedOrNull(value)) {\r\n                return 'day';\r\n            }\r\n\r\n            let range = value == 'isoweek' ? 'week' : value,\r\n                index = this._momentRanged.indexOf(range)\r\n\r\n            if (index < 0) {\r\n                return 'day'\r\n            } else {\r\n                return this._momentRanged[index];\r\n            }\r\n        }\r\n\r\n        private formatDateTime(value: any, basicFormat: string): string {\r\n            var date: any,\r\n                formatTpl: string;\r\n            \r\n             if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tdate = moment(value);\r\n\t\t\tif (!date.isValid()) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n           formatTpl = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n            return date.format(formatTpl);\r\n        }\r\n\r\n        private formatDateTimeY(value: any, basicFormat: string): string {\r\n            var date: any,\r\n                nowDate: any,\r\n                formatMoment: string;\r\n            \r\n            if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tdate = moment(value);\r\n\t\t\tif (!date.isValid()) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n            nowDate = moment();\r\n            formatMoment = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat);\r\n\r\n            if (nowDate.year() == date.year()) {\r\n                formatMoment = formatMoment.replace(/Y/g,'').replace(/^\\W|\\W$|\\W\\W/,'');\r\n            }\r\n\r\n            return date.format(formatMoment);\r\n        }\r\n\r\n            private formatDay(value: any, basicFormat: string): string {\r\n                var date: any,\r\n                    format = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat),\r\n                    formatMonthYearless = format.replace(/Y/g,'').replace(/^\\W|\\W$|\\W\\W/,'').replace(/M/g,'');\r\n\r\n                if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdate = moment(value);\r\n\r\n                return date.format(formatMonthYearless);\r\n            }\r\n\r\n            private formatMonthDay(value: any, basicFormat: string): string {\r\n                var date: any,\r\n                    format = basicFormat ? basicFormat : this._defaultFormat,\r\n                    formatLL = moment.localeData().longDateFormat(format),\r\n                    formatYearlessLL = formatLL.replace(/Y/g,'').replace(/^\\W|\\W$|\\W\\W/,'');\r\n\r\n                if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdate = moment(value);\r\n\r\n                return date.format(formatYearlessLL);\r\n            }\r\n\r\n            private formatRange(value1: any, value2: any, basicFormat: string): string {\r\n                var dateStart: any, \r\n                    dateEnd: any,\r\n                    format = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n                if (this.isUndefinedOrNull(value1)) { \r\n                    dateStart = null;\r\n                } else { \r\n                    dateStart = moment(value1);\r\n                }\r\n                if (this.isUndefinedOrNull(value2)) {\r\n\t\t\t\t\tdateEnd = null;\r\n\t\t\t\t} else { \r\n                    dateEnd = moment(value2);\r\n                }\r\n\r\n                if (dateStart === null && dateEnd === null) return '';\r\n\r\n                if  (dateStart === null) {\r\n                    return dateEnd.format(basicFormat);\r\n                } else if (dateEnd === null || dateStart.isSame(dateEnd)) {\r\n                    return dateStart.format(basicFormat);;\r\n                }\r\n\r\n                if (dateStart.isAfter(dateEnd)) {\r\n                    // todo localization\r\n                    throw new Error('Date range error. Start date is more than end date.');\r\n                }\r\n\r\n                if (dateStart.year() == dateEnd.year()) {\r\n                    if (dateStart.month() == dateEnd.month()) {\r\n                        return this.formatDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n                    } else {\r\n                        return this.formatMonthDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n                    }\r\n                } else {\r\n                    return dateStart.format(basicFormat) + '-' + dateEnd.format(basicFormat);\r\n                }                \r\n            }\r\n\r\n        private toStartRange(value: any, range: string): any {\r\n            var date: any;\r\n\r\n            if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tdate = moment(value);\r\n\t\t\tif (!date.isValid()) {\r\n\t\t\t\treturn '';\r\n\t\t\t}       \r\n\r\n            return date.startOf(range).toDate();    \r\n        }\r\n\r\n        private toEndRange(value: any, range: string, offset: number): any {\r\n            var date: any, \r\n                result: any,\r\n                mssOffset: number;\r\n\r\n            if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n            if (!angular.isNumber(offset)) {\r\n                mssOffset = 0;\r\n            }\r\n\r\n\t\t\tdate = moment(value);\r\n\t\t\tif (!date.isValid()) {\r\n\t\t\t\treturn '';\r\n\t\t\t}       \r\n\r\n            if (mssOffset) {\r\n                result = date.startOf(range).add(mssOffset, 'milliseconds');\r\n            } else {\r\n                result = date.startOf(range);\r\n            }\r\n\r\n            return date.startOf(range).toDate();    \r\n        }\r\n\r\n        public constructor() {};        \r\n\r\n        // formating functions \r\n        // -------------------\r\n\r\n        // todo Optional\r\n        public formatTime(value: any, format: string): string {\r\n            return this.formatDateTime(value, 'LLL');\r\n        }\r\n        // todo Optional\r\n        public formatDateOptional(value: any, format: string): string {\r\n            return this.formatDateTime(value, 'L');\r\n        }\r\n        \r\n        public formatShortDate(value: any): string {\r\n            return this.formatDateTime(value, 'L');\r\n        }\r\n\r\n        public formatLongDate(value: any): string {\r\n            return this.formatDateTime(value, 'LL');\r\n        }\r\n\r\n        public formatMonth(value: any): string {\r\n            return this.formatDateTime(value, 'MM');\r\n        }\r\n\r\n        public formatLongMonth(value: any): string {\r\n            return this.formatDateTime(value, 'MMMM');\r\n        }\r\n\r\n        public formatYear(value: any): string {\r\n            return this.formatDateTime(value, 'YYYY');\r\n        }\r\n\r\n        public formatWeek(value: any): string {\r\n            return this.formatDateTime(value, 'ww');\r\n        }\r\n\r\n        public formatShortWeek(value: any): string {\r\n            return this.formatDateTime(value, 'w');\r\n        }\r\n\r\n        public formatShortDateTime(value: any): string {\r\n            return this.formatDateTime(value, 'LLL');\r\n        }\r\n\r\n        public formatLongDateTime(value: any): string {\r\n            return this.formatDateTime(value, 'LLLL');\r\n        }\r\n\r\n        public formatShortTime(value: any): string {\r\n            return this.formatDateTime(value, 'LT');\r\n        }\r\n\r\n        public formatLongTime(value: any): string {\r\n            return this.formatDateTime(value, 'LTS');\r\n        }\r\n\r\n        public formatShortDayOfWeek(value: any): string {\r\n            return this.formatDateTime(value, 'dd');\r\n        }\r\n\r\n        public formatLongDayOfWeek(value: any): string {\r\n            return this.formatDateTime(value, 'dddd');\r\n        }\r\n\r\n        // numeric month writing formats\r\n        // --------------\r\n\r\n        // numeric month writing \r\n        public formatDateNumber(value: any): string {\r\n            return this.formatDateTime(value, 'l');\r\n        }\r\n        // numeric month writing \r\n        public formatLongDateNumber(value: any): string {\r\n            return this.formatDateTime(value, 'll');\r\n        }  \r\n\r\n        public formatTimeNumber(value: any): string {\r\n            return this.formatDateTime(value, 'LLL');\r\n        }\r\n\r\n        public formatLongTimeNumber(value: any): string {\r\n            return this.formatDateTime(value, 'LLLL');\r\n        }\r\n\r\n        public formatLongMonthDay(value: any): string {\r\n            return this.formatMonthDay(value, 'LL');\r\n        }\r\n\r\n        public formatShortMonthDay(value: any): string {\r\n            return this.formatMonthDay(value, 'L');        \r\n        }  \r\n\r\n        public formatDateRange(value1: any, value2: any): string {\r\n            return this.formatRange(value1, value2, 'LL');\r\n        } \r\n\r\n        public formatDateTimeRange(value1: any, value2: any): string {\r\n            return this.formatRange(value1, value2, 'LLL');\r\n        }    \r\n\r\n        // iso function\r\n        // --------------\r\n\r\n        public formatISOWeek(value: any): string {\r\n            return this.formatDateTime(value, 'WW');\r\n        }\r\n\r\n        public formatShortISOWeek(value: any): string {\r\n            return this.formatDateTime(value, 'W');\r\n        }\r\n\r\n        public formatISOWeekOrdinal(value: any): string {\r\n            return this.formatDateTime(value, 'Wo');\r\n        }        \r\n        // special formats \r\n        // --------------\r\n\r\n        // year option displays if the current year is not equal to, the date of \r\n        public formatDateY(value: any): string {\r\n            return this.formatDateTimeY(value, 'L');\r\n        }\r\n\r\n        // year option displays if the current year is not equal to, the date of\r\n        public formatLongDateY(value: any): string {\r\n            return this.formatDateTimeY(value, 'LL');\r\n        }\r\n\r\n        // todo\r\n        public formatMillisecondsToSeconds(value: any): string {\r\n            return '';\r\n        }\r\n\r\n        // todo\r\n        public formatElapsedInterval(value: any, start: any): string {\r\n            var date: any, \r\n                nowDate: any;\r\n            \r\n            if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n            if (this.isUndefinedOrNull(start)) {\r\n\t\t\t\tnowDate = moment();\r\n\t\t\t} else {\r\n                nowDate = moment(start);\r\n            }\r\n\r\n\t\t\tdate = moment(value);\r\n\t\t\tif (!date.isValid() || !nowDate.isValid()) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n             return moment(date).fromNow(nowDate);           \r\n        }\r\n\r\n        public getDateJSON(date: any): string {\r\n            return JSON.stringify(moment(date));                \r\n        }\r\n\r\n        // navigation functions \r\n        // ------------------\r\n\r\n        public getNextStart(value: any, category: string): any {\r\n                var date: any, \r\n                    range: string, \r\n                    result: any;\r\n\r\n                if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdate = moment(value);\r\n\t\t\t\tif (!date.isValid()) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n                range = this.getRange(category);\r\n                result = moment(date).startOf(range).add(this.getOperationRange(range));\r\n\r\n                return result.toDate();\r\n            }\r\n\r\n            public getPrevStart(value: any, category: string): any {\r\n                var date: any, \r\n                    range: string, \r\n                    result: any;\r\n\r\n                if (this.isUndefinedOrNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdate = moment(value);\r\n\t\t\t\tif (!date.isValid()) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n                range = this.getRange(category);\r\n                result = moment(date).startOf(range).add(-1, this.getOperationRange(range));\r\n\r\n                return result.toDate();\r\n            }\r\n\r\n            public getNowStart(category: string): any {\r\n                var date: any, \r\n                    range: string, \r\n                    result: any;\r\n\r\n\t\t\t\tdate = moment();\r\n\t\t\t\tif (!date.isValid()) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n                range = this.getRange(category) \r\n                result = moment(date).startOf(range);\r\n\r\n                return result.toDate();\r\n            }  \r\n\r\n            public addHours(value: any, hours: number): any {\r\n                var date: any;\r\n\r\n                if (this.isUndefinedOrNull(value) || !angular.isNumber(hours)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdate = moment(value);\r\n\t\t\t\tif (!date.isValid()) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\r\n                return date.add(hours, 'hours').toDate();\r\n            }  \r\n\r\n            public toStartDay(value: any): any {\r\n                return this.toStartRange(value, 'day');\r\n            }  \r\n\r\n            public toEndDay(value: any, offset: number): any {\r\n                return this.toEndRange(value, 'day', offset);\r\n            }  \r\n  \r\n            public toStartWeek(value: any): any {\r\n                return this.toStartRange(value, 'week');\r\n            }  \r\n\r\n            public toEndWeek(value: any, offset: number): any {\r\n                return this.toEndRange(value, 'week', offset);\r\n            }  \r\n\r\n            public toStartMonth(value: any): any {\r\n                return this.toStartRange(value, 'month');\r\n            }  \r\n\r\n            public toEndMonth(value: any, offset: number): any {\r\n                return this.toEndRange(value, 'month', offset);\r\n            }  \r\n\r\n            public toStartYear(value: any): any {\r\n                return this.toStartRange(value, 'year');\r\n            }  \r\n\r\n            public toEndYear(value: any, offset: number): any {\r\n                return this.toEndRange(value, 'year', offset);\r\n            }  \r\n\r\n    }\r\n\r\n    class DateTimeService {\r\n        private _datetime: DateTime;\r\n\r\n        public constructor(\r\n            datetime: DateTime,\r\n        ) {\r\n            this._datetime = datetime;\r\n        }\r\n\r\n        // todo Optional\r\n        public formatTime(value: any, format: string): string {\r\n            return this._datetime.formatTime(value, format);\r\n        }\r\n        // todo Optional\r\n        public formatDateOptional(value: any, format: string): string {\r\n            return this._datetime.formatDateOptional(value, format);\r\n        }\r\n\r\n        public formatShortDate(value: any): string {\r\n            return this._datetime.formatShortDate(value);\r\n        }\r\n\r\n        public formatLongDate(value: any): string {\r\n            return this._datetime.formatLongDate(value);\r\n        }\r\n\r\n        public formatMonth(value: any): string {\r\n            return this._datetime.formatMonth(value);\r\n        }\r\n\r\n        public formatLongMonth(value: any): string {\r\n            return this._datetime.formatLongMonth(value);\r\n        }\r\n\r\n        public formatYear(value: any): string {\r\n            return this._datetime.formatYear(value);\r\n        }\r\n\r\n        public formatWeek(value: any): string {\r\n            return this._datetime.formatWeek(value);\r\n        }\r\n\r\n        public formatShortWeek(value: any): string {\r\n            return this._datetime.formatShortWeek(value);\r\n        }\r\n\r\n        public formatShortDateTime(value: any): string {\r\n            return this._datetime.formatShortDateTime(value);\r\n        }\r\n\r\n        public formatLongDateTime(value: any): string {\r\n            return this._datetime.formatLongDateTime(value);\r\n        }\r\n\r\n        public formatShortTime(value: any): string {\r\n            return this._datetime.formatShortTime(value);\r\n        }\r\n\r\n        public formatLongTime(value: any): string {\r\n            return this._datetime.formatLongTime(value);\r\n        }\r\n\r\n        public formatShortDayOfWeek(value: any): string {\r\n            return this._datetime.formatShortDayOfWeek(value);\r\n        }\r\n\r\n        public formatLongDayOfWeek(value: any): string {\r\n            return this._datetime.formatLongDayOfWeek(value);\r\n        }\r\n\r\n        // numeric month writing formats\r\n        // --------------\r\n\r\n        // numeric month writing \r\n        public formatDateNumber(value: any): string {\r\n            return this._datetime.formatDateNumber(value);\r\n        }\r\n        // numeric month writing \r\n        public formatLongDateNumber(value: any): string {\r\n            return this._datetime.formatLongDateNumber(value);\r\n        }  \r\n\r\n        public formatTimeNumber(value: any): string {\r\n            return this._datetime.formatTimeNumber(value);\r\n        }\r\n\r\n        public formatLongTimeNumber(value: any): string {\r\n            return this._datetime.formatLongTimeNumber(value);\r\n        }\r\n\r\n        public formatLongMonthDay(value: any): string {\r\n            return this._datetime.formatLongMonthDay(value);\r\n        }\r\n\r\n        public formatShortMonthDay(value: any): string {\r\n            return this._datetime.formatShortMonthDay(value);        \r\n        }  \r\n\r\n        public formatDateRange(value1: any, value2: any): string {\r\n            return this._datetime.formatDateRange(value1, value2);\r\n        } \r\n\r\n        public formatDateTimeRange(value1: any, value2: any): string {\r\n            return this._datetime.formatDateTimeRange(value1, value2);\r\n        }    \r\n\r\n        // iso function\r\n        // --------------\r\n\r\n        public formatISOWeek(value: any): string {\r\n            return this._datetime.formatISOWeek(value);\r\n        }\r\n\r\n        public formatShortISOWeek(value: any): string {\r\n            return this._datetime.formatShortISOWeek(value);\r\n        }\r\n\r\n        public formatISOWeekOrdinal(value: any): string {\r\n            return this._datetime.formatISOWeekOrdinal(value);\r\n        }        \r\n        // special formats \r\n        // --------------\r\n\r\n        // year option displays if the current year is not equal to, the date of \r\n        public formatDateY(value: any): string {\r\n            return this._datetime.formatDateY(value);\r\n        }\r\n\r\n        // year option displays if the current year is not equal to, the date of\r\n        public formatLongDateY(value: any): string {\r\n            return this._datetime.formatLongDateY(value);\r\n        }\r\n\r\n        // todo\r\n        public formatMillisecondsToSeconds(value: any) {\r\n            return this._datetime.formatMillisecondsToSeconds(value);\r\n        }\r\n\r\n        // todo\r\n        public formatElapsedInterval(value: any, start: any): string {\r\n            return this._datetime.formatElapsedInterval(value, start);         \r\n        }\r\n\r\n        public getDateJSON(date: any): string {\r\n            return this._datetime.getDateJSON(date);                \r\n        }\r\n\r\n        // navigation functions \r\n        // ------------------\r\n\r\n        public getNextStart(value: any, category: string): any {\r\n            return this._datetime.getNextStart(value, category);\r\n        }\r\n\r\n        public getPrevStart(value: any, category: string): any {\r\n            return this._datetime.getPrevStart(value, category);\r\n        }\r\n\r\n        public getNowStart(category: string): any {\r\n            return this._datetime.getNowStart(category);\r\n        }\r\n\r\n        public addHours(value: any, hours: number): any {\r\n            return this._datetime.addHours(value, hours);\r\n        } \r\n\r\n        public toStartDay(value: any): any {\r\n            return this._datetime.toStartDay(value);\r\n        } \r\n\r\n        public toEndDay(value: any, offset: number): any {\r\n            return this._datetime.toEndDay(value, offset);\r\n        } \r\n  \r\n        public toStartWeek(value: any): any {\r\n            return this._datetime.toStartWeek(value);\r\n        } \r\n\r\n        public toEndWeek(value: any, offset: number): any {\r\n            return this._datetime.toEndWeek(value, offset);\r\n        } \r\n\r\n        public toStartMonth(value: any): any {\r\n            return this._datetime.toStartMonth(value);\r\n        } \r\n\r\n        public toEndMonth(value: any, offset: number): any {\r\n            return this._datetime.toEndMonth(value, offset);\r\n        } \r\n\r\n        public toStartYear(value: any): any {\r\n            return this._datetime.toStartYear(value);\r\n        } \r\n\r\n        public toEndYear(value: any, offset: number): any {\r\n            return this._datetime.toEndYear(value, offset);\r\n        }  \r\n\r\n    }\r\n\r\n    class DateTimeProvider extends DateTime implements IDateTimeProvider {\r\n        private _translation: DateTime;\r\n        private _service: DateTimeService;\r\n        \r\n        public constructor() {\r\n            super();\r\n        }\r\n\r\n        public $get(): any {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null) \r\n                this._service = new DateTimeService(this);\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDateTime.Service', [])\r\n        .provider('pipDateTime', DateTimeProvider);\r\n\r\n}","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDate', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDate',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    ngChange: '&'\r\n                },\r\n                templateUrl: 'date_directive/date.html',\r\n                controller: 'pipDateController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateController',\r\n        function ($scope, $element, $injector) { //pipTranslate\r\n            var value,\r\n                localeDate = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    DAY: 'Day',\r\n                    MONTH: 'Month',\r\n                    YEAR: 'Year'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    DAY: 'День',\r\n                    MONTH: 'Месяц',\r\n                    YEAR: 'Год'                    \r\n                });\r\n                $scope.dayLabel = pipTranslate.translate('DAY');\r\n                $scope.monthLabel = pipTranslate.translate('MONTH');\r\n                $scope.yearLabel = pipTranslate.translate('YEAR');\r\n            } else {\r\n                $scope.dayLabel = 'Day';\r\n                $scope.monthLabel = 'Month';                \r\n                $scope.yearLabel = 'Year';\r\n\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count = 31, days = [], i;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var i,\r\n                    currentYear = new Date().getFullYear(),\r\n                    startYear = $scope.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                    endYear = $scope.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                    years = [];\r\n\r\n                if ($scope.timeMode === 'past') {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                if ($scope.days.length !== days.length) {\r\n                    if ($scope.day > days.length) {\r\n                        $scope.day = days.length;\r\n                    }\r\n\r\n                    $scope.days = days;\r\n                }\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                    day = value ? value.getDate() : null,\r\n                    month = value ? value.getMonth() + 1 : null,\r\n                    year = value ? value.getFullYear() : null;\r\n\r\n                // Update day list if month and year were changed\r\n                if ($scope.month !== month && $scope.year !== year) {\r\n                    $scope.days = dayList($scope.month, $scope.year);\r\n                }\r\n\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.day && $scope.month && $scope.year) {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    $scope.model = value;\r\n                    $scope.ngChange();\r\n                }\r\n            }\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            // Set initial values\r\n            value = $scope.model ? _.isDate($scope.model) ? $scope.model : new Date($scope.model) : null;\r\n            $scope.day = value ? value.getDate() : null;\r\n            $scope.month = value ? value.getMonth() + 1 : null;\r\n            $scope.year = value ? value.getFullYear() : null;\r\n\r\n\r\n\r\n            $scope.days = dayList($scope.month, $scope.year);\r\n            $scope.months = monthList();\r\n            $scope.years = yearList();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue) {\r\n                getValue(newValue);\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n        }\r\n    );\r\n\r\n})(window.angular, window._);\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n    var thisModule = angular.module('pipDateRange', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDateRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    pipChanged: '&',\r\n                    pipDateRangeType: '@',\r\n                    pipDateFormat: '@',\r\n                    pipNoLine: '@'\r\n                },\r\n                templateUrl: 'date_range_directive/date_range.html',\r\n                controller: 'pipDateRangeController'\r\n            };\r\n        });\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateRangeController',\r\n        function ($scope, $element, $mdMedia, $rootScope, $injector) { //pipTranslate, \r\n            var currentDate,\r\n                currentYear,\r\n                currentMonth,\r\n                currentDay,\r\n                prevState = {}, currentState = {},\r\n                localeDate = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            // var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            // if (pipTranslate) {\r\n            //     pipTranslate.setTranslations('en', {\r\n            //         EVENT_NEW_START_TIME: 'Start time',\r\n            //         EVENT_NEW_END_TIME: 'End time'\r\n            //     });\r\n            //     pipTranslate.setTranslations('ru', {\r\n            //         EVENT_NEW_START_TIME: 'Начало',\r\n            //         EVENT_NEW_END_TIME: 'Конец'                \r\n            //     });\r\n            //     $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n            //     $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            // } else {\r\n            //     $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n            //     $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            // }\r\n\r\n            currentDate = new Date();\r\n            currentYear = currentDate.getUTCFullYear();\r\n            currentMonth = currentDate.getUTCMonth() + 1;\r\n            currentDay = currentDate.getUTCDate();\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    var date, dayOfWeek;\r\n\r\n                    date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                    dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                var date, dayOfWeek;\r\n\r\n                date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onWeekChange = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            // visibility\r\n            $scope.isDay = function () {\r\n                return $scope.pipDateRangeType === 'daily';\r\n            };\r\n\r\n            $scope.isWeek = function () {\r\n                return $scope.pipDateRangeType === 'weekly';\r\n            };\r\n\r\n            $scope.isMonth = function () {\r\n                return $scope.pipDateRangeType === 'daily' ||\r\n                    $scope.pipDateRangeType === 'weekly' ||\r\n                    $scope.pipDateRangeType === 'monthly';\r\n            };\r\n\r\n            $scope.onChange = function () {\r\n                if ($scope.pipChanged) {\r\n                    $scope.pipChanged();\r\n                }\r\n            };\r\n\r\n            function setCurrent() {\r\n                currentState.day = $scope.day;\r\n                currentState.month = $scope.month;\r\n                currentState.year = $scope.year;\r\n                currentState.week = $scope.week;\r\n                currentState.dateRangeType = $scope.pipDateRangeType;\r\n                currentState.model = $scope.model;\r\n            }\r\n\r\n            function fillLists() {\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n                $scope.months = monthList();\r\n                $scope.shortMonths = monthList(true);\r\n                $scope.years = yearList();\r\n\r\n            }\r\n\r\n            function correctWeek() {\r\n                if (!prevState.model || prevState.model && prevState.model.getTime() >= $scope.model.getTime()) {\r\n                    // if shift week -> increase month\r\n                    if ($scope.weeks && $scope.weeks[$scope.week] && $scope.weeks[$scope.week].id <= 0) {\r\n                        if ($scope.month < 12) {\r\n                            $scope.month += 1;\r\n                        } else {\r\n                            $scope.month = 1;\r\n                            $scope.year += 1;\r\n                        }\r\n                        fillLists();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function init() {\r\n                var value;\r\n\r\n                value = $scope.model ? new Date($scope.model) : null;\r\n                $scope.day = value ? value.getUTCDate() : null;\r\n                $scope.month = value ? value.getUTCMonth() + 1 : null;\r\n                $scope.year = value ? value.getUTCFullYear() : null;\r\n                $scope.week = value ? getWeekByDate($scope.day, $scope.month - 1, $scope.year) : null;\r\n\r\n                fillLists();\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            }\r\n\r\n            // Set initial values\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    getValue(newValue);\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            $scope.$watch('pipDateRangeType', function (newValue, oldValue) {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    init();\r\n                }\r\n            });\r\n\r\n            $scope.onYearClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.year = currentYear;\r\n                }\r\n            };\r\n\r\n            $scope.onMonthClick = function () {\r\n                if (!$scope.month) {\r\n                    $scope.month = currentMonth;\r\n                }\r\n            };\r\n\r\n            $scope.onDayClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.day = currentDay;\r\n                }\r\n            };\r\n            // ---------------------------------------------------------------------------------------\r\n\r\n            function getCountDay(month, year) {\r\n                var count = 31;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count, days, i, ln;\r\n\r\n              //  ln = $rootScope.$language || 'en';\r\n                count = getCountDay(month, year);\r\n                $scope.nameDays = [];\r\n                days = [];\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                    $scope.nameDays.push(momentShortDays[moment([year, month - 1, i]).weekday()]);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function getWeekByDate(day, month, year) {\r\n                var date, dayOfWeek, startWeek;\r\n\r\n                date = new Date(Date.UTC(year, month, day));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n                if (dayOfWeek === 1) {\r\n                    startWeek = day;\r\n                } else {\r\n                    startWeek = day + 1 - dayOfWeek;\r\n                }\r\n\r\n                return startWeek;\r\n            }\r\n\r\n            function getWeek(day, countDay, countPrevMonthDay) {\r\n                var endDay, startDay;\r\n\r\n                endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n                startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n                return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n            }\r\n\r\n            function weekList(month, year) { // возвращает список начала надели\r\n                var weeks, countDay, countPrevMonthDay, startWeek;\r\n\r\n                weeks = [];  // в массиве первые дни недели в текущем месяце\r\n                countDay = getCountDay(month, year);\r\n                startWeek = getWeekByDate(1, month - 1, year);\r\n\r\n                countPrevMonthDay = month - 1 ? getCountDay(month - 1, year) : getCountDay(12, year - 1);\r\n                while (startWeek < countDay + 1) {\r\n                    weeks.push({\r\n                        id: startWeek,\r\n                        name: getWeek(startWeek, countDay, countPrevMonthDay)\r\n                    });\r\n                    startWeek = startWeek + 7;\r\n                }\r\n\r\n                return weeks;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var startYear, i,\r\n                    endYear,\r\n                    years = [];\r\n\r\n                switch ($scope.timeMode) {\r\n                    case 'future':\r\n                        startYear = currentYear;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    case 'past':\r\n                        startYear = currentYear - 100;\r\n                        endYear = currentYear;\r\n                        break;\r\n                    case 'now':\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    default:\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 50;\r\n                        break;\r\n                }\r\n                if ($scope.timeMode === 'future') {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                switch ($scope.pipDateRangeType) {\r\n                    case 'monthly':\r\n                        $scope.day = 1;\r\n                        break;\r\n                    case 'yearly':\r\n                        $scope.month = 1;\r\n                        $scope.day = 1;\r\n                        break;\r\n                    default:\r\n                        if ($scope.days.length !== days.length) {\r\n                            if ($scope.day > days.length) {\r\n                                $scope.day = days.length;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                $scope.days = days;\r\n            }\r\n\r\n            function adjustWeek() {\r\n                var weeks;\r\n\r\n                weeks = weekList($scope.month, $scope.year);\r\n                $scope.week = getWeekByDate($scope.week, $scope.month - 1, $scope.year);\r\n                $scope.weeks = weeks;\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value, day, month, year, week;\r\n\r\n                value = v ? new Date(v) : null;\r\n                // Define values\r\n                day = value ? value.getUTCDate() : null;\r\n                month = value ? value.getUTCMonth() + 1 : null;\r\n                year = value ? value.getUTCFullYear() : null;\r\n                week = value ? getWeekByDate(day, month - 1, year) : null;\r\n                // Exit if nothing to update\r\n                if ($scope.day === day && $scope.month === month && $scope.year === year && $scope.week === week) {\r\n                    return;\r\n                }\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n                $scope.week = week;\r\n\r\n                // Define data sources\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.week, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                } else {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                }\r\n\r\n                prevState = _.cloneDeep(currentState);\r\n                setCurrent();\r\n                $scope.onChange();\r\n            }\r\n        }\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRange', []);\r\n\r\n    thisModule.directive('pipTimeRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipEndDate: '='\r\n                },\r\n                templateUrl: 'time_range_directive/time_range.html',\r\n                link: function ($scope, $element, $attrs) {\r\n\r\n                    function getDateJSON(value) {\r\n                        return value ? new Date(value) : null;\r\n                    }\r\n\r\n                    function defineStartDate() {\r\n                        if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                            $scope.data.start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate\r\n                                : getDateJSON($scope.pipStartDate);\r\n                        }\r\n                    }\r\n\r\n                    function defineEndDate() {\r\n                        if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                            $scope.data.end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate\r\n                                : getDateJSON($scope.pipEndDate);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    $scope.data = {};\r\n                    $scope.data.start = null;\r\n                    $scope.data.end = null;\r\n                    defineStartDate();\r\n                    defineEndDate();\r\n\r\n                    if (toBoolean($attrs.pipRebind)) {\r\n                        $scope.$watch('pipStartDate',\r\n                            function () {\r\n                                $scope.data.start = null;\r\n                                defineStartDate();\r\n                            }\r\n                        );\r\n                        $scope.$watch('pipEndDate',\r\n                            function () {\r\n                                $scope.data.end = null;\r\n                                defineEndDate();\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-time-range');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRangeEdit', []);\r\n\r\n    thisModule.directive('pipTimeRangeEdit',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipChanged: '&',\r\n                    pipEndDate: '=',\r\n                    pipStartLabel: '@',\r\n                    pipEndLabel: '@',\r\n                    disabled: '&ngDisabled',\r\n                    pipSize: '='\r\n                },\r\n                templateUrl: 'time_range_edit_directive/time_range_edit.html',\r\n                controller: 'pipTimeRangeEditController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipTimeRangeEditController',\r\n        function ($scope, $element, $attrs, $injector, pipDateTime) { //pipTranslate\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    EVENT_NEW_START_TIME: 'Start time',\r\n                    EVENT_NEW_END_TIME: 'End time'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    EVENT_NEW_START_TIME: 'Начало',\r\n                    EVENT_NEW_END_TIME: 'Конец'                \r\n                });\r\n                $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n                $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            } else {\r\n                $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n                $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            }\r\n\r\n            function getDateJSON(value) {\r\n                return value ? new Date(value) : null;\r\n            }\r\n\r\n            function setDuration() {\r\n                var start, end;\r\n\r\n                if (!$scope.data.startDate || !$scope.data.endDate) {\r\n                    return null;\r\n                }\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                return end - start;\r\n            }\r\n\r\n            function validateStartDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано начальное время - задаем его\r\n                if (!$scope.data.startTime) {\r\n                    if (!$scope.data.endTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.startTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.startTime = $scope.data.endTime === 0 ? 0 : $scope.data.endTime - 30;\r\n                    }\r\n                }\r\n\r\n                // если конечная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if ($scope.data.duration) {\r\n                    end = new Date(start.getTime() + $scope.data.duration);\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    end = end.getTime() - $scope.data.endDate.getTime();\r\n                    $scope.data.endTime = Math.floor(end / (30 * 60 * 1000)) * 30;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        $scope.data.endDate = pipDateTime.toStartDay(new Date(start.getTime() + 30 * 60000));\r\n                        $scope.data.endTime = ($scope.data.startTime + 30) % 1440;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function validateEndDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано конечное время - задаем его\r\n                if (!$scope.data.endTime) {\r\n                    if (!$scope.data.startTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.endTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.endTime = $scope.data.startTime === 1410 ? 1410 : $scope.data.startTime + 30;\r\n                    }\r\n                }\r\n\r\n                // если yачальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                if (start >= end) {\r\n                    // Если начальная дата больше, то двигаем начальную дату\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date(end.getTime() - 30 * 60000));\r\n                    $scope.data.startTime = $scope.data.endTime % 1440 === 0 ? 1410 : $scope.data.endTime - 30;\r\n                }\r\n\r\n                $scope.data.duration = setDuration();\r\n            }\r\n\r\n            function setDate() {\r\n                var time;\r\n\r\n                $scope.data.bind = false;\r\n\r\n                if ($scope.data.startDate) {\r\n                    time = $scope.data.startTime ? $scope.data.startTime * 60 * 1000 : 0;\r\n                    $scope.pipStartDate = new Date($scope.data.startDate.getTime() + time);\r\n                }\r\n\r\n                if ($scope.data.endDate) {\r\n                    time = $scope.data.endTime ? $scope.data.endTime * 60 * 1000 : 0;\r\n                    $scope.pipEndDate = new Date($scope.data.endDate.getTime() + time);\r\n                }\r\n\r\n                $scope.data.bind = true;\r\n            }\r\n\r\n            function defineDate() {\r\n                var start, end;\r\n\r\n                if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                    start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate : null;\r\n\r\n                    if (!start) {\r\n                        start = getDateJSON($scope.pipStartDate);\r\n                    }\r\n\r\n                    $scope.data.startDate = pipDateTime.toStartDay(start);\r\n                    $scope.data.startTime = (new Date(start) - $scope.data.startDate) / (60 * 1000);\r\n                }\r\n\r\n                if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                    end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate : null;\r\n\r\n                    if (!start) {\r\n                        end = getDateJSON($scope.pipEndDate);\r\n                    }\r\n\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    $scope.data.endTime = (new Date(end) - $scope.data.endDate) / (60 * 1000);\r\n                }\r\n\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n            }\r\n\r\n            function getTimeInterval() {\r\n                var result, i, j, minutes;\r\n\r\n                result = [];\r\n                for (i = 0; i < 24; i++) {\r\n                    for (j = 0; j < 2; j++) {\r\n                        minutes = j * 30;\r\n                        result.push({\r\n                            id: i * 60 + minutes,\r\n                            time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function initDate() {\r\n                $scope.data.startDate = null;\r\n                $scope.data.startTime = null;\r\n                $scope.data.endDate = null;\r\n                $scope.data.endTime = null;\r\n                $scope.data.duration = null;\r\n            }\r\n\r\n            // initialize data\r\n            $scope.intervalTimeCollection = getTimeInterval();\r\n            $scope.data = {};\r\n            initDate();\r\n            defineDate();\r\n\r\n            // process function\r\n            $scope.onChangeStartDate = function () {\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndDate = function () {\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeStartTime = function () {\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndTime = function () {\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.isDisabled = function () {\r\n                if ($scope.disabled) {\r\n                    return $scope.disabled();\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            $scope.$watchGroup([$scope.pipStartDate, $scope.pipEndDate], function () {\r\n                if ($scope.data.bind) {\r\n                    initDate();\r\n                    defineDate();\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }\r\n    );\r\n\r\n})(window.angular, window._);\r\n"]}