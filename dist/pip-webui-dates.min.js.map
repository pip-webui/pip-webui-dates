{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/date/date.ts","src/date/date_filter.ts","src/date/date_service.ts","src/date_directive/date.ts","src/date_range_directive/date_range.ts","src/dates.ts","src/dependencies/translate.js","src/time_range_directive/time_range.ts","src/time_range_edit_directive/time_range_edit.ts","temp/pip-webui-dates-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","dates","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","angular","formatTimeFilter","pipDateTime","value","format","formatTime","formatDateOptionalFilter","formatDateOptional","formatLongDateFilter","formatLongDate","formatShortDateFilter","formatShortDate","formatMiddleDateFilter","formatMiddleDate","formatMonthFilter","formatMonth","formatLongMonthFilter","formatLongMonth","formatYearFilter","formatYear","formatWeekFilter","formatWeek","formatShortWeekFilter","formatShortWeek","formatShortDateTimeFilter","formatShortDateTime","formatMiddleDateTimeFilter","formatMiddleDateTime","formatLongDateTimeFilter","formatLongDateTime","formatShortDateLongTimeFilter","firstTime","formatShortDateLongTime","formatMiddleDateLongTimeFilter","formatMiddleDateLongTime","formatLongDateLongTimeFilter","formatLongDateLongTime","formatFullDateTimeFilter","formatFullDateTime","formatShortTimeFilter","formatShortTime","formatLongTimeFilter","formatLongTime","formatShortDayOfWeekFilter","formatShortDayOfWeek","formatLongDayOfWeekFilter","formatLongDayOfWeek","formatLongMonthDayFilter","formatLongMonthDay","formatShortMonthDayFilter","formatShortMonthDay","formatDateRangeFilter","value1","value2","formatDateRange","formatDateTimeRangeFilter","formatDateTimeRange","formatISOWeekFilter","formatISOWeek","formatShortISOWeekFilter","formatShortISOWeek","formatISOWeekOrdinalFilter","formatISOWeekOrdinal","formatDateYFilter","formatDateY","formatLongDateYFilter","formatLongDateY","formatTodayDateLongTimeLongFilter","formatTodayDateLongTimeLong","formatTodayDateShortTimeLongFilter","formatTodayDateShortTimeLong","formatTodayDateLongTimeShortFilter","formatTodayDateLongTimeShort","formatTodayDateShortTimeShortFilter","formatTodayDateShortTimeShort","formatMillisecondsToSecondsFilter","formatMillisecondsToSeconds","formatElapsedIntervalFilter","start","formatElapsedInterval","getDateJSONFilter","getDateJSON","$inject","filter","__extends","d","b","__","constructor","p","hasOwnProperty","Object","create","prototype","DateTimeConfig","DateTime","config","_momentRanged","Array","_defaultFormat","_config","timeZone","isUndefinedOrNull","isUndefined","getRange","index","indexOf","getOperationRange","range","formatDateTime","basicFormat","date","formatTpl","moment","utcOffset","isValid","formatDateTimeY","nowDate","formatMoment","localeData","longDateFormat","year","replace","formatDay","formatMonthYearless","formatMonthDay","formatLL","formatYearlessLL","formatRange","dateStart","dateEnd","isSame","isAfter","month","toStartRange","startOf","toDate","toEndRange","offset","result","mssOffset","isNumber","add","toDateWithTime","formatDate","toTodayDate","day","defineProperty","get","enumerable","configurable","useTimeZone","fromNow","JSON","stringify","getNextStart","category","getPrevStart","getNowStart","addHours","hours","toStartDay","toEndDay","toStartWeek","toEndWeek","toStartMonth","toEndMonth","toStartYear","toEndYear","DateTimeService","datetime","_datetime","_super","DateTimeProvider","$get","_service","thisModule","directive","restrict","scope","timeMode","disabled","ngChange","$scope","$element","$injector","count","days","push","monthList","months","id","name","momentMonths","yearList","currentYear","Date","getFullYear","startYear","endYear","years","adjustDay","dayList","getValue","v","_","isDate","getDate","getMonth","setValue","model","localeDate","isArray","_months","pipTranslate","_weekdays","_weekdaysMin","_week","dow","has","setTranslations","DAY","MONTH","YEAR","dayLabel","translate","monthLabel","yearLabel","onYearChanged","disableControls","$watch","newValue","pipChanged","pipDateRangeType","pipDateFormat","pipNoLine","controller","$mdMedia","$rootScope","setCurrent","currentState","week","dateRangeType","fillLists","weeks","weekList","shortMonths","correctWeek","prevState","getTime","init","getUTCDate","getUTCMonth","getUTCFullYear","getWeekByDate","adjustWeek","getCountDay","nameDays","momentShortDays","weekday","dayOfWeek","startWeek","UTC","getUTCDay","countDay","countPrevMonthDay","endDay","startDay","toString","Math","abs","getWeek","getTimezoneOffset","cloneDeep","onChange","currentDate","currentMonth","currentDay","onMonthChanged","onWeekChange","isMonth","oldValue","onMonthClick","onDayClick","6","key","$attrs","defineStartDate","pipStartDate","undefined","data","defineEndDate","pipEndDate","end","toBoolean","toLowerCase","pipRebind","addClass","pipStartLabel","pipEndLabel","pipSize","templateUrl","setDuration","startDate","endDate","startTime","endTime","validateStartDate","floor","duration","validateEndDate","setDate","time","bind","defineDate","getTimeInterval","j","minutes","pad","substr","initDate","EVENT_NEW_END_TIME","startLabel","endLabel","intervalTimeCollection","onChangeStartDate","onChangeEndDate","onChangeStartTime","onChangeEndTime","isDisabled","$watchGroup","10","run","$templateCache","put"],"mappings":"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","file":"pip-webui-dates.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nangular.module('pipDateTime', [\r\n    'pipDateTime.Service', 'pipDateTime.Filter'\r\n]);\r\n","'use strict';\r\n\r\nfunction formatTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";\r\n\r\n    return function (value: any, format: string): string {\r\n        return pipDateTime.formatTime(value, format);\r\n    }\r\n}\r\n\r\nfunction formatDateOptionalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, format: string): string {\r\n        return pipDateTime.formatDateOptional(value, format);\r\n    }\r\n}\r\n\r\nfunction formatLongDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDate(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMiddleDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMonthFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any) {\r\n        return pipDateTime.formatMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatYearFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatYear(value);\r\n    }\r\n}\r\n\r\nfunction formatWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMiddleDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatShortDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatLongDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatLongDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatFullDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatFullDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDayOfWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDayOfWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthDayFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatShortMonthDayFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatDateRangeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value1: any, value2: any): string {\r\n        return pipDateTime.formatDateRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatDateTimeRangeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value1: any, value2: any): string {\r\n        return pipDateTime.formatDateTimeRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortISOWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekOrdinalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatISOWeekOrdinal(value);\r\n    }\r\n}\r\n\r\nfunction formatDateYFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateYFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeLongFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateLongTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeLongFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateShortTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeShortFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateLongTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeShortFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateShortTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatMillisecondsToSecondsFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMillisecondsToSeconds(value);\r\n    }\r\n}\r\n\r\nfunction formatElapsedIntervalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, start: any): string {\r\n        return pipDateTime.formatElapsedInterval(value, start);\r\n    }\r\n}\r\n\r\nfunction getDateJSONFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.getDateJSON(value);\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDateTime.Filter', [])\r\n    .filter('formatTime', formatTimeFilter)\r\n    .filter('formatDateOptional', formatDateOptionalFilter)\r\n    .filter('formatShortDate', formatShortDateFilter)\r\n    .filter('formatMiddleDate', formatMiddleDateFilter)\r\n    .filter('formatLongDate', formatLongDateFilter)\r\n    .filter('formatMonth', formatMonthFilter)\r\n    .filter('formatLongMonth', formatLongMonthFilter)\r\n    .filter('formatYear', formatYearFilter)\r\n    .filter('formatWeek', formatWeekFilter)\r\n    .filter('formatShortWeek', formatShortWeekFilter)\r\n    .filter('formatShortDateTime', formatShortDateTimeFilter)\r\n    .filter('formatMiddleDateTime', formatMiddleDateTimeFilter)    \r\n    .filter('formatLongDateTime', formatLongDateTimeFilter)\r\n    .filter('formatShortDateLongTime', formatShortDateLongTimeFilter)\r\n    .filter('formatMiddleDateLongTime', formatMiddleDateLongTimeFilter)    \r\n    .filter('formatLongDateLongTime', formatLongDateLongTimeFilter)    \r\n    .filter('formatFullDateTime', formatFullDateTimeFilter)\r\n    .filter('formatShortTime', formatShortTimeFilter)\r\n    .filter('formatLongTime', formatLongTimeFilter)\r\n    .filter('formatShortDayOfWeek', formatShortDayOfWeekFilter)\r\n    .filter('formatLongDayOfWeek', formatLongDayOfWeekFilter)\r\n    .filter('formatLongMonthDay', formatLongMonthDayFilter)\r\n    .filter('formatShortMonthDay', formatShortMonthDayFilter)\r\n    .filter('formatDateRange', formatDateRangeFilter)\r\n    .filter('formatDateTimeRange', formatDateTimeRangeFilter)\r\n    .filter('formatISOWeek', formatISOWeekFilter)\r\n    .filter('formatShortISOWeek', formatShortISOWeekFilter)\r\n    .filter('formatISOWeekOrdinal', formatISOWeekOrdinalFilter)\r\n    .filter('formatDateY', formatDateYFilter)\r\n    .filter('formatLongDateY', formatLongDateYFilter)\r\n    .filter('formatTodayDateLongTimeLong', formatTodayDateLongTimeLongFilter)\r\n    .filter('formatTodayDateShortTimeLong', formatTodayDateShortTimeLongFilter)\r\n    .filter('formatTodayDateLongTimeShort', formatTodayDateLongTimeShortFilter)\r\n    .filter('formatTodayDateShortTimeShort', formatTodayDateShortTimeShortFilter)\r\n    .filter('formatMillisecondsToSeconds', formatMillisecondsToSecondsFilter)\r\n    .filter('formatElapsedInterval', formatElapsedIntervalFilter);\r\n","'use strict';\r\n\r\nexport class DateTimeConfig {\r\n    timeZone: number;\r\n}\r\n\r\nexport interface IDateTimeService {\r\n    readonly config: DateTimeConfig;\r\n    useTimeZone(offset: number);\r\n\r\n    formatTime(value: any, format: string): string;\r\n    formatDateOptional(value: any, format: string): string;\r\n    formatShortDate(value: any): string;\r\n    formatMiddleDate(value: any): string;\r\n    formatLongDate(value: any): string;\r\n    formatMonth(value: any): string;\r\n    formatLongMonth(value: any): string;\r\n    formatYear(value: any): string;\r\n    formatWeek(value: any): string;\r\n    formatShortWeek(value: any): string;\r\n    formatShortDateTime(value: any): string;\r\n    formatMiddleDateTime(value: any): string;    \r\n    formatLongDateTime(value: any): string;\r\n    formatFullDateTime(value: any): string;\r\n    formatShortDateLongTime(value: any, firstTime?: boolean): string;\r\n    formatMiddleDateLongTime(value: any, firstTime?: boolean): string;    \r\n    formatLongDateLongTime(value: any, firstTime?: boolean): string;    \r\n    formatShortTime(value: any): string;\r\n    formatLongTime(value: any): string;\r\n    formatShortDayOfWeek(value: any): string;\r\n    formatLongDayOfWeek(value: any): string;\r\n    formatLongMonthDay(value: any): string;\r\n    formatShortMonthDay(value: any): string;\r\n    formatDateRange(value1: any, value2: any): string;\r\n    formatDateTimeRange(value1: any, value2: any): string;\r\n    formatISOWeek(value: any): string;\r\n    formatShortISOWeek(value: any): string;\r\n    formatISOWeekOrdinal(value: any): string;\r\n    formatDateY(value: any): string;\r\n    formatLongDateY(value: any): string;\r\n    formatTodayDateLongTimeLong(value: any): string;\r\n    formatTodayDateShortTimeLong(value: any): string;\r\n    formatTodayDateLongTimeShort(value: any): string;\r\n    formatTodayDateShortTimeShort(value: any): string;\r\n    formatMillisecondsToSeconds(value: any): string;\r\n    formatElapsedInterval(value: any, start: any): string;\r\n\r\n    getDateJSON(date: any): string;\r\n    getNextStart(value: any, category: string): any;\r\n    getPrevStart(value: any, category: string): any;\r\n    getNowStart(category: string): any;\r\n\r\n    addHours(value: any, hours: number): any;\r\n    toStartDay(value: any): any;\r\n    toEndDay(value: any, offset: number): any;\r\n    toStartWeek(value: any): any;\r\n    toEndWeek(value: any, offset: number): any;\r\n    toStartMonth(value: any): any;\r\n    toEndMonth(value: any, offset: number): any;\r\n    toStartYear(value: any): any;\r\n    toEndYear(value: any, offset: number): any;\r\n \r\n}\r\n\r\nexport interface IDateTimeProvider extends IDateTimeService, ng.IServiceProvider {\r\n\r\n}\r\n\r\nclass DateTime implements IDateTimeService {\r\n    private _config: DateTimeConfig;\r\n    protected _momentRanged = new Array('year', 'month', 'week', 'isoweek', 'day');\r\n    protected _defaultFormat = 'LL'\r\n\r\n    private isUndefinedOrNull(value: any): boolean {\r\n        return angular.isUndefined(value) || value === null;\r\n    }\r\n\r\n    private getRange(value: string): string {\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return 'day';\r\n        }\r\n\r\n        let index = this._momentRanged.indexOf(value)\r\n\r\n        if (index < 0) {\r\n            return 'day'\r\n        } else {\r\n            return this._momentRanged[index];\r\n        }\r\n    }\r\n\r\n    private getOperationRange(value: string): string {\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return 'day';\r\n        }\r\n\r\n        let range = value == 'isoweek' ? 'week' : value,\r\n            index = this._momentRanged.indexOf(range)\r\n\r\n        if (index < 0) {\r\n            return 'day'\r\n        } else {\r\n            return this._momentRanged[index];\r\n        }\r\n    }\r\n\r\n    private formatDateTime(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            formatTpl: string;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        formatTpl = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n        return date.format(formatTpl);\r\n    }\r\n\r\n    private formatDateTimeY(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            nowDate: any,\r\n            formatMoment: string;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n        formatMoment = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat);\r\n\r\n        if (nowDate.year() == date.year()) {\r\n            formatMoment = formatMoment.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n        }\r\n\r\n        return date.format(formatMoment);\r\n    }\r\n\r\n    private formatDay(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            format = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat),\r\n            formatMonthYearless = format.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '').replace(/M/g, '');\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.format(formatMonthYearless);\r\n    }\r\n\r\n    private formatMonthDay(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            format = basicFormat ? basicFormat : this._defaultFormat,\r\n            formatLL = moment.localeData().longDateFormat(format),\r\n            formatYearlessLL = formatLL.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.format(formatYearlessLL);\r\n    }\r\n\r\n//  use timezone not testing\r\n    private formatRange(value1: any, value2: any, basicFormat: string): string {\r\n        var dateStart: any,\r\n            dateEnd: any,\r\n            format = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n        if (this.isUndefinedOrNull(value1)) {\r\n            dateStart = null;\r\n        } else {\r\n            dateStart = this._config.timeZone ?  moment(value1).utcOffset(this._config.timeZone) : moment(value1);\r\n        }\r\n        if (this.isUndefinedOrNull(value2)) {\r\n            dateEnd = null;\r\n        } else {\r\n            dateEnd = this._config.timeZone ?  moment(value2).utcOffset(this._config.timeZone) : moment(value2);\r\n        }\r\n\r\n        if (dateStart === null && dateEnd === null) return '';\r\n\r\n        if (dateStart === null) {\r\n            return dateEnd.format(basicFormat);\r\n        } else if (dateEnd === null || dateStart.isSame(dateEnd)) {\r\n            return dateStart.format(basicFormat);;\r\n        }\r\n\r\n        if (dateStart.isAfter(dateEnd)) {\r\n            // todo localization\r\n            throw new Error('Date range error. Start date is more than end date.');\r\n        }\r\n\r\n        if (dateStart.year() == dateEnd.year()) {\r\n            if (dateStart.month() == dateEnd.month()) {\r\n                return this.formatDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            } else {\r\n                return this.formatMonthDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            }\r\n        } else {\r\n            return dateStart.format(basicFormat) + '-' + dateEnd.format(basicFormat);\r\n        }\r\n    }\r\n\r\n    private toStartRange(value: any, range: string): any {\r\n        var date: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.startOf(range).toDate();\r\n    }\r\n\r\n    private toEndRange(value: any, range: string, offset: number): any {\r\n        var date: any,\r\n            result: any,\r\n            mssOffset: number;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (!angular.isNumber(offset)) {\r\n            mssOffset = 0;\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        if (mssOffset) {\r\n            result = date.startOf(range).add(mssOffset, 'milliseconds');\r\n        } else {\r\n            result = date.startOf(range);\r\n        }\r\n\r\n        return date.startOf(range).toDate();\r\n    }\r\n\r\n    private toDateWithTime(value: any, formatDate: string, formatTime: string, firstTime?: boolean): any {\r\n        var date: any,\r\n            result: string,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n        if (firstTime) {\r\n            result = date.format(formatTime) + ' ' + date.format(formatDate);\r\n        } else {\r\n            result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private toTodayDate(value: any, formatDate: string, formatTime: string): any {\r\n        var date: any,\r\n            result: string,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n\r\n        if (nowDate.year() == date.year() && nowDate.month() == date.month() && nowDate.day() == date.day()) {\r\n            result = date.format(formatTime);\r\n        } else {\r\n            result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public constructor(config: DateTimeConfig) { \r\n        this._config = config || { timeZone: null };\r\n    };\r\n\r\n    public get config(): DateTimeConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public useTimeZone(offset: number) {\r\n        this._config.timeZone = offset;\r\n    }\r\n    // formating functions \r\n    // -------------------\r\n\r\n    // todo Optional\r\n    public formatTime(value: any, format: string): string {\r\n        return this.formatDateTime(value, 'LLL');\r\n    }\r\n    // todo Optional\r\n    public formatDateOptional(value: any, format: string): string {\r\n        return this.formatDateTime(value, 'L');\r\n    }\r\n\r\n    // date formats\r\n    public formatShortDate(value: any): string {\r\n        return this.formatDateTime(value, 'L');\r\n    }\r\n\r\n    public formatMiddleDate(value: any): string {\r\n        return this.formatDateTime(value, 'll');\r\n    }\r\n\r\n    public formatLongDate(value: any): string {\r\n        return this.formatDateTime(value, 'LL');\r\n    }\r\n\r\n    public formatMonth(value: any): string {\r\n        return this.formatDateTime(value, 'MM');\r\n    }\r\n\r\n    public formatLongMonth(value: any): string {\r\n        return this.formatDateTime(value, 'MMMM');\r\n    }\r\n\r\n    public formatYear(value: any): string {\r\n        return this.formatDateTime(value, 'YYYY');\r\n    }\r\n\r\n    public formatWeek(value: any): string {\r\n        return this.formatDateTime(value, 'ww');\r\n    }\r\n\r\n    public formatShortWeek(value: any): string {\r\n        return this.formatDateTime(value, 'w');\r\n    }\r\n\r\n    public formatShortDateTime(value: any): string {\r\n        return this.toDateWithTime(value, 'L', 'LT'); \r\n    }\r\n\r\n    public formatMiddleDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'lll');\r\n    }\r\n\r\n    public formatLongDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'LLL');\r\n    }\r\n\r\n    public formatFullDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'LLLL');\r\n    }\r\n\r\n    public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'L', 'LTS', firstTime); \r\n    }\r\n\r\n    public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'll', 'LTS', firstTime);\r\n    }\r\n\r\n    public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'LL', 'LTS', firstTime);\r\n    }\r\n\r\n    public formatShortTime(value: any): string {\r\n        return this.formatDateTime(value, 'LT');\r\n    }\r\n\r\n    public formatLongTime(value: any): string {\r\n        return this.formatDateTime(value, 'LTS');\r\n    }\r\n\r\n    public formatShortDayOfWeek(value: any): string {\r\n        return this.formatDateTime(value, 'dd');\r\n    }\r\n\r\n    public formatLongDayOfWeek(value: any): string {\r\n        return this.formatDateTime(value, 'dddd');\r\n    }\r\n\r\n    // public formatTimeNumber(value: any): string {\r\n    //     return this.formatDateTime(value, 'LLL');\r\n    // }\r\n\r\n    // public formatLongTimeNumber(value: any): string {\r\n    //     return this.formatDateTime(value, 'LLLL');\r\n    // }\r\n\r\n    ///-----------------\r\n\r\n    public formatLongMonthDay(value: any): string {\r\n        return this.formatMonthDay(value, 'LL');\r\n    }\r\n\r\n    public formatShortMonthDay(value: any): string {\r\n        return this.formatMonthDay(value, 'L');\r\n    }\r\n\r\n    public formatDateRange(value1: any, value2: any): string {\r\n        return this.formatRange(value1, value2, 'LL');\r\n    }\r\n\r\n    public formatDateTimeRange(value1: any, value2: any): string {\r\n        return this.formatRange(value1, value2, 'LLL');\r\n    }\r\n\r\n    // iso function\r\n    // --------------\r\n\r\n    public formatISOWeek(value: any): string {\r\n        return this.formatDateTime(value, 'WW');\r\n    }\r\n\r\n    public formatShortISOWeek(value: any): string {\r\n        return this.formatDateTime(value, 'W');\r\n    }\r\n\r\n    public formatISOWeekOrdinal(value: any): string {\r\n        return this.formatDateTime(value, 'Wo');\r\n    }\r\n    // special formats \r\n    // --------------\r\n\r\n    // year option displays if the current year is not equal to, the date of \r\n    public formatDateY(value: any): string {\r\n        return this.formatDateTimeY(value, 'L');\r\n    }\r\n\r\n    // year option displays if the current year is not equal to, the date of\r\n    public formatLongDateY(value: any): string {\r\n        return this.formatDateTimeY(value, 'LL');\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateLongTimeLong(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LTS')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateShortTimeLong(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LTS')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateLongTimeShort(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LT')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateShortTimeShort(value: any): string {\r\n        return this.toTodayDate(value, 'll', 'LT')\r\n    }\r\n\r\n    // todo\r\n    public formatMillisecondsToSeconds(value: any): string {\r\n        return '';\r\n    }\r\n\r\n    // todo\r\n    public formatElapsedInterval(value: any, start: any): string {\r\n        var date: any,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n        if (this.isUndefinedOrNull(start)) {\r\n            nowDate = moment();\r\n        } else {\r\n            nowDate = moment(start);\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid() || !nowDate.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return moment(date).fromNow(nowDate);\r\n    }\r\n\r\n    public getDateJSON(date: any): string {\r\n        return JSON.stringify(moment(date));\r\n    }\r\n\r\n    // navigation functions \r\n    // ------------------\r\n\r\n    public getNextStart(value: any, category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category);\r\n        result = moment(date).startOf(range).add(this.getOperationRange(range));\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public getPrevStart(value: any, category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category);\r\n        result = moment(date).startOf(range).add(-1, this.getOperationRange(range));\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public getNowStart(category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        date = moment();\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category)\r\n        result = moment(date).startOf(range);\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public addHours(value: any, hours: number): any {\r\n        var date: any;\r\n\r\n        if (this.isUndefinedOrNull(value) || !angular.isNumber(hours)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.add(hours, 'hours').toDate();\r\n    }\r\n\r\n    public toStartDay(value: any): any {\r\n        return this.toStartRange(value, 'day');\r\n    }\r\n\r\n    public toEndDay(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'day', offset);\r\n    }\r\n\r\n    public toStartWeek(value: any): any {\r\n        return this.toStartRange(value, 'week');\r\n    }\r\n\r\n    public toEndWeek(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'week', offset);\r\n    }\r\n\r\n    public toStartMonth(value: any): any {\r\n        return this.toStartRange(value, 'month');\r\n    }\r\n\r\n    public toEndMonth(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'month', offset);\r\n    }\r\n\r\n    public toStartYear(value: any): any {\r\n        return this.toStartRange(value, 'year');\r\n    }\r\n\r\n    public toEndYear(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'year', offset);\r\n    }\r\n\r\n}\r\n\r\nclass DateTimeService {\r\n    private _datetime: DateTime;\r\n    private _config: DateTimeConfig;\r\n\r\n    public constructor(\r\n        datetime: DateTime,\r\n    ) {\r\n        this._config = { timeZone: null};\r\n        this._datetime = datetime;\r\n    }\r\n\r\n    // todo Optional\r\n    public useTimeZone(offset: number): void {\r\n        return this._datetime.useTimeZone(offset);\r\n    }\r\n\r\n    // todo Optional\r\n    public formatTime(value: any, format: string): string {\r\n        return this._datetime.formatTime(value, format);\r\n    }\r\n\r\n    // todo Optional\r\n    public formatDateOptional(value: any, format: string): string {\r\n        return this._datetime.formatDateOptional(value, format);\r\n    }\r\n\r\n    public formatShortDate(value: any): string {\r\n        return this._datetime.formatShortDate(value);\r\n    }\r\n\r\n    public formatMiddleDate(value: any): string {\r\n        return this._datetime.formatMiddleDate(value);\r\n    }\r\n\r\n    public formatLongDate(value: any): string {\r\n        return this._datetime.formatLongDate(value);\r\n    }\r\n\r\n    public formatMonth(value: any): string {\r\n        return this._datetime.formatMonth(value);\r\n    }\r\n\r\n    public formatLongMonth(value: any): string {\r\n        return this._datetime.formatLongMonth(value);\r\n    }\r\n\r\n    public formatYear(value: any): string {\r\n        return this._datetime.formatYear(value);\r\n    }\r\n\r\n    public formatWeek(value: any): string {\r\n        return this._datetime.formatWeek(value);\r\n    }\r\n\r\n    public formatShortWeek(value: any): string {\r\n        return this._datetime.formatShortWeek(value);\r\n    }\r\n\r\n    public formatShortDateTime(value: any): string {\r\n        return this._datetime.formatShortDateTime(value);\r\n    }\r\n\r\n    public formatMiddleDateTime(value: any): string {\r\n        return this._datetime.formatMiddleDateTime(value);\r\n    }\r\n\r\n    public formatLongDateTime(value: any): string {\r\n        return this._datetime.formatLongDateTime(value);\r\n    }\r\n\r\n    public formatFullDateTime(value: any): string {\r\n        return this._datetime.formatFullDateTime(value);\r\n    }\r\n\r\n    public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatShortDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatLongDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatShortTime(value: any): string {\r\n        return this._datetime.formatShortTime(value);\r\n    }\r\n\r\n    public formatLongTime(value: any): string {\r\n        return this._datetime.formatLongTime(value);\r\n    }\r\n\r\n    public formatShortDayOfWeek(value: any): string {\r\n        return this._datetime.formatShortDayOfWeek(value);\r\n    }\r\n\r\n    public formatLongDayOfWeek(value: any): string {\r\n        return this._datetime.formatLongDayOfWeek(value);\r\n    }\r\n\r\n    public formatLongMonthDay(value: any): string {\r\n        return this._datetime.formatLongMonthDay(value);\r\n    }\r\n\r\n    public formatShortMonthDay(value: any): string {\r\n        return this._datetime.formatShortMonthDay(value);\r\n    }\r\n\r\n    public formatDateRange(value1: any, value2: any): string {\r\n        return this._datetime.formatDateRange(value1, value2);\r\n    }\r\n\r\n    public formatDateTimeRange(value1: any, value2: any): string {\r\n        return this._datetime.formatDateTimeRange(value1, value2);\r\n    }\r\n\r\n    // iso function\r\n    // --------------\r\n\r\n    public formatISOWeek(value: any): string {\r\n        return this._datetime.formatISOWeek(value);\r\n    }\r\n\r\n    public formatShortISOWeek(value: any): string {\r\n        return this._datetime.formatShortISOWeek(value);\r\n    }\r\n\r\n    public formatISOWeekOrdinal(value: any): string {\r\n        return this._datetime.formatISOWeekOrdinal(value);\r\n    }\r\n    // special formats \r\n    // --------------\r\n\r\n    // year option displays if the current year is not equal to, the date of \r\n    public formatDateY(value: any): string {\r\n        return this._datetime.formatDateY(value);\r\n    }\r\n\r\n    // year option displays if the current year is not equal to, the date of\r\n    public formatLongDateY(value: any): string {\r\n        return this._datetime.formatLongDateY(value);\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateLongTimeLong(value: any): string {\r\n        return this._datetime.formatTodayDateLongTimeLong(value);\r\n    }    \r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateShortTimeLong(value: any): string {\r\n        return this._datetime.formatTodayDateShortTimeLong(value);\r\n    }     \r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateLongTimeShort(value: any): string {\r\n        return this._datetime.formatTodayDateLongTimeShort(value);\r\n    }     \r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateShortTimeShort(value: any): string {\r\n        return this._datetime.formatTodayDateShortTimeShort(value);\r\n    }     \r\n\r\n    // todo\r\n    public formatMillisecondsToSeconds(value: any) {\r\n        return this._datetime.formatMillisecondsToSeconds(value);\r\n    }\r\n\r\n    // todo\r\n    public formatElapsedInterval(value: any, start: any): string {\r\n        return this._datetime.formatElapsedInterval(value, start);\r\n    }\r\n\r\n    public getDateJSON(date: any): string {\r\n        return this._datetime.getDateJSON(date);\r\n    }\r\n\r\n    // navigation functions \r\n    // ------------------\r\n\r\n    public getNextStart(value: any, category: string): any {\r\n        return this._datetime.getNextStart(value, category);\r\n    }\r\n\r\n    public getPrevStart(value: any, category: string): any {\r\n        return this._datetime.getPrevStart(value, category);\r\n    }\r\n\r\n    public getNowStart(category: string): any {\r\n        return this._datetime.getNowStart(category);\r\n    }\r\n\r\n    public addHours(value: any, hours: number): any {\r\n        return this._datetime.addHours(value, hours);\r\n    }\r\n\r\n    public toStartDay(value: any): any {\r\n        return this._datetime.toStartDay(value);\r\n    }\r\n\r\n    public toEndDay(value: any, offset: number): any {\r\n        return this._datetime.toEndDay(value, offset);\r\n    }\r\n\r\n    public toStartWeek(value: any): any {\r\n        return this._datetime.toStartWeek(value);\r\n    }\r\n\r\n    public toEndWeek(value: any, offset: number): any {\r\n        return this._datetime.toEndWeek(value, offset);\r\n    }\r\n\r\n    public toStartMonth(value: any): any {\r\n        return this._datetime.toStartMonth(value);\r\n    }\r\n\r\n    public toEndMonth(value: any, offset: number): any {\r\n        return this._datetime.toEndMonth(value, offset);\r\n    }\r\n\r\n    public toStartYear(value: any): any {\r\n        return this._datetime.toStartYear(value);\r\n    }\r\n\r\n    public toEndYear(value: any, offset: number): any {\r\n        return this._datetime.toEndYear(value, offset);\r\n    }\r\n\r\n}\r\n\r\nclass DateTimeProvider extends DateTime implements IDateTimeProvider {\r\n    private _translation: DateTime;\r\n    private _service: DateTimeService;\r\n\r\n    public constructor() {\r\n        super({ timeZone: null });\r\n    }\r\n\r\n    public $get(): any {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new DateTimeService(this);\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDateTime.Service', [])\r\n    .provider('pipDateTime', DateTimeProvider);\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDate', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDate',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    ngChange: '&'\r\n                },\r\n                templateUrl: 'date_directive/date.html',\r\n                controller: 'pipDateController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateController',\r\n        function ($scope, $element, $injector) { //pipTranslate\r\n            var value,\r\n                localeDate: any = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    DAY: 'Day',\r\n                    MONTH: 'Month',\r\n                    YEAR: 'Year'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    DAY: 'День',\r\n                    MONTH: 'Месяц',\r\n                    YEAR: 'Год'                    \r\n                });\r\n                $scope.dayLabel = pipTranslate.translate('DAY');\r\n                $scope.monthLabel = pipTranslate.translate('MONTH');\r\n                $scope.yearLabel = pipTranslate.translate('YEAR');\r\n            } else {\r\n                $scope.dayLabel = 'Day';\r\n                $scope.monthLabel = 'Month';                \r\n                $scope.yearLabel = 'Year';\r\n\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count = 31, days = [], i;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var i,\r\n                    currentYear = new Date().getFullYear(),\r\n                    startYear = $scope.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                    endYear = $scope.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                    years = [];\r\n\r\n                if ($scope.timeMode === 'past') {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                if ($scope.days.length !== days.length) {\r\n                    if ($scope.day > days.length) {\r\n                        $scope.day = days.length;\r\n                    }\r\n\r\n                    $scope.days = days;\r\n                }\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                    day = value ? value.getDate() : null,\r\n                    month = value ? value.getMonth() + 1 : null,\r\n                    year = value ? value.getFullYear() : null;\r\n\r\n                // Update day list if month and year were changed\r\n                if ($scope.month !== month && $scope.year !== year) {\r\n                    $scope.days = dayList($scope.month, $scope.year);\r\n                }\r\n\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.day && $scope.month && $scope.year) {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    $scope.model = value;\r\n                    $scope.ngChange();\r\n                }\r\n            }\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            // Set initial values\r\n            value = $scope.model ? _.isDate($scope.model) ? $scope.model : new Date($scope.model) : null;\r\n            $scope.day = value ? value.getDate() : null;\r\n            $scope.month = value ? value.getMonth() + 1 : null;\r\n            $scope.year = value ? value.getFullYear() : null;\r\n\r\n\r\n\r\n            $scope.days = dayList($scope.month, $scope.year);\r\n            $scope.months = monthList();\r\n            $scope.years = yearList();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue) {\r\n                getValue(newValue);\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n    var thisModule = angular.module('pipDateRange', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDateRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    pipChanged: '&',\r\n                    pipDateRangeType: '@',\r\n                    pipDateFormat: '@',\r\n                    pipNoLine: '@'\r\n                },\r\n                templateUrl: 'date_range_directive/date_range.html',\r\n                controller: 'pipDateRangeController'\r\n            };\r\n        });\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateRangeController',\r\n        function ($scope, $element, $mdMedia, $rootScope, $injector) { //pipTranslate, \r\n            var currentDate,\r\n                currentYear,\r\n                currentMonth,\r\n                currentDay,\r\n                prevState: any = {}, \r\n                currentState: any = {},\r\n                localeDate: any = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            // var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            // if (pipTranslate) {\r\n            //     pipTranslate.setTranslations('en', {\r\n            //         EVENT_NEW_START_TIME: 'Start time',\r\n            //         EVENT_NEW_END_TIME: 'End time'\r\n            //     });\r\n            //     pipTranslate.setTranslations('ru', {\r\n            //         EVENT_NEW_START_TIME: 'Начало',\r\n            //         EVENT_NEW_END_TIME: 'Конец'                \r\n            //     });\r\n            //     $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n            //     $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            // } else {\r\n            //     $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n            //     $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            // }\r\n\r\n            currentDate = new Date();\r\n            currentYear = currentDate.getUTCFullYear();\r\n            currentMonth = currentDate.getUTCMonth() + 1;\r\n            currentDay = currentDate.getUTCDate();\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    var date, dayOfWeek;\r\n\r\n                    date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                    dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                var date, dayOfWeek;\r\n\r\n                date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onWeekChange = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            // visibility\r\n            $scope.isDay = function () {\r\n                return $scope.pipDateRangeType === 'daily';\r\n            };\r\n\r\n            $scope.isWeek = function () {\r\n                return $scope.pipDateRangeType === 'weekly';\r\n            };\r\n\r\n            $scope.isMonth = function () {\r\n                return $scope.pipDateRangeType === 'daily' ||\r\n                    $scope.pipDateRangeType === 'weekly' ||\r\n                    $scope.pipDateRangeType === 'monthly';\r\n            };\r\n\r\n            $scope.onChange = function () {\r\n                if ($scope.pipChanged) {\r\n                    $scope.pipChanged();\r\n                }\r\n            };\r\n\r\n            function setCurrent() {\r\n                currentState.day = $scope.day;\r\n                currentState.month = $scope.month;\r\n                currentState.year = $scope.year;\r\n                currentState.week = $scope.week;\r\n                currentState.dateRangeType = $scope.pipDateRangeType;\r\n                currentState.model = $scope.model;\r\n            }\r\n\r\n            function fillLists() {\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n                $scope.months = monthList();\r\n                $scope.shortMonths = monthList();\r\n                $scope.years = yearList();\r\n\r\n            }\r\n\r\n            function correctWeek() {\r\n                if (!prevState.model || prevState.model && prevState.model.getTime() >= $scope.model.getTime()) {\r\n                    // if shift week -> increase month\r\n                    if ($scope.weeks && $scope.weeks[$scope.week] && $scope.weeks[$scope.week].id <= 0) {\r\n                        if ($scope.month < 12) {\r\n                            $scope.month += 1;\r\n                        } else {\r\n                            $scope.month = 1;\r\n                            $scope.year += 1;\r\n                        }\r\n                        fillLists();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function init() {\r\n                var value;\r\n\r\n                value = $scope.model ? new Date($scope.model) : null;\r\n                $scope.day = value ? value.getUTCDate() : null;\r\n                $scope.month = value ? value.getUTCMonth() + 1 : null;\r\n                $scope.year = value ? value.getUTCFullYear() : null;\r\n                $scope.week = value ? getWeekByDate($scope.day, $scope.month - 1, $scope.year) : null;\r\n\r\n                fillLists();\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            }\r\n\r\n            // Set initial values\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    getValue(newValue);\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            $scope.$watch('pipDateRangeType', function (newValue, oldValue) {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    init();\r\n                }\r\n            });\r\n\r\n            $scope.onYearClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.year = currentYear;\r\n                }\r\n            };\r\n\r\n            $scope.onMonthClick = function () {\r\n                if (!$scope.month) {\r\n                    $scope.month = currentMonth;\r\n                }\r\n            };\r\n\r\n            $scope.onDayClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.day = currentDay;\r\n                }\r\n            };\r\n            // ---------------------------------------------------------------------------------------\r\n\r\n            function getCountDay(month, year) {\r\n                var count = 31;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count, days, i, ln;\r\n\r\n              //  ln = $rootScope.$language || 'en';\r\n                count = getCountDay(month, year);\r\n                $scope.nameDays = [];\r\n                days = [];\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                    $scope.nameDays.push(momentShortDays[moment([year, month - 1, i]).weekday()]);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function getWeekByDate(day, month, year) {\r\n                var date, dayOfWeek, startWeek;\r\n\r\n                date = new Date(Date.UTC(year, month, day));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n                if (dayOfWeek === 1) {\r\n                    startWeek = day;\r\n                } else {\r\n                    startWeek = day + 1 - dayOfWeek;\r\n                }\r\n\r\n                return startWeek;\r\n            }\r\n\r\n            function getWeek(day, countDay, countPrevMonthDay) {\r\n                var endDay, startDay;\r\n\r\n                endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n                startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n                return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n            }\r\n\r\n            function weekList(month, year) { // возвращает список начала надели\r\n                var weeks, countDay, countPrevMonthDay, startWeek;\r\n\r\n                weeks = [];  // в массиве первые дни недели в текущем месяце\r\n                countDay = getCountDay(month, year);\r\n                startWeek = getWeekByDate(1, month - 1, year);\r\n\r\n                countPrevMonthDay = month - 1 ? getCountDay(month - 1, year) : getCountDay(12, year - 1);\r\n                while (startWeek < countDay + 1) {\r\n                    weeks.push({\r\n                        id: startWeek,\r\n                        name: getWeek(startWeek, countDay, countPrevMonthDay)\r\n                    });\r\n                    startWeek = startWeek + 7;\r\n                }\r\n\r\n                return weeks;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var startYear, i,\r\n                    endYear,\r\n                    years = [];\r\n\r\n                switch ($scope.timeMode) {\r\n                    case 'future':\r\n                        startYear = currentYear;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    case 'past':\r\n                        startYear = currentYear - 100;\r\n                        endYear = currentYear;\r\n                        break;\r\n                    case 'now':\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    default:\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 50;\r\n                        break;\r\n                }\r\n                if ($scope.timeMode === 'future') {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                switch ($scope.pipDateRangeType) {\r\n                    case 'monthly':\r\n                        $scope.day = 1;\r\n                        break;\r\n                    case 'yearly':\r\n                        $scope.month = 1;\r\n                        $scope.day = 1;\r\n                        break;\r\n                    default:\r\n                        if ($scope.days.length !== days.length) {\r\n                            if ($scope.day > days.length) {\r\n                                $scope.day = days.length;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                $scope.days = days;\r\n            }\r\n\r\n            function adjustWeek() {\r\n                var weeks;\r\n\r\n                weeks = weekList($scope.month, $scope.year);\r\n                $scope.week = getWeekByDate($scope.week, $scope.month - 1, $scope.year);\r\n                $scope.weeks = weeks;\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value, day, month, year, week;\r\n\r\n                value = v ? new Date(v) : null;\r\n                // Define values\r\n                day = value ? value.getUTCDate() : null;\r\n                month = value ? value.getUTCMonth() + 1 : null;\r\n                year = value ? value.getUTCFullYear() : null;\r\n                week = value ? getWeekByDate(day, month - 1, year) : null;\r\n                // Exit if nothing to update\r\n                if ($scope.day === day && $scope.month === month && $scope.year === year && $scope.week === week) {\r\n                    return;\r\n                }\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n                $scope.week = week;\r\n\r\n                // Define data sources\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.week, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                } else {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                }\r\n\r\n                prevState = _.cloneDeep(currentState);\r\n                setCurrent();\r\n                $scope.onChange();\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","'use strict';\r\n\r\nangular.module('pipDates', [\r\n    'pipDate',\r\n    'pipTimeRange',\r\n    'pipDateTime',\r\n    'pipTimeRangeEdit',\r\n    'pipDateRange',\r\n    'pipDates.Translate'\r\n]);\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDates.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRange', []);\r\n\r\n    thisModule.directive('pipTimeRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipEndDate: '='\r\n                },\r\n                templateUrl: 'time_range_directive/time_range.html',\r\n                link: function ($scope: any, $element, $attrs) {\r\n\r\n                    function getDateJSON(value) {\r\n                        return value ? new Date(value) : null;\r\n                    }\r\n\r\n                    function defineStartDate() {\r\n                        if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                            $scope.data.start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate\r\n                                : getDateJSON($scope.pipStartDate);\r\n                        }\r\n                    }\r\n\r\n                    function defineEndDate() {\r\n                        if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                            $scope.data.end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate\r\n                                : getDateJSON($scope.pipEndDate);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    $scope.data = {};\r\n                    $scope.data.start = null;\r\n                    $scope.data.end = null;\r\n                    defineStartDate();\r\n                    defineEndDate();\r\n\r\n                    if (toBoolean($attrs.pipRebind)) {\r\n                        $scope.$watch('pipStartDate',\r\n                            function () {\r\n                                $scope.data.start = null;\r\n                                defineStartDate();\r\n                            }\r\n                        );\r\n                        $scope.$watch('pipEndDate',\r\n                            function () {\r\n                                $scope.data.end = null;\r\n                                defineEndDate();\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-time-range');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRangeEdit', []);\r\n\r\n    thisModule.directive('pipTimeRangeEdit',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipChanged: '&',\r\n                    pipEndDate: '=',\r\n                    pipStartLabel: '@',\r\n                    pipEndLabel: '@',\r\n                    disabled: '&ngDisabled',\r\n                    pipSize: '='\r\n                },\r\n                templateUrl: 'time_range_edit_directive/time_range_edit.html',\r\n                controller: 'pipTimeRangeEditController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipTimeRangeEditController',\r\n        function ($scope, $element, $attrs, $injector, pipDateTime) { //pipTranslate\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    EVENT_NEW_START_TIME: 'Start time',\r\n                    EVENT_NEW_END_TIME: 'End time'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    EVENT_NEW_START_TIME: 'Начало',\r\n                    EVENT_NEW_END_TIME: 'Конец'                \r\n                });\r\n                $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n                $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            } else {\r\n                $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n                $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            }\r\n\r\n            function getDateJSON(value) {\r\n                return value ? new Date(value) : null;\r\n            }\r\n\r\n            function setDuration() {\r\n                var start, end;\r\n\r\n                if (!$scope.data.startDate || !$scope.data.endDate) {\r\n                    return null;\r\n                }\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                return end - start;\r\n            }\r\n\r\n            function validateStartDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано начальное время - задаем его\r\n                if (!$scope.data.startTime) {\r\n                    if (!$scope.data.endTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.startTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.startTime = $scope.data.endTime === 0 ? 0 : $scope.data.endTime - 30;\r\n                    }\r\n                }\r\n\r\n                // если конечная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if ($scope.data.duration) {\r\n                    end = new Date(start.getTime() + $scope.data.duration);\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    end = end.getTime() - $scope.data.endDate.getTime();\r\n                    $scope.data.endTime = Math.floor(end / (30 * 60 * 1000)) * 30;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        $scope.data.endDate = pipDateTime.toStartDay(new Date(start.getTime() + 30 * 60000));\r\n                        $scope.data.endTime = ($scope.data.startTime + 30) % 1440;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function validateEndDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано конечное время - задаем его\r\n                if (!$scope.data.endTime) {\r\n                    if (!$scope.data.startTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.endTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.endTime = $scope.data.startTime === 1410 ? 1410 : $scope.data.startTime + 30;\r\n                    }\r\n                }\r\n\r\n                // если yачальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                if (start >= end) {\r\n                    // Если начальная дата больше, то двигаем начальную дату\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date(end.getTime() - 30 * 60000));\r\n                    $scope.data.startTime = $scope.data.endTime % 1440 === 0 ? 1410 : $scope.data.endTime - 30;\r\n                }\r\n\r\n                $scope.data.duration = setDuration();\r\n            }\r\n\r\n            function setDate() {\r\n                var time;\r\n\r\n                $scope.data.bind = false;\r\n\r\n                if ($scope.data.startDate) {\r\n                    time = $scope.data.startTime ? $scope.data.startTime * 60 * 1000 : 0;\r\n                    $scope.pipStartDate = new Date($scope.data.startDate.getTime() + time);\r\n                }\r\n\r\n                if ($scope.data.endDate) {\r\n                    time = $scope.data.endTime ? $scope.data.endTime * 60 * 1000 : 0;\r\n                    $scope.pipEndDate = new Date($scope.data.endDate.getTime() + time);\r\n                }\r\n\r\n                $scope.data.bind = true;\r\n            }\r\n\r\n            function defineDate() {\r\n                var start, end;\r\n\r\n                if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                    start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate : null;\r\n\r\n                    if (!start) {\r\n                        start = getDateJSON($scope.pipStartDate);\r\n                    }\r\n\r\n                    $scope.data.startDate = pipDateTime.toStartDay(start);\r\n                    $scope.data.startTime = (<any>new Date(start) - $scope.data.startDate) / (60 * 1000);\r\n                }\r\n\r\n                if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                    end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate : null;\r\n\r\n                    if (!start) {\r\n                        end = getDateJSON($scope.pipEndDate);\r\n                    }\r\n\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    $scope.data.endTime = (<any>new Date(end) - $scope.data.endDate) / (60 * 1000);\r\n                }\r\n\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n            }\r\n\r\n            function getTimeInterval() {\r\n                var result, i, j, minutes;\r\n\r\n                result = [];\r\n                for (i = 0; i < 24; i++) {\r\n                    for (j = 0; j < 2; j++) {\r\n                        minutes = j * 30;\r\n                        result.push({\r\n                            id: i * 60 + minutes,\r\n                            time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function initDate() {\r\n                $scope.data.startDate = null;\r\n                $scope.data.startTime = null;\r\n                $scope.data.endDate = null;\r\n                $scope.data.endTime = null;\r\n                $scope.data.duration = null;\r\n            }\r\n\r\n            // initialize data\r\n            $scope.intervalTimeCollection = getTimeInterval();\r\n            $scope.data = {};\r\n            initDate();\r\n            defineDate();\r\n\r\n            // process function\r\n            $scope.onChangeStartDate = function () {\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndDate = function () {\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeStartTime = function () {\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndTime = function () {\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.isDisabled = function () {\r\n                if ($scope.disabled) {\r\n                    return $scope.disabled();\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            $scope.$watchGroup([$scope.pipStartDate, $scope.pipEndDate], function () {\r\n                if ($scope.data.bind) {\r\n                    initDate();\r\n                    defineDate();\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_directive/date.html',\n    '<div class=\"pip-date layout-row flex\" tabindex=\"-1\"><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-day flex\" ng-disabled=\"disableControls\" ng-model=\"day\" placeholder=\"{{dayLabel}}\" ng-change=\"onDayChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{:: opt }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-monthflex\" ng-disabled=\"disableControls\" ng-model=\"month\" placeholder=\"{{monthLabel}}\" ng-change=\"onMonthChanged()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{:: opt.name }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-year flex\" ng-disabled=\"disableControls\" ng-model=\"year\" placeholder=\"{{yearLabel}}\" ng-change=\"onYearChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{:: opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_range_directive/date_range.html',\n    '<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\"><md-input-container ng-show=\"isDay()\" class=\"input-container pip-day flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-day\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onDayClick()\" ng-model=\"day\" ng-change=\"onDayChanged()\" placeholder=\"{{dayLabel}}\" aria-label=\"DAY\"><md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{nameDays[$index]}} {{ opt }}</md-option></md-select></md-input-container><md-input-container ng-show=\"isWeek()\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-week\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" ng-model=\"week\" ng-change=\"onWeekChange()\" placeholder=\"{{weekLabel}}\" aria-label=\"WEEK\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in weeks track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $mdMedia(\\'gt-xs\\'), \\'space8\\': $mdMedia(\\'xs\\')}\" ng-show=\"isDay() || isWeek()\"></div><md-input-container ng-show=\"isMonth() && !monthFormatShort\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onMonthClick()\" ng-model=\"month\" ng-change=\"onMonthChanged()\" placeholder=\"{{monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><md-input-container ng-show=\"isMonth() && monthFormatShort\" class=\"flex input-container\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onMonthClick()\" ng-model=\"month\" ng-change=\"onMonthChanged()\" placeholder=\"{{monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in shortMonths track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $mdMedia(\\'gt-xs\\'), \\'space8\\': $mdMedia(\\'xs\\')}\" ng-show=\"isMonth()\"></div><md-input-container class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-year\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onYearClick()\" ng-model=\"year\" ng-change=\"onYearChanged()\" placeholder=\"{{yearLabel}}\" aria-label=\"YEAR\"><md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{ opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_directive/time_range.html',\n    '<p><span ng-if=\"data.start != null\">{{data.start | formatLongDateTime}}</span> <span class=\"separator\" ng-if=\"data.start && data.end\">-</span> <span ng-if=\"data.end != null\">{{data.end | formatLongDateTime}}</span></p>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_edit_directive/time_range_edit.html',\n    '<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\"><div flex=\"47\" class=\"start-time-container\"><p class=\"text-caption text-grey\">{{startLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container\" flex=\"49\"><md-datepicker ng-model=\"data.startDate\" xmd-placeholder=\"{{startLabel}}\" ng-change=\"onChangeStartDate()\" ng-disabled=\"isDisabled()\" aria-label=\"START-DATE\"></md-datepicker></div><div flex=\"\"><md-input-container class=\"input-container\"><md-select aria-label=\"START-TIME\" ng-model=\"data.startTime\" ng-disabled=\"isDisabled()\" ng-change=\"onChangeStartTime()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div><div flex=\"47\" class=\"end-time-container\"><p class=\"text-caption text-grey\">{{endLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container flex-49\"><md-datepicker ng-model=\"data.endDate\" xmd-placeholder=\"{{endLabel}}\" ng-disabled=\"isDisabled()\" ng-change=\"onChangeEndDate()\" aria-label=\"END-DATE\"></md-datepicker></div><div flex=\"\"><md-input-container class=\"input-container\"><md-select aria-label=\"END-TIME\" ng-model=\"data.endTime\" ng-change=\"onChangeEndTime()\" ng-disabled=\"isDisabled()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dates-html.min.js.map\n"]}