{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/date/Date.ts","src/date_format/DateConvertService.ts","src/date_format/DateFormatFilter.ts","src/date_format/DateFormatService.ts","src/date_format/IDateConvertService.ts","src/date_format/index.ts","src/date_range/DateRange.ts","src/dependencies/TranslateFilter.ts","src/index.ts","src/time_range/TimeRange.ts","src/time_range_edit/TimeRangeEdit.ts","temp/pip-webui-dates-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-dates.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\r\n(() => {\r\n    interface IDateBindings {\r\n        [key: string]: any;\r\n\r\n        timeMode: any,\r\n        disabled: any,\r\n        model: any,\r\n        ngChange: any\r\n    }\r\n\r\n    const DateBindings: IDateBindings = {\r\n        timeMode: '@pipTimeMode',\r\n        disabled: '&ngDisabled',\r\n        model: '<ngModel',\r\n        ngChange: '<'\r\n    }\r\n\r\n    class DateChanges implements ng.IOnChangesObject, IDateBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        timeMode: ng.IChangesObject<string>;\r\n        disabled: ng.IChangesObject<() => boolean>;\r\n        model: ng.IChangesObject<Date>;\r\n        ngChange: ng.IChangesObject<(date: Date) => void>;\r\n    }\r\n\r\n\r\n    class DateController {\r\n        private value: any;\r\n        private localeDate: moment.MomentLanguageData = moment.localeData();\r\n        private momentMonths: any[];\r\n        private momentDays: any[];\r\n        private momentShortDays: any;\r\n        private momentFirstDayOfWeek: any;\r\n\r\n        public timeMode: string;\r\n        public day: number;\r\n        public month: number;\r\n        public year: number;\r\n\r\n        public model: Date;\r\n        public ngChange: (date: Date) => void;\r\n\r\n        public days: number[];\r\n        public months: any[];\r\n        public years: number[];\r\n        public disabled: () => boolean;\r\n        public disableControls: boolean;\r\n\r\n        constructor(\r\n            $injector: angular.auto.IInjectorService,\r\n            $scope: ng.IScope) {\r\n            \"ngInject\";\r\n            this.momentMonths = angular.isArray(this.localeDate['_months']) ? this.localeDate['_months'] : this.localeDate['_months'].format;\r\n            this.momentDays = angular.isArray(this.localeDate['_weekdays']) ? this.localeDate['_weekdays'] : this.localeDate['_weekdays'].format;\r\n            this.momentShortDays = this.localeDate['_weekdaysMin'];\r\n            this.momentFirstDayOfWeek = this.localeDate['_week'].dow;\r\n\r\n            let value = this.model ? _.isDate(this.model) ? this.model : new Date(this.model) : null;\r\n            this.day = value ? value.getDate() : null;\r\n            this.month = value ? value.getMonth() + 1 : null;\r\n            this.year = value ? value.getFullYear() : null;\r\n\r\n            this.days = this.dayList(this.month, this.year);\r\n            this.months = this.monthList();\r\n            this.years = this.yearList();\r\n\r\n            this.disableControls = this.disabled ? this.disabled() : false;\r\n\r\n        }\r\n\r\n        public $onChanges(changes: DateChanges) {\r\n            if (changes.model && changes.model.currentValue) {\r\n                this.model = changes.model.currentValue;\r\n                this.getValue(this.model);\r\n            }\r\n        }\r\n\r\n        private dayList(month: number, year: number): number[] {\r\n            let count: number = 31, days: number[] = [];\r\n\r\n            if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                count = 30;\r\n            } else {\r\n                if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n            }\r\n            for (let i: number = 1; i <= count; i++) {\r\n                days.push(i);\r\n            }\r\n\r\n            return days;\r\n        }\r\n\r\n        private monthList() {\r\n            let months: any[] = [];\r\n\r\n            for (let i: number = 1; i <= 12; i++) {\r\n                months.push({\r\n                    id: i,\r\n                    name: this.momentMonths[i - 1]\r\n                });\r\n            }\r\n\r\n            return months;\r\n        }\r\n\r\n        private yearList(): number[] {\r\n            let currentYear: number = new Date().getFullYear(),\r\n                startYear: number = this.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                endYear: number = this.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                years = [];\r\n\r\n            if (this.timeMode === 'past') {\r\n                for (let i: number = endYear; i >= startYear; i--) {\r\n                    years.push(i);\r\n                }\r\n            } else {\r\n                for (let i: number = startYear; i <= endYear; i++) {\r\n                    years.push(i);\r\n                }\r\n            }\r\n\r\n            return years;\r\n        }\r\n\r\n        private adjustDay() {\r\n            let days = this.dayList(this.month, this.year);\r\n\r\n            if (this.days.length !== days.length) {\r\n                if (this.day > days.length) {\r\n                    this.day = days.length;\r\n                }\r\n\r\n                this.days = days;\r\n            }\r\n        }\r\n\r\n        private getValue(v: any) {\r\n            let value: Date = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                day: number = value ? value.getDate() : null,\r\n                month: number = value ? value.getMonth() + 1 : null,\r\n                year: number = value ? value.getFullYear() : null;\r\n\r\n            // Update day list if month and year were changed\r\n            if (this.month !== month && this.year !== year) {\r\n                this.days = this.dayList(this.month, this.year);\r\n            }\r\n\r\n            // Assign values to scope\r\n            this.day = day;\r\n            this.month = month;\r\n            this.year = year;\r\n        }\r\n\r\n        public setValue() {\r\n            let value: Date;\r\n\r\n            if (this.day && this.month && this.year) {\r\n                value = new Date(this.year, this.month - 1, this.day, 0, 0, 0, 0);\r\n                this.model = value;\r\n                this.ngChange(this.model);\r\n            }\r\n        }\r\n\r\n        public onMonthChanged() {\r\n            this.adjustDay();\r\n            this.setValue();\r\n        }\r\n\r\n        public onYearChanged() {\r\n            this.adjustDay();\r\n            this.setValue();\r\n        }\r\n    }\r\n\r\n    const DateComponent: ng.IComponentOptions = {\r\n        bindings: DateBindings,\r\n        templateUrl: 'date/Date.html',\r\n        controller: DateController\r\n    }\r\n\r\n    angular\r\n        .module('pipDate', ['pipDates.Templates'])\r\n        .component('pipDate', DateComponent)\r\n})();\r\n\r\n","import { DateRangeType, IDateConvertService, IDateConvertProvider } from './IDateConvertService';\r\n\r\n(() => {\r\n    class DateConvert implements IDateConvertService {\r\n        protected _momentRanged: string[] = DateRangeType.All;\r\n        protected _defaultFormat: string = 'LL';\r\n        private _defaultTimeZoneOffset: number;\r\n\r\n        public get defaultTimeZoneOffset(): number {\r\n            return this._defaultTimeZoneOffset;\r\n        }\r\n\r\n        public set defaultTimeZoneOffset(value: number) {\r\n            this._defaultTimeZoneOffset = value;\r\n        }\r\n\r\n        private isUndefinedOrNull(date: any): boolean {\r\n            return angular.isUndefined(date) || date === null;\r\n        }\r\n\r\n        private getRange(date: string): string {\r\n            if (this.isUndefinedOrNull(date)) {\r\n                return DateRangeType.Day;\r\n            }\r\n\r\n            let index = this._momentRanged.indexOf(date)\r\n\r\n            if (index < 0) {\r\n                return DateRangeType.Day;\r\n            }\r\n\r\n            return this._momentRanged[index];\r\n        }\r\n\r\n        private getOperationRange(date: string): string {\r\n            if (this.isUndefinedOrNull(date)) {\r\n                return DateRangeType.Day;\r\n            }\r\n\r\n            let range: string = date == DateRangeType.WeekFromSunday ? DateRangeType.WeekFromSunday : date,\r\n                index = this._momentRanged.indexOf(range)\r\n\r\n            if (index < 0) {\r\n                return DateRangeType.Day;\r\n            }\r\n\r\n            return this._momentRanged[index];\r\n\r\n        }\r\n  \r\n        private toStartRange(date: any, range: string): Date {\r\n            let localDate: moment.Moment;\r\n\r\n            if (this.isUndefinedOrNull(date)) {\r\n                throw new Error('toStartRange - date is undefined or null');\r\n            }\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null) {\r\n                localDate = moment(date).utcOffset(this._defaultTimeZoneOffset);\r\n            } else {\r\n                localDate = moment(date);\r\n            }\r\n\r\n            if (!localDate.isValid()) {\r\n                throw new Error('toStartRange - localDate is invalid');\r\n            }\r\n\r\n            return localDate.startOf(range).toDate();\r\n        }\r\n\r\n        private toEndRange(date: any, range: string, offset?: number): any {\r\n            let localDate: any,\r\n                result: any,\r\n                mssOffset: number;\r\n\r\n            if (this.isUndefinedOrNull(date)) {\r\n                return '';\r\n            }\r\n\r\n            if (!angular.isNumber(offset)) {\r\n                mssOffset = 0;\r\n            }\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null) {\r\n                localDate = moment(date).utcOffset(this._defaultTimeZoneOffset);\r\n            } else {\r\n                localDate = moment(date);\r\n            }\r\n\r\n            if (!localDate.isValid()) {\r\n                return '';\r\n            }\r\n\r\n            if (mssOffset) {\r\n                result = localDate.endOf(range).add(mssOffset, 'milliseconds');\r\n            } else {\r\n                result = localDate.endOf(range);\r\n            }\r\n\r\n            return localDate.endOf(range).toDate();\r\n        }\r\n\r\n        public toJson(date: any): string {\r\n            return JSON.stringify(moment(date));\r\n        }\r\n\r\n        // navigation functions \r\n        // ------------------\r\n\r\n        public toNextRange(date: any, type: string): any {\r\n            let localDate: moment.Moment,\r\n                range: string,\r\n                result: any;\r\n\r\n            if (this.isUndefinedOrNull(date)) {\r\n                return '';\r\n            }\r\n\r\n            localDate = moment(date);\r\n            if (!localDate.isValid()) {\r\n                return '';\r\n            }\r\n\r\n            range = this.getRange(type);\r\n            result = moment(localDate).startOf(range).add(1, this.getOperationRange(range));\r\n\r\n            return result.toDate();\r\n        }\r\n\r\n        public toPrevRange(date: any, type: string): Date {\r\n            let localDate: moment.Moment,\r\n                range: string,\r\n                result: moment.Moment;\r\n\r\n            if (this.isUndefinedOrNull(date)) {\r\n                throw new Error('toPrevRange- date is undefined or null');\r\n            }\r\n\r\n            localDate = moment(date);\r\n            if (!localDate.isValid()) {\r\n                throw new Error('toPrevRange - localDate is invalid');\r\n            }\r\n\r\n            range = this.getRange(type);\r\n            result = moment(localDate).startOf(range).add(-1, this.getOperationRange(range));\r\n\r\n            return result.toDate();\r\n        }\r\n\r\n        public toCurrentRange(type: string): Date {\r\n            let localDate: moment.Moment,\r\n                range: string,\r\n                result: moment.Moment;\r\n\r\n            localDate = moment();\r\n            if (!localDate.isValid()) {\r\n                throw new Error('toCurrentRange - localDate is invalid');\r\n            }\r\n\r\n            range = this.getRange(type)\r\n            result = moment(localDate).startOf(range);\r\n\r\n            return result.toDate();\r\n        }\r\n\r\n        public addHours(date: any, hours: number): Date {\r\n            let localDate: moment.Moment;\r\n\r\n            if (this.isUndefinedOrNull(date) || !angular.isNumber(hours)) {\r\n                throw new Error('addHours - date is undefined or null or hours is not a number');\r\n            }\r\n\r\n            localDate = moment(date);\r\n            if (!localDate.isValid()) {\r\n                throw new Error('addHours - localDate is invalid');\r\n            }\r\n\r\n            return localDate.add(hours, 'hours').toDate();\r\n        }\r\n\r\n        public toStartDay(date: any): Date {\r\n            return this.toStartRange(date, DateRangeType.Day);\r\n        }\r\n\r\n        public toEndDay(date: any, offset?: number): Date {\r\n            return this.toEndRange(date, DateRangeType.Day, offset);\r\n        }\r\n\r\n        public toStartWeek(date: any): Date {\r\n            return this.toStartRange(date, DateRangeType.WeekFromSunday);\r\n        }\r\n\r\n        public toEndWeek(date: any, offset?: number): Date {\r\n            return this.toEndRange(date, DateRangeType.WeekFromSunday, offset);\r\n        }\r\n\r\n        public toStartMonth(date: any): Date {\r\n            return this.toStartRange(date, DateRangeType.Month);\r\n        }\r\n\r\n        public toEndMonth(date: any, offset?: number): Date {\r\n            return this.toEndRange(date, DateRangeType.Month, offset);\r\n        }\r\n\r\n        public toStartYear(date: any): Date {\r\n            return this.toStartRange(date, DateRangeType.Year);\r\n        }\r\n\r\n        public toEndYear(date: any, offset?: number): Date {\r\n            return this.toEndRange(date, DateRangeType.Year, offset);\r\n        }\r\n\r\n        // public toTimeZoneToString(date: any, tzOffset?: number, offset?: number): string {\r\n        //     tzOffset = tzOffset !== null && tzOffset !== undefined ? tzOffset : 0;\r\n        //     offset = offset ? offset : 0; \r\n\r\n        //     return moment(date).add(offset - tzOffset, 'minutes').format();\r\n        // }\r\n\r\n        // public fromTimeZoneToString(date: any, tzOffset?: number, offset?: number): string {\r\n        //     tzOffset = tzOffset !== null && tzOffset !== undefined ? tzOffset : 0;\r\n        //     offset = offset ? offset : 0; \r\n\r\n        //     return moment(date).add(tzOffset - offset, 'minutes').format();\r\n        // }\r\n\r\n    }\r\n\r\n    class DateConvertService {\r\n        private _convert: DateConvert;\r\n\r\n        public constructor(\r\n            convert: DateConvert,\r\n        ) {\r\n            this._convert = convert;\r\n        }\r\n\r\n        public get defaultTimeZoneOffset(): number {\r\n            return this._convert.defaultTimeZoneOffset;\r\n        }\r\n\r\n        public set defaultTimeZoneOffset(value: number) {\r\n            this._convert.defaultTimeZoneOffset = value;\r\n        }\r\n    \r\n        public toJSON(date: any): string {\r\n            return this._convert.toJson(date);\r\n        }\r\n\r\n        // date range functions \r\n        // ------------------\r\n\r\n        public toNextRange(date: any, type: string): any {\r\n            return this._convert.toNextRange(date, type);\r\n        }\r\n\r\n        public toPrevRange(date: any, type: string): any {\r\n            return this._convert.toPrevRange(date, type);\r\n        }\r\n\r\n        public toCurrentRange(type: string): any {\r\n            return this._convert.toCurrentRange(type);\r\n        }\r\n\r\n        public addHours(date: any, hours: number): any {\r\n            return this._convert.addHours(date, hours);\r\n        }\r\n\r\n        public toStartDay(date: any): any {\r\n            return this._convert.toStartDay(date);\r\n        }\r\n\r\n        public toEndDay(date: any, offset?: number): any {\r\n            return this._convert.toEndDay(date, offset);\r\n        }\r\n\r\n        public toStartWeek(date: any): any {\r\n            return this._convert.toStartWeek(date);\r\n        }\r\n\r\n        public toEndWeek(date: any, offset?: number): any {\r\n            return this._convert.toEndWeek(date, offset);\r\n        }\r\n\r\n        public toStartMonth(date: any): any {\r\n            return this._convert.toStartMonth(date);\r\n        }\r\n\r\n        public toEndMonth(date: any, offset?: number): any {\r\n            return this._convert.toEndMonth(date, offset);\r\n        }\r\n\r\n        public toStartYear(date: any): any {\r\n            return this._convert.toStartYear(date);\r\n        }\r\n\r\n        public toEndYear(date: any, offset?: number): any {\r\n            return this._convert.toEndYear(date, offset);\r\n        }\r\n\r\n        // public toTimeZoneToString(date: any, tzOffset?: number, offset?: number): string {\r\n        //     return this._convert.toTimeZoneToString(date, tzOffset, offset);\r\n        // }\r\n\r\n        // public fromTimeZoneToString(date: any, tzOffset?: number, offset?: number): string {\r\n        //     return this._convert.fromTimeZoneToString(date, tzOffset, offset);\r\n        // }\r\n    }\r\n\r\n    class DateConvertProvider extends DateConvert implements IDateConvertProvider {\r\n        private _translation: DateConvert;\r\n        private _service: DateConvertService;\r\n\r\n        public $get(): any {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null)\r\n                this._service = new DateConvertService(this);\r\n\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDate.Convert', [])\r\n        .provider('pipDateConvert', DateConvertProvider);\r\n})();","import { IDateFormatService } from './IDateFormatService';\r\nimport { IDateConvertService } from './IDateConvertService';\r\n\r\nfunction formatTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, format: string): string => {\r\n        return pipDateFormat.formatTime(value, format);\r\n    }\r\n}\r\n\r\nfunction formatDateOptionalFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, format: string): string => {\r\n        return pipDateFormat.formatDateOptional(value, format);\r\n    }\r\n}\r\n\r\nfunction formatLongDateFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongDate(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatMiddleDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMonthFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any) => {\r\n        return pipDateFormat.formatMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatYearFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatYear(value);\r\n    }\r\n}\r\n\r\nfunction formatWeekFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortWeekFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatMiddleDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateLongTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, firstTime: boolean): string => {\r\n        return pipDateFormat.formatShortDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateLongTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, firstTime: boolean): string => {\r\n        return pipDateFormat.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatLongDateLongTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, firstTime: boolean): string => {\r\n        return pipDateFormat.formatLongDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction bbFormatDateLongTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, firstTime: boolean): string => {\r\n        return pipDateFormat.bbFormatDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatFullDateTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatFullDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongTimeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDayOfWeekFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDayOfWeekFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthDayFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatShortMonthDayFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatDateRangeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value1: any, value2: any): string => {\r\n        return pipDateFormat.formatDateRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatDateTimeRangeFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value1: any, value2: any): string => {\r\n        return pipDateFormat.formatDateTimeRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortISOWeekFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatShortISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekOrdinalFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatISOWeekOrdinal(value);\r\n    }\r\n}\r\n\r\nfunction formatDateYFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateYFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatLongDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeLongFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatTodayDateLongTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeLongFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatTodayDateShortTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeShortFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatTodayDateLongTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeShortFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatTodayDateShortTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatMillisecondsToSecondsFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateFormat.formatMillisecondsToSeconds(value);\r\n    }\r\n}\r\n\r\nfunction formatElapsedIntervalFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, start: any): string => {\r\n        return pipDateFormat.formatElapsedInterval(value, start);\r\n    }\r\n}\r\n\r\nfunction formatShortElapsedFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, hours?: number, start?: any): string => {\r\n        return pipDateFormat.formatShortElapsed(value, hours, start);\r\n    }\r\n}\r\n\r\nfunction formatLongElapsedFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, hours?: number, start?: any): string => {\r\n        return pipDateFormat.formatLongElapsed(value, hours, start);\r\n    }\r\n}\r\n\r\nfunction formatMiddleElapsedFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any, hours?: number, start?: any): string => {\r\n        return pipDateFormat.formatMiddleElapsed(value, hours, start);\r\n    }\r\n}\r\n\r\nfunction getDateJSONFilter(pipDateConvert: IDateConvertService) {\r\n    \"ngInject\";\r\n\r\n    return (value: any): string => {\r\n        return pipDateConvert.toJson(value);\r\n    }\r\n}\r\n\r\nfunction formatTimeShortFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: number): string => {\r\n        return pipDateFormat.formatTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatTimeLongFilter(pipDateFormat: IDateFormatService) {\r\n    \"ngInject\";\r\n\r\n    return (value: number): string => {\r\n        return pipDateFormat.formatTimeLong(value);\r\n    }\r\n}\r\nangular\r\n    .module('pipDate.Filter', [])\r\n    .filter('formatTime', formatTimeFilter)\r\n    .filter('formatDateOptional', formatDateOptionalFilter)\r\n    .filter('bbFormatDateLongTime', bbFormatDateLongTimeFilter)\r\n    .filter('formatShortDate', formatShortDateFilter)\r\n    .filter('formatMiddleDate', formatMiddleDateFilter)\r\n    .filter('formatLongDate', formatLongDateFilter)\r\n    .filter('formatMonth', formatMonthFilter)\r\n    .filter('formatLongMonth', formatLongMonthFilter)\r\n    .filter('formatYear', formatYearFilter)\r\n    .filter('formatWeek', formatWeekFilter)\r\n    .filter('formatShortWeek', formatShortWeekFilter)\r\n    .filter('formatShortDateTime', formatShortDateTimeFilter)\r\n    .filter('formatMiddleDateTime', formatMiddleDateTimeFilter)\r\n    .filter('formatLongDateTime', formatLongDateTimeFilter)\r\n    .filter('formatShortDateLongTime', formatShortDateLongTimeFilter)\r\n    .filter('formatMiddleDateLongTime', formatMiddleDateLongTimeFilter)\r\n    .filter('formatLongDateLongTime', formatLongDateLongTimeFilter)\r\n    .filter('formatFullDateTime', formatFullDateTimeFilter)\r\n    .filter('formatShortTime', formatShortTimeFilter)\r\n    .filter('formatLongTime', formatLongTimeFilter)\r\n    .filter('formatShortDayOfWeek', formatShortDayOfWeekFilter)\r\n    .filter('formatLongDayOfWeek', formatLongDayOfWeekFilter)\r\n    .filter('formatLongMonthDay', formatLongMonthDayFilter)\r\n    .filter('formatShortMonthDay', formatShortMonthDayFilter)\r\n    .filter('formatDateRange', formatDateRangeFilter)\r\n    .filter('formatDateTimeRange', formatDateTimeRangeFilter)\r\n    .filter('formatISOWeek', formatISOWeekFilter)\r\n    .filter('formatShortISOWeek', formatShortISOWeekFilter)\r\n    .filter('formatISOWeekOrdinal', formatISOWeekOrdinalFilter)\r\n    .filter('formatDateY', formatDateYFilter)\r\n    .filter('formatLongDateY', formatLongDateYFilter)\r\n    .filter('formatTodayDateLongTimeLong', formatTodayDateLongTimeLongFilter)\r\n    .filter('formatTodayDateShortTimeLong', formatTodayDateShortTimeLongFilter)\r\n    .filter('formatTodayDateLongTimeShort', formatTodayDateLongTimeShortFilter)\r\n    .filter('formatTodayDateShortTimeShort', formatTodayDateShortTimeShortFilter)\r\n    .filter('formatMillisecondsToSeconds', formatMillisecondsToSecondsFilter)\r\n    .filter('formatElapsedInterval', formatElapsedIntervalFilter)\r\n    .filter('formatShortElapsed', formatShortElapsedFilter)\r\n    .filter('formatMiddleElapsed', formatMiddleElapsedFilter)\r\n    .filter('formatLongElapsed', formatLongElapsedFilter)\r\n    .filter('formatTimeShort', formatTimeShortFilter)\r\n    .filter('formatTimeLong', formatTimeLongFilter);\r\n","import { DateRangeType } from './IDateConvertService';\r\nimport { IDateFormatService, IDateFormatProvider } from './IDateFormatService';\r\n\r\n(() => {\r\n    class DateFormat implements IDateFormatService {\r\n        protected _momentRanged: string[] = DateRangeType.All;\r\n        protected _defaultFormat: string = 'LL'\r\n\r\n        private _defaultTimeZoneOffset: number;\r\n        private oneHour: number = 60 * 60 * 1000;\r\n        private oneMinute: number = 60 * 1000;\r\n        private oneSeccond: number = 1000;\r\n        private oneDay: number = 24 * 60 * 60 * 1000;\r\n\r\n\r\n        public constructor(\r\n            private $injector: angular.auto.IInjectorService\r\n        ) {\r\n\r\n        }\r\n\r\n        public get defaultTimeZoneOffset(): number {\r\n            return this._defaultTimeZoneOffset;\r\n        }\r\n\r\n        public set defaultTimeZoneOffset(value: number) {\r\n            this._defaultTimeZoneOffset = value;\r\n        }\r\n\r\n        private isUndefinedOrNull(value: any): boolean {\r\n            return angular.isUndefined(value) || value === null;\r\n        }\r\n\r\n        private formatDateTime(value: any, basicFormat: string): string {\r\n            let date: moment.Moment;\r\n            let formatTpl: string;\r\n\r\n            if (this.isUndefinedOrNull(value)) return '';\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n\r\n            if (!date.isValid()) return '';\r\n\r\n            formatTpl = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n            return date.format(formatTpl);\r\n        }\r\n\r\n        private formatDateTimeY(value: any, basicFormat: string): string {\r\n            let date: moment.Moment;\r\n            let nowDate: moment.Moment;\r\n            let formatMoment: string;\r\n\r\n            if (this.isUndefinedOrNull(value)) return '';\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n\r\n            if (!date.isValid()) return '';\r\n\r\n            nowDate = moment();\r\n            formatMoment = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat);\r\n\r\n            if (nowDate.year() == date.year())\r\n                formatMoment = formatMoment.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n\r\n            return date.format(formatMoment);\r\n        }\r\n\r\n        private formatDay(value: any, basicFormat: string): string {\r\n            let date: moment.Moment;\r\n            let format = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat);\r\n            let formatMonthYearless = format.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '').replace(/M/g, '').replace(/[./]/g, '');\r\n\r\n            if (this.isUndefinedOrNull(value)) return '';\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n\r\n            if (!date.isValid()) return '';\r\n\r\n            return date.format(formatMonthYearless);\r\n        }\r\n\r\n        private formatMonthDay(value: any, basicFormat: string): string {\r\n            let date: moment.Moment;\r\n            let format = basicFormat ? basicFormat : this._defaultFormat;\r\n            let formatLL = moment.localeData().longDateFormat(format);\r\n            let formatYearlessLL = formatLL.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n\r\n            if (this.isUndefinedOrNull(value)) return '';\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n\r\n            if (!date.isValid()) return '';\r\n\r\n            return date.format(formatYearlessLL);\r\n        }\r\n\r\n        //  use timezone not testing\r\n        public formatRange(value1: any, value2: any, basicFormat: string): string {\r\n            let dateStart: moment.Moment;\r\n            let dateEnd: moment.Moment;\r\n            let format = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n            if (this.isUndefinedOrNull(value1))\r\n                dateStart = null;\r\n            else\r\n                dateStart = (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                    ? moment(value1).utcOffset(this._defaultTimeZoneOffset) : moment(value1);\r\n\r\n            if (this.isUndefinedOrNull(value2))\r\n                dateEnd = null;\r\n            else\r\n                dateEnd = (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                    ? moment(value2).utcOffset(this._defaultTimeZoneOffset) : moment(value2);\r\n\r\n            if (dateStart === null && dateEnd === null)\r\n                return '';\r\n            if (dateStart === null)\r\n                return dateEnd.format(basicFormat);\r\n            if (dateEnd === null || dateStart.isSame(dateEnd))\r\n                return dateStart.format(basicFormat);;\r\n\r\n            if (dateStart.isAfter(dateEnd))\r\n                throw new Error('Date range error. Start date is more than end date.');\r\n\r\n            if (dateStart.year() == dateEnd.year()) {\r\n                if (dateStart.month() == dateEnd.month())\r\n                    return this.formatDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n\r\n                return this.formatMonthDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            }\r\n\r\n            return dateStart.format(basicFormat) + '-' + dateEnd.format(basicFormat);\r\n        }\r\n\r\n        private toDateWithTime(value: any, formatDate: string, formatTime: string, firstTime?: boolean): any {\r\n            let date: moment.Moment;\r\n            let result: string;\r\n            let nowDate: moment.Moment;\r\n\r\n            if (this.isUndefinedOrNull(value)) return '';\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n\r\n            if (!date.isValid()) return '';\r\n\r\n            nowDate = moment();\r\n            if (firstTime)\r\n                result = date.format(formatTime) + ' ' + date.format(formatDate);\r\n            else\r\n                result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n\r\n            return result;\r\n        }\r\n\r\n        private toTodayDate(value: any, formatDate: string, formatTime: string): any {\r\n            let date: moment.Moment;\r\n            let result: string;\r\n            let nowDate: any;\r\n\r\n            if (this.isUndefinedOrNull(value)) return '';\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n\r\n            if (!date.isValid()) return '';\r\n\r\n            nowDate = moment();\r\n\r\n            if (nowDate.year() == date.year() && nowDate.month() == date.month() && nowDate.day() == date.day())\r\n                result = date.format(formatTime);\r\n            else\r\n                result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n\r\n            return result;\r\n        }\r\n\r\n        // formating functions \r\n        // -------------------\r\n\r\n        public formatTime(value: any, format: string): string {\r\n            return this.formatDateTime(value, 'LLL');\r\n        }\r\n\r\n        public formatDateOptional(value: any, format: string): string {\r\n            return this.formatDateTime(value, 'L');\r\n        }\r\n\r\n        // date formats\r\n        public formatShortDate(value: any): string {\r\n            return this.formatDateTime(value, 'L');\r\n        }\r\n\r\n        public bbFormatDateLongTime(value: any, firstTime?: boolean): string {\r\n            return this.toDateWithTime(value, 'MM/DD/YY', 'LTS', firstTime);\r\n        }\r\n\r\n        public formatMiddleDate(value: any): string {\r\n            return this.formatDateTime(value, 'll');\r\n        }\r\n\r\n        public formatLongDate(value: any): string {\r\n            return this.formatDateTime(value, 'LL');\r\n        }\r\n\r\n        public formatMonth(value: any): string {\r\n            return this.formatDateTime(value, 'MM');\r\n        }\r\n\r\n        public formatLongMonth(value: any): string {\r\n            return this.formatDateTime(value, 'MMMM');\r\n        }\r\n\r\n        public formatYear(value: any): string {\r\n            return this.formatDateTime(value, 'YYYY');\r\n        }\r\n\r\n        public formatWeek(value: any): string {\r\n            return this.formatDateTime(value, 'ww');\r\n        }\r\n\r\n        public formatShortWeek(value: any): string {\r\n            return this.formatDateTime(value, 'w');\r\n        }\r\n\r\n        public formatShortDateTime(value: any): string {\r\n            return this.toDateWithTime(value, 'L', 'LT');\r\n        }\r\n\r\n        public formatMiddleDateTime(value: any): string {\r\n            return this.formatDateTime(value, 'lll');\r\n        }\r\n\r\n        public formatLongDateTime(value: any): string {\r\n            return this.formatDateTime(value, 'LLL');\r\n        }\r\n\r\n        public formatFullDateTime(value: any): string {\r\n            return this.formatDateTime(value, 'LLLL');\r\n        }\r\n\r\n        public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n            return this.toDateWithTime(value, 'L', 'LTS', firstTime);\r\n        }\r\n\r\n        public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n            return this.toDateWithTime(value, 'll', 'LTS', firstTime);\r\n        }\r\n\r\n        public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n            return this.toDateWithTime(value, 'LL', 'LTS', firstTime);\r\n        }\r\n\r\n        public formatShortTime(value: any): string {\r\n            return this.formatDateTime(value, 'LT');\r\n        }\r\n\r\n        public formatLongTime(value: any): string {\r\n            return this.formatDateTime(value, 'LTS');\r\n        }\r\n\r\n        public formatShortDayOfWeek(value: any): string {\r\n            return this.formatDateTime(value, 'dd');\r\n        }\r\n\r\n        public formatLongDayOfWeek(value: any): string {\r\n            return this.formatDateTime(value, 'dddd');\r\n        }\r\n\r\n        // public formatTimeNumber(value: any): string {\r\n        //     return this.formatDateTime(value, 'LLL');\r\n        // }\r\n\r\n        // public formatLongTimeNumber(value: any): string {\r\n        //     return this.formatDateTime(value, 'LLLL');\r\n        // }\r\n\r\n        ///-----------------\r\n\r\n        public formatLongMonthDay(value: any): string {\r\n            return this.formatMonthDay(value, 'LL');\r\n        }\r\n\r\n        public formatShortMonthDay(value: any): string {\r\n            return this.formatMonthDay(value, 'L');\r\n        }\r\n\r\n        public formatDateRange(value1: any, value2: any): string {\r\n            return this.formatRange(value1, value2, 'LL');\r\n        }\r\n\r\n        public formatDateTimeRange(value1: any, value2: any): string {\r\n            return this.formatRange(value1, value2, 'LLL');\r\n        }\r\n\r\n        // iso function\r\n        // --------------\r\n\r\n        public formatISOWeek(value: any): string {\r\n            return this.formatDateTime(value, 'WW');\r\n        }\r\n\r\n        public formatShortISOWeek(value: any): string {\r\n            return this.formatDateTime(value, 'W');\r\n        }\r\n\r\n        public formatISOWeekOrdinal(value: any): string {\r\n            return this.formatDateTime(value, 'Wo');\r\n        }\r\n        // special formats \r\n        // --------------\r\n\r\n        // year option displays if the current year is not equal to, the date of \r\n        public formatDateY(value: any): string {\r\n            return this.formatDateTimeY(value, 'L');\r\n        }\r\n\r\n        // year option displays if the current year is not equal to, the date of\r\n        public formatLongDateY(value: any): string {\r\n            return this.formatDateTimeY(value, 'LL');\r\n        }\r\n\r\n        // date displays if the current date  is not equal now \r\n        // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n        public formatTodayDateLongTimeLong(value: any): string {\r\n            return this.toTodayDate(value, 'LL', 'LTS')\r\n        }\r\n\r\n        // date displays if the current date  is not equal now \r\n        // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n        public formatTodayDateShortTimeLong(value: any): string {\r\n            return this.toTodayDate(value, 'LL', 'LTS')\r\n        }\r\n\r\n        // date displays if the current date  is not equal now \r\n        // September 4 1986 8:30 PM or 8:30 PM\r\n        public formatTodayDateLongTimeShort(value: any): string {\r\n            return this.toTodayDate(value, 'LL', 'LT')\r\n        }\r\n\r\n        // date displays if the current date  is not equal now \r\n        // Sep 4 1986 8:30 PM or 8:30 PM\r\n        public formatTodayDateShortTimeShort(value: any): string {\r\n            return this.toTodayDate(value, 'll', 'LT')\r\n        }\r\n\r\n        // todo\r\n        public formatMillisecondsToSeconds(value: any): string {\r\n            return '';\r\n        }\r\n\r\n        public formatElapsedInterval(value: any, start: any): string {\r\n            let date: moment.Moment,\r\n                nowDate: any;\r\n\r\n            if (this.isUndefinedOrNull(value)) {\r\n                return '';\r\n            }\r\n            if (this.isUndefinedOrNull(start)) {\r\n                nowDate = moment();\r\n            } else {\r\n                nowDate = moment(start);\r\n            }\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n            if (!date.isValid() || !nowDate.isValid()) {\r\n                return '';\r\n            }\r\n\r\n            return moment(date).fromNow(nowDate);\r\n        }\r\n\r\n        public formatShortElapsed(value: any, hours?: number, start?: any): string {\r\n            let date: moment.Moment,\r\n                nowDate: moment.Moment,\r\n                borderDate: moment.Moment;;\r\n\r\n            if (this.isUndefinedOrNull(value)) {\r\n                return '';\r\n            }\r\n\r\n            if (this.isUndefinedOrNull(start)) {\r\n                nowDate = moment();\r\n            } else {\r\n                nowDate = moment(start);\r\n            }\r\n            borderDate = _.cloneDeep(nowDate)\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n            if (!date.isValid() || !nowDate.isValid()) {\r\n                return '';\r\n            }\r\n\r\n            // define default hours\r\n            if (this.isUndefinedOrNull(hours)) {\r\n                hours = -24;\r\n            }\r\n            // add hours to now date\r\n            borderDate.add(hours, 'hours');\r\n\r\n            if (date.isBefore(borderDate)) {\r\n                // return date\r\n                return this.formatShortDateTime(date);\r\n            } else {\r\n                // return time\r\n                let ms = nowDate.diff(date);\r\n                let diff = moment.duration(nowDate.diff(date));\r\n                let s: string;\r\n\r\n                let pipTranslate: any = this.$injector.has('pipTranslate') ? this.$injector.get('pipTranslate') : null;\r\n                let h = Math.floor(diff.asHours());\r\n                let m = Math.floor(diff.asMinutes() - 60 * h);\r\n\r\n                if (pipTranslate) {\r\n                    let hString: string = this.getHoursString(h);\r\n                    let mString: string = this.getMinutesString(m);\r\n                    if (h) {\r\n                        s = Math.floor(diff.asHours()) + moment.utc(ms).format(\":mm \") + pipTranslate.translate('DATE_ELAPSED');\r\n                    } else {\r\n                        if (m) {\r\n                            s = moment.utc(ms).format(\"m\") + ' ' + pipTranslate.translate(mString) + ' ' + pipTranslate.translate('DATE_ELAPSED');\r\n                        } else {\r\n                            s = pipTranslate.translate('DATE_FEW_SECOND_SHORT_ELAPSED');\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (h) {\r\n                        s = Math.floor(diff.asHours()) + moment.utc(ms).format(\":mm \") + ' ago';\r\n                    } else {\r\n                        if (m) {\r\n                            s = moment.utc(ms).format(\"m\") + ' min. ago';\r\n                        } else {\r\n                            s = 'few sec. ago';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return s;\r\n            }\r\n        }\r\n\r\n        private getHoursString(h: number): string {\r\n            let hh: number = h % 10;\r\n            if (h == 0) return '';\r\n\r\n            if (hh == 1) {\r\n                return 'DATE_HOUR_ONE'\r\n            }\r\n            if (hh > 1 && hh < 5) {\r\n                return 'DATE_HOURS_FEW'\r\n            }\r\n\r\n            return 'DATE_HOURS_AFTER_FOOR'\r\n        }\r\n\r\n        private getMinutesString(m: number): string {\r\n            if (m == 1) {\r\n                return 'DATE_MINUTE_ONE'\r\n            }\r\n            if (m > 1 && m < 5) {\r\n                return 'DATE_MINUTES_FEW'\r\n            }\r\n\r\n            return 'DATE_MINUTES_AFTER_FOOR'\r\n        }\r\n\r\n        public formatLongElapsed(value: any, hours?: number, start?: any): string {\r\n            let date: moment.Moment,\r\n                nowDate: moment.Moment,\r\n                borderDate: moment.Moment;;\r\n\r\n            if (this.isUndefinedOrNull(value)) {\r\n                return '';\r\n            }\r\n\r\n            if (this.isUndefinedOrNull(start)) {\r\n                nowDate = moment();\r\n            } else {\r\n                nowDate = moment(start);\r\n            }\r\n            borderDate = _.cloneDeep(nowDate)\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n            if (!date.isValid() || !nowDate.isValid()) {\r\n                return '';\r\n            }\r\n\r\n            // define default hours\r\n            if (this.isUndefinedOrNull(hours)) {\r\n                hours = -24;\r\n            }\r\n            // add hours to now date\r\n            borderDate.add(hours, 'hours');\r\n\r\n            if (date.isBefore(borderDate)) {\r\n                // return date\r\n                return this.formatFullDateTime(date);\r\n            } else {\r\n                // return time\r\n                let ms = nowDate.diff(date);\r\n                let diff = moment.duration(nowDate.diff(date));\r\n                let s: string;\r\n\r\n                let pipTranslate: any = this.$injector.has('pipTranslate') ? this.$injector.get('pipTranslate') : null;\r\n\r\n                let h = Math.floor(diff.asHours());\r\n                let m = Math.floor(diff.asMinutes() - 60 * h);\r\n\r\n                if (pipTranslate) {\r\n                    let hString: string = this.getHoursString(h);\r\n                    let mString: string = this.getMinutesString(m);\r\n                    if (h) {\r\n                        s = Math.floor(diff.asHours()) + ' ' + pipTranslate.translate(hString) + moment.utc(ms).format(\" mm \") +\r\n                            pipTranslate.translate(mString) + ' ' + pipTranslate.translate('DATE_ELAPSED');\r\n                    } else {\r\n                        if (m) {\r\n                            s = moment.utc(ms).format(\"m\") + ' ' + pipTranslate.translate(mString) + ' ' + pipTranslate.translate('DATE_ELAPSED');\r\n                        } else {\r\n                            s = pipTranslate.translate('DATE_FEW_SECOND_ELAPSED');\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (h) {\r\n                        s = Math.floor(diff.asHours()) + ' hours ' + moment.utc(ms).format(\":mm minutes\") + ' ago';\r\n                    } else {\r\n                        if (m) {\r\n                            s = moment.utc(ms).format(\"m\") + ' minutes ago';\r\n                        } else {\r\n                            s = 'few second ago';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return s;\r\n            }\r\n        }\r\n\r\n        public formatMiddleElapsed(value: any, hours?: number, start?: any): string {\r\n            let date: moment.Moment,\r\n                nowDate: moment.Moment,\r\n                borderDate: moment.Moment;;\r\n\r\n            if (this.isUndefinedOrNull(value)) {\r\n                return '';\r\n            }\r\n\r\n            if (this.isUndefinedOrNull(start)) {\r\n                nowDate = moment();\r\n            } else {\r\n                nowDate = moment(start);\r\n            }\r\n            borderDate = _.cloneDeep(nowDate)\r\n\r\n            if (this._defaultTimeZoneOffset != undefined && this._defaultTimeZoneOffset != null)\r\n                date = moment(value).utcOffset(this._defaultTimeZoneOffset);\r\n            else\r\n                date = moment(value);\r\n            if (!date.isValid() || !nowDate.isValid()) {\r\n                return '';\r\n            }\r\n\r\n            // define default hours\r\n            if (this.isUndefinedOrNull(hours)) {\r\n                hours = -24;\r\n            }\r\n            // add hours to now date\r\n            borderDate.add(hours, 'hours');\r\n\r\n            if (date.isBefore(borderDate)) {\r\n                // return date\r\n                return this.formatMiddleDateLongTime(date);\r\n            } else {\r\n                // return time\r\n                let ms = nowDate.diff(date);\r\n                let diff = moment.duration(nowDate.diff(date));\r\n                let s: string;\r\n\r\n                let pipTranslate: any = this.$injector.has('pipTranslate') ? this.$injector.get('pipTranslate') : null;\r\n\r\n                let h = Math.floor(diff.asHours());\r\n                let m = Math.floor(diff.asMinutes() - 60 * h);\r\n\r\n                if (pipTranslate) {\r\n                    let hString: string = 'DATE_HOUR_SHORT';\r\n                    let mString: string = 'DATE_MINUTE_SHORT';\r\n                    if (h) {\r\n                        s = Math.floor(diff.asHours()) + ' ' + pipTranslate.translate(hString) + moment.utc(ms).format(\" mm \") +\r\n                            pipTranslate.translate(mString) + ' ' + pipTranslate.translate('DATE_ELAPSED');\r\n                    } else {\r\n                        if (m) {\r\n                            s = moment.utc(ms).format(\"m\") + ' ' + pipTranslate.translate(mString) + ' ' + pipTranslate.translate('DATE_ELAPSED');\r\n                        } else {\r\n                            s = pipTranslate.translate('DATE_FEW_SECOND_SHORT_ELAPSED') + ' ' + pipTranslate.translate('DATE_ELAPSED');\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (h) {\r\n                        s = Math.floor(diff.asHours()) + ' h. ' + moment.utc(ms).format(\":mm min.\") + ' ago';\r\n                    } else {\r\n                        if (m) {\r\n                            s = moment.utc(ms).format(\"m\") + ' min. ago';\r\n                        } else {\r\n                            s = 'few sec. ago';\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return s;\r\n            }\r\n        }\r\n\r\n        public formatTimeShort(value: number): string {\r\n            if (value <= 0) return '';\r\n\r\n            let s: string = '';\r\n            let h = Math.floor(value / this.oneHour);\r\n            let m = Math.floor((value - h * this.oneHour) / this.oneMinute);\r\n            let sec = Math.floor((value - h * this.oneHour - m * this.oneMinute) / this.oneSeccond);\r\n            let pipTranslate: any = this.$injector.has('pipTranslate') ? this.$injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                let hString: string = 'DATE_HOUR_SHORT';\r\n                let mString: string = 'DATE_MINUTE_SHORT';\r\n                if (h) {\r\n                    s = h + ' ' + pipTranslate.translate(hString) + ' ' +\r\n                        (\"0\" + m).substr(-2, 2) + ' ' + pipTranslate.translate(mString);\r\n                } else {\r\n                    if (m) {\r\n                        s = m + ' ' + pipTranslate.translate(mString);\r\n                    } else {\r\n                        s = sec + ' ' + pipTranslate.translate('DATE_FEW_SECOND_SHORT');\r\n                    }\r\n                }\r\n            } else {\r\n                if (h) {\r\n                    s = h + ' h. ' + (\"0\" + m).substr(-2, 2) + ' min.';\r\n                } else {\r\n                    if (m) {\r\n                        s = m + ' min.';\r\n                    } else {\r\n                        s = sec + ' sec.';\r\n                    }\r\n                }\r\n            }\r\n\r\n            return s;\r\n        }\r\n\r\n        public formatTimeLong(value: number): string {\r\n            if (value <= 0) return '';\r\n\r\n            let s: string = '';\r\n            let h = Math.floor(value / this.oneHour);\r\n            let m = Math.floor((value - h * this.oneHour) / this.oneMinute);\r\n            let sec = Math.floor((value - h * this.oneHour - m * this.oneMinute) / this.oneSeccond);\r\n            let pipTranslate: any = this.$injector.has('pipTranslate') ? this.$injector.get('pipTranslate') : null;\r\n            if (pipTranslate) {\r\n                    let hString: string = this.getHoursString(h);\r\n                    let mString: string = this.getMinutesString(m);\r\n                if (h) {\r\n                    \r\n                    s = h + ' ' + pipTranslate.translate(hString) + ' ' +\r\n                        (\"0\" + m).substr(-2, 2) + ' ' + pipTranslate.translate(mString);\r\n                } else {\r\n                    if (m) {\r\n                        s = m + ' ' + pipTranslate.translate(mString);\r\n                    } else {\r\n                        s = sec + ' ' + pipTranslate.translate('DATE_FEW_SECOND');\r\n                    }\r\n                }\r\n            } else {\r\n                if (h) {\r\n                    s = h + ' hours ' + (\"0\" + m).substr(-2, 2) + ' minutes';\r\n                } else {\r\n                    if (m) {\r\n                        s = m + ' minutes';\r\n                    } else {\r\n                        s = sec + ' second';\r\n                    }\r\n                }\r\n            }\r\n\r\n            return s;\r\n        }\r\n\r\n        public getDateJSON(date: any): string {\r\n            return JSON.stringify(moment(date));\r\n        }\r\n    }\r\n\r\n    class DateFormatProvider extends DateFormat implements IDateFormatProvider {\r\n        private _translation: DateFormat;\r\n        private _service: DateFormat;\r\n\r\n        public $get(\r\n            $injector: angular.auto.IInjectorService\r\n        ): any {\r\n            \"ngInject\";\r\n\r\n            if (this._service == null)\r\n                this._service = new DateFormat($injector);\r\n\r\n            return this._service;\r\n        }\r\n    }\r\n\r\n    function declarePipDateResources($injector: angular.auto.IInjectorService) {\r\n        let pipTranslateProvider: any = $injector.has('pipTranslateProvider') ? $injector.get('pipTranslateProvider') : null;\r\n        if (pipTranslateProvider && pipTranslateProvider.translations) {\r\n            pipTranslateProvider.translations('en', {\r\n                DATE_ELAPSED: 'ago',\r\n                DATE_HOUR_ONE: 'hour',\r\n                DATE_HOUR_SHORT: 'h',\r\n                DATE_MINUTE_SHORT: 'min',\r\n                DATE_HOURS_FEW: 'hours',\r\n                DATE_HOURS_AFTER_FOOR: 'hours',\r\n                DATE_MINUTE_ONE: 'minute',\r\n                DATE_MINUTES_FEW: 'minutes',\r\n                DATE_MINUTES_AFTER_FOOR: 'minutes',\r\n                DATE_FEW_SECOND: 'second',\r\n                DATE_FEW_SECOND_SHORT: 'sec.',\r\n                DATE_FEW_SECOND_ELAPSED: 'few sec. ago',\r\n                DATE_FEW_SECOND_SHORT_ELAPSED: 'few sec. ago'\r\n\r\n            });\r\n            pipTranslateProvider.translations('ru', {\r\n                DATE_ELAPSED: 'назад',\r\n                DATE_HOUR_ONE: 'час',\r\n                DATE_HOUR_SHORT: 'ч.',\r\n                DATE_MINUTE_SHORT: 'мин.',\r\n                DATE_HOURS_FEW: 'часа',\r\n                DATE_HOURS_AFTER_FOOR: 'часов',\r\n                DATE_MINUTE_ONE: 'минуту',\r\n                DATE_MINUTES_FEW: 'минуты',\r\n                DATE_MINUTES_AFTER_FOOR: 'минут',\r\n                DATE_FEW_SECOND: 'секунд',\r\n                DATE_FEW_SECOND_SHORT: 'сек.',\r\n                DATE_FEW_SECOND_ELAPSED: 'несколько секунд назад',\r\n                DATE_FEW_SECOND_SHORT_ELAPSED: 'неск. с. назад',\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    angular\r\n        .module('pipDate.Format', [])\r\n        .provider('pipDateFormat', DateFormatProvider)\r\n        .config(declarePipDateResources);\r\n})();","export class DateRangeType {\r\n    static Year: string = 'year';\r\n    static Month: string = 'month';\r\n    static Week: string = 'week';\r\n    static WeekFromSunday: string = 'isoweek';\r\n    static Day: string = 'day';\r\n    static All: string[] = ['year', 'month', 'week', 'isoweek', 'day']\r\n}\r\n\r\nexport interface IDateConvertService {\r\n    defaultTimeZoneOffset: number;\r\n\r\n    toJson(date: any): string;\r\n    toNextRange(date: any, type: string): Date;\r\n    toPrevRange(date: any, type: string): Date;\r\n    toCurrentRange(type: string): Date;\r\n\r\n    addHours(date: any, hours: number): Date;\r\n    toStartDay(date: any): Date;\r\n    toEndDay(date: any, offset?: number): Date;\r\n    toStartWeek(date: any): Date;\r\n    toEndWeek(date: any, offset?: number): Date;\r\n    toStartMonth(date: any): Date;\r\n    toEndMonth(date: any, offset?: number): Date;\r\n    toStartYear(date: any): Date;\r\n    toEndYear(date: any, offset?: number): Date;\r\n\r\n    // toTimeZoneToString(date: any, tzOffset?: number, offset?: number): string;\r\n    // fromTimeZoneToString(date: any, tzOffset?: number, offset?: number): string;\r\n}\r\n\r\nexport interface IDateConvertProvider extends IDateConvertService, ng.IServiceProvider {\r\n}","\r\nangular.module('pipDate.Common', [\r\n    'pipDate.Convert',\r\n    'pipDate.Format',\r\n    'pipDate.Filter'\r\n]);\r\n\r\nimport './DateConvertService';\r\nimport './DateFormatFilter';\r\nimport './DateFormatService';\r\nimport './IDateConvertService';\r\nimport './IDateFormatService';\r\n\r\nexport * from './IDateConvertService';\r\nexport * from './IDateFormatService';","\r\n(() => {\r\n    interface IDateRangeBindings {\r\n        [key: string]: any;\r\n\r\n        timeMode: any;\r\n        disabled: any;\r\n        model: any;\r\n        pipChanged: any;\r\n        type: any;\r\n        pipDateFormat: any;\r\n        pipNoLine: any;\r\n    }\r\n\r\n    const DateRangeBindings: IDateRangeBindings = {\r\n        timeMode: '@pipTimeMode',\r\n        disabled: '&ngDisabled',\r\n        model: '=ngModel',\r\n        pipChanged: '&',\r\n        type: '@pipDateRangeType',\r\n        pipDateFormat: '@',\r\n        pipNoLine: '@'\r\n    }\r\n\r\n\r\n    class DateRangeChanges implements ng.IOnChangesObject, IDateRangeBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        timeMode: ng.IChangesObject<string>;\r\n        disabled: ng.IChangesObject<() => void>;\r\n        model: ng.IChangesObject<any>;\r\n        pipChanged: ng.IChangesObject<() => void>;\r\n        type: ng.IChangesObject<string>;\r\n        pipDateFormat: ng.IChangesObject<any>;\r\n        pipNoLine: ng.IChangesObject<any>;\r\n    }\r\n\r\n    class DateRangeController {\r\n        private currentDate: Date;\r\n        private currentYear: number;\r\n        private currentMonth: number;\r\n        private currentDay: number;\r\n        private prevState: any = {};\r\n        private currentState: any = {};\r\n        private localeDate: any;\r\n        private momentMonths: any;\r\n        private momentDays: any;\r\n        private momentShortDays: any;\r\n        private momentFirstDayOfWeek: any;\r\n\r\n        public type: string;\r\n        public pipChanged: Function;\r\n        public year: number;\r\n        public month: number;\r\n        public week: any;\r\n        public day: number;\r\n        public shortMonths: string[];\r\n        public days: number[];\r\n        public weeks: any[];\r\n        public months: number[];\r\n        public years: number[];\r\n        public nameDays: string[];\r\n        public model: any;\r\n        public disabled: Function;\r\n        public disableControls: boolean;\r\n        public timeMode: string;\r\n\r\n        constructor(\r\n            public $mdMedia: angular.material.IMedia,\r\n            private $timeout: ng.ITimeoutService,\r\n            $scope: ng.IScope,\r\n            $element,\r\n            $rootScope: ng.IRootScopeService,\r\n            $injector: angular.auto.IInjectorService) {\r\n            \"ngInject\";\r\n\r\n            this.localeDate = moment.localeData();\r\n            this.momentMonths = angular.isArray(this.localeDate._months) ? this.localeDate._months : this.localeDate._months.standalone;\r\n            this.momentDays = angular.isArray(this.localeDate._weekdays) ? this.localeDate._weekdays : this.localeDate._weekdays.format;\r\n            this.momentShortDays = this.localeDate._weekdaysMin;\r\n            this.momentFirstDayOfWeek = this.localeDate._week.dow;\r\n\r\n            this.currentDate = new Date();\r\n            this.currentYear = this.currentDate.getUTCFullYear();\r\n            this.currentMonth = this.currentDate.getUTCMonth() + 1;\r\n            this.currentDay = this.currentDate.getUTCDate();\r\n\r\n            this.init();\r\n\r\n            this.disableControls = this.disabled ? this.disabled() : false;\r\n\r\n\r\n            $scope.$watch('$ctrl.type', (newValue, oldValue) => {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    this.init();\r\n                }\r\n            });\r\n\r\n            $scope.$watch(() => this.model, (newValue) => {\r\n                this.getValue(newValue);\r\n            });\r\n\r\n        }\r\n\r\n        public $onChanges(changes: DateRangeChanges) {\r\n            if (changes.type && changes.type.currentValue) {\r\n                this.type = changes.type.currentValue;\r\n                this.init();\r\n            }\r\n\r\n            /*if (changes.type && changes.type.currentValue && changes.type.currentValue != changes.type.previousValue) {\r\n               this.type = changes.type.currentValue; \r\n               this.init();\r\n           }\r\n   \r\n           if (changes.disabled && changes.disabled.currentValue) {\r\n                this.disableControls = changes.disabled.currentValue();\r\n           }\r\n   \r\n           if (changes.model && changes.model.currentValue) {\r\n                 this.getValue(changes.model.currentValue);\r\n           }*/\r\n\r\n        }\r\n\r\n        public onMonthChanged(): void {\r\n            if (this.type === 'weekly') {\r\n                let date: Date, dayOfWeek: number;\r\n                date = new Date(Date.UTC(this.year, this.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                this.week = this.getWeekByDate(dayOfWeek, this.month - 1, this.year);\r\n                this.correctWeek();\r\n                this.adjustWeek();\r\n            } else {\r\n                this.adjustDay();\r\n            }\r\n            this.setValue();\r\n        }\r\n\r\n        public onYearChanged(): void {\r\n            let date: Date, dayOfWeek: number;\r\n            date = new Date(Date.UTC(this.year, this.month - 1, 1));\r\n            dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n            if (this.type === 'weekly') {\r\n                this.week = this.getWeekByDate(dayOfWeek, this.month - 1, this.year);\r\n                this.adjustWeek();\r\n                this.correctWeek();\r\n            } else {\r\n                this.adjustDay();\r\n            }\r\n            this.setValue();\r\n        };\r\n\r\n        public onWeekChange() {\r\n            if (this.type === 'weekly') {\r\n                this.adjustWeek();\r\n                this.correctWeek();\r\n            } else {\r\n                this.adjustDay();\r\n            }\r\n            this.setValue();\r\n        };\r\n\r\n        public isDay(): boolean {\r\n            return this.type === 'daily';\r\n        };\r\n\r\n        public isWeek(): boolean {\r\n            return this.type === 'weekly';\r\n        };\r\n\r\n        public isMonth(): boolean {\r\n            return this.type === 'daily' ||\r\n                this.type === 'weekly' ||\r\n                this.type === 'monthly';\r\n        };\r\n\r\n        public onChange() {\r\n            if (this.pipChanged) {\r\n                this.$timeout(() => {\r\n                    this.pipChanged();\r\n                }, 0);\r\n            }\r\n        };\r\n\r\n        private setCurrent() {\r\n            this.currentState.day = this.day;\r\n            this.currentState.month = this.month;\r\n            this.currentState.year = this.year;\r\n            this.currentState.week = this.week;\r\n            this.currentState.dateRangeType = this.type;\r\n            this.currentState.model = this.model;\r\n        }\r\n\r\n        private fillLists() {\r\n            this.days = this.dayList(this.month, this.year);\r\n            this.weeks = this.weekList(this.month, this.year);\r\n            this.months = this.monthList();\r\n            this.shortMonths = this.monthList();\r\n            this.years = this.yearList();\r\n        }\r\n\r\n        private correctWeek() {\r\n            if (!this.prevState.model || this.prevState.model && this.prevState.model.getTime() >= this.model.getTime()) {\r\n                // if shift week -> increase month\r\n                if (this.weeks && this.weeks[this.week] && this.weeks[this.week].id <= 0) {\r\n                    if (this.month < 12) {\r\n                        this.month += 1;\r\n                    } else {\r\n                        this.month = 1;\r\n                        this.year += 1;\r\n                    }\r\n                    this.fillLists();\r\n                }\r\n            }\r\n        }\r\n\r\n        private init() {\r\n            let value: Date;\r\n\r\n            value = this.model ? new Date(this.model) : null;\r\n            this.day = value ? value.getUTCDate() : null;\r\n            this.month = value ? value.getUTCMonth() + 1 : null;\r\n            this.year = value ? value.getUTCFullYear() : null;\r\n            this.week = value ? this.getWeekByDate(this.day, this.month - 1, this.year) : null;\r\n\r\n            this.fillLists();\r\n\r\n            if (this.type === 'weekly') {\r\n                this.correctWeek();\r\n            }\r\n            this.adjustWeek();\r\n            this.setValue();\r\n        }\r\n\r\n        public onYearClick() {\r\n            if (!this.year) {\r\n                this.year = this.currentYear;\r\n            }\r\n        };\r\n\r\n        public onMonthClick() {\r\n            if (!this.month) {\r\n                this.month = this.currentMonth;\r\n            }\r\n        };\r\n\r\n        public onDayClick() {\r\n            if (!this.year) {\r\n                this.day = this.currentDay;\r\n            }\r\n        };\r\n        // ---------------------------------------------------------------------------------------\r\n\r\n        public getCountDay(month: number, year: number): number {\r\n            let count = 31;\r\n\r\n            if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                count = 30;\r\n                return count;\r\n            }\r\n\r\n            if (month === 2) {\r\n                if (year) {\r\n                    count = year % 4 === 0 ? 29 : 28;\r\n                    return count;\r\n                }\r\n                count = 28;\r\n            }\r\n\r\n            return count;\r\n\r\n        }\r\n\r\n        private dayList(month: number, year: number): number[] {\r\n            let count: number, days: number[];\r\n\r\n            count = this.getCountDay(month, year);\r\n            this.nameDays = [];\r\n            days = [];\r\n            for (let i: number = 1; i <= count; i++) {\r\n                days.push(i);\r\n                this.nameDays.push(moment([year, month - 1, i]).format('dd'));\r\n            }\r\n\r\n            return days;\r\n        }\r\n\r\n        public getWeekByDate(day, month, year) {\r\n            let date: Date, dayOfWeek: number, startWeek;\r\n\r\n            date = new Date(Date.UTC(year, month, day));\r\n            dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n            if (dayOfWeek === 1) {\r\n                startWeek = day;\r\n            } else {\r\n                startWeek = day + 1 - dayOfWeek;\r\n            }\r\n\r\n            return startWeek;\r\n        }\r\n\r\n        public getWeek(day: number, countDay: number, countPrevMonthDay) {\r\n            let endDay: number, startDay: number;\r\n\r\n            endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n            startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n            return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n        }\r\n\r\n        public weekList(month: number, year: number) { // возвращает список начала надели\r\n            let weeks: any[], countDay: number, countPrevMonthDay: number, startWeek: number;\r\n\r\n            weeks = [];  // в массиве первые дни недели в текущем месяце\r\n            countDay = this.getCountDay(month, year);\r\n            startWeek = this.getWeekByDate(1, month - 1, year);\r\n\r\n            countPrevMonthDay = month - 1 ? this.getCountDay(month - 1, year) : this.getCountDay(12, year - 1);\r\n            while (startWeek < countDay + 1) {\r\n                weeks.push({\r\n                    id: startWeek,\r\n                    name: this.getWeek(startWeek, countDay, countPrevMonthDay)\r\n                });\r\n                startWeek = startWeek + 7;\r\n            }\r\n\r\n            return weeks;\r\n        }\r\n\r\n        private monthList() {\r\n            let months: any[] = [];\r\n\r\n            for (let i: number = 1; i <= 12; i++) {\r\n                months.push({\r\n                    id: i,\r\n                    name: this.momentMonths[i - 1]\r\n                });\r\n            }\r\n\r\n            return months;\r\n        }\r\n\r\n        private yearList() {\r\n            let startYear: number, endYear: number, years: any[] = [];\r\n\r\n            switch (this.timeMode) {\r\n                case 'future':\r\n                    startYear = this.currentYear;\r\n                    endYear = this.currentYear + 100;\r\n                    break;\r\n                case 'past':\r\n                    startYear = this.currentYear - 100;\r\n                    endYear = this.currentYear;\r\n                    break;\r\n                case 'now':\r\n                    startYear = this.currentYear - 50;\r\n                    endYear = this.currentYear + 100;\r\n                    break;\r\n                default:\r\n                    startYear = this.currentYear - 50;\r\n                    endYear = this.currentYear + 50;\r\n                    break;\r\n            }\r\n            if (this.timeMode === 'future') {\r\n                for (let i: number = startYear; i <= endYear; i++) {\r\n                    years.push(i);\r\n                }\r\n            } else {\r\n                for (let i: number = endYear; i >= startYear; i--) {\r\n                    years.push(i);\r\n                }\r\n            }\r\n\r\n            return years;\r\n        }\r\n\r\n        private adjustDay() {\r\n            let days = this.dayList(this.month, this.year);\r\n\r\n            switch (this.type) {\r\n                case 'monthly':\r\n                    this.day = 1;\r\n                    break;\r\n                case 'yearly':\r\n                    this.month = 1;\r\n                    this.day = 1;\r\n                    break;\r\n                default:\r\n                    if (this.days.length !== days.length) {\r\n                        if (this.day > days.length) {\r\n                            this.day = days.length;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n            this.days = days;\r\n        }\r\n\r\n        private adjustWeek() {\r\n            let weeks = this.weekList(this.month, this.year);\r\n            this.week = this.getWeekByDate(this.week, this.month - 1, this.year);\r\n            this.weeks = weeks;\r\n        }\r\n\r\n        private getValue(v) {\r\n            let value: Date, day: number, month: number, year: number, week: string;\r\n\r\n            value = v ? new Date(v) : null;\r\n            // Define values\r\n            day = value ? value.getUTCDate() : null;\r\n            month = value ? value.getUTCMonth() + 1 : null;\r\n            year = value ? value.getUTCFullYear() : null;\r\n            week = value ? this.getWeekByDate(day, month - 1, year) : null;\r\n            // Exit if nothing to update\r\n            if (this.day === day && this.month === month && this.year === year && this.week === week) {\r\n                return;\r\n            }\r\n            // Assign values to scope\r\n            this.day = day;\r\n            this.month = month;\r\n            this.year = year;\r\n            this.week = week;\r\n\r\n            // Define data sources\r\n            this.days = this.dayList(this.month, this.year);\r\n            this.weeks = this.weekList(this.month, this.year);\r\n        }\r\n\r\n        public setValue() {\r\n            let value;\r\n\r\n            if (this.type === 'weekly') {\r\n                value = new Date(this.year, this.month - 1, this.week, 0, 0, 0, 0);\r\n                value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                this.model = value;\r\n            } else {\r\n                value = new Date(this.year, this.month - 1, this.day, 0, 0, 0, 0);\r\n                value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                this.model = value;\r\n            }\r\n\r\n            this.prevState = _.cloneDeep(this.currentState);\r\n            this.setCurrent();\r\n            this.onChange();\r\n        }\r\n\r\n    }\r\n\r\n    const daterange: ng.IComponentOptions = {\r\n        bindings: DateRangeBindings,\r\n        templateUrl: 'date_range/DateRange.html',\r\n        controller: DateRangeController \r\n\r\n    };\r\n    angular\r\n        .module('pipDateRange', ['pipDates.Templates'])\r\n        .component('pipDateRange', daterange)\r\n})();\r\n","{\r\n    function translateFilter($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipDates.Translate', [])\r\n        .filter('translate', translateFilter);\r\n}","angular.module('pipDates', [\r\n    'pipDate',\r\n    'pipDate.Common',\r\n    'pipTimeRange',\r\n    'pipTimeRangeEdit',\r\n    'pipDateRange',\r\n    'pipDates.Translate'\r\n]);\r\n","\r\n(() => {\r\n    class TimeRangeData {\r\n        start: any;\r\n        end: any;\r\n    }\r\n\r\n    interface ITimeRangeBindings {\r\n        [key: string]: any;\r\n\r\n        start: any;\r\n        end: any;\r\n    }\r\n\r\n    const TimeRangeBindings: ITimeRangeBindings = {\r\n        start: '<?pipStartDate',\r\n        end: '<?pipEndDate'\r\n    }\r\n\r\n    class TimeRangeChanges implements ng.IOnChangesObject, ITimeRangeBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        start: ng.IChangesObject<any>;\r\n        end: ng.IChangesObject<any>;\r\n    }\r\n\r\n    class TimeRangeController {\r\n        public data: TimeRangeData;\r\n        public start: any;\r\n        public end: any;\r\n\r\n        constructor($scope: ng.IScope, $attrs: ng.IAttributes, $element: JQuery) {\r\n            \"ngInject\";\r\n            this.data = new TimeRangeData();\r\n            this.defineStartDate();\r\n            this.defineEndDate();\r\n\r\n            $element.addClass('pip-time-range');\r\n        }\r\n\r\n        public $onChanges(changes: TimeRangeChanges) {\r\n            if (changes.start && changes.start.currentValue) {\r\n                this.data.start = null;\r\n                this.defineStartDate();\r\n            }\r\n            if (changes.end && changes.end.currentValue) {\r\n                this.data.end = null;\r\n                this.defineEndDate();\r\n            }\r\n        }\r\n\r\n        private getDateJSON(value: any): Date {\r\n            return value ? new Date(value) : null;\r\n        }\r\n\r\n        private defineStartDate() {\r\n            if (this.start !== null && this.start !== undefined) {\r\n                this.data.start = _.isDate(this.start) ? this.start\r\n                    : this.getDateJSON(this.start);\r\n            }\r\n        }\r\n\r\n        private defineEndDate() {\r\n            if (this.end !== null && this.end !== undefined) {\r\n                this.data.end = _.isDate(this.end) ? this.end\r\n                    : this.getDateJSON(this.end);\r\n            }\r\n        }\r\n\r\n        private toBoolean(value): boolean {\r\n            if (value == null) return false;\r\n            if (!value) return false;\r\n            value = value.toString().toLowerCase();\r\n            return value == '1' || value == 'true';\r\n        }\r\n    }\r\n\r\n    const TimeRangeComponent: ng.IComponentOptions = {\r\n        bindings: TimeRangeBindings,\r\n        templateUrl: 'time_range/TimeRange.html',\r\n        controller: TimeRangeController\r\n    }\r\n\r\n    angular.module('pipTimeRange', [])\r\n        .component('pipTimeRange', TimeRangeComponent);\r\n\r\n})();\r\n","export const IntervalTimeRange = 30;\r\nexport const MinutesInHour = 60;\r\nexport const HoursInDay = 24;\r\nexport const MillisecondsInSecond = 1000;\r\n\r\n{\r\n    class TimeRangeEditData {\r\n        endTime: number;\r\n        startTime: number;\r\n        startDate: Date;\r\n        endDate: Date;\r\n        duration: number;\r\n        bind: boolean = false;\r\n    }\r\n\r\n\r\n    interface ITimeRangeEditBindings {\r\n        [key: string]: any;\r\n\r\n        pipStartDate: any,\r\n        pipChanged: any,\r\n        pipEndDate: any,\r\n        pipStartLabel: any,\r\n        pipEndLabel: any,\r\n        disabled: any,\r\n        pipHideTime: any,\r\n        pipSize: any\r\n    }\r\n\r\n    const TimeRangeEditBindings: ITimeRangeEditBindings = {\r\n        pipStartDate: '<',\r\n        pipChanged: '=',\r\n        pipEndDate: '<',\r\n        pipStartLabel: '@',\r\n        pipEndLabel: '@',\r\n        disabled: '&ngDisabled',\r\n        pipHideTime: '=',\r\n        pipSize: '='\r\n    }\r\n\r\n    class TimeRangeEditChanges implements ng.IOnChangesObject, ITimeRangeEditBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n\r\n        pipStartDate: ng.IChangesObject<any>;\r\n        pipChanged: ng.IChangesObject<(start: Date, end: Date) => void>\r\n        pipEndDate: ng.IChangesObject<any>;\r\n        pipStartLabel: ng.IChangesObject<string>;\r\n        pipEndLabel: ng.IChangesObject<string>;\r\n        disabled: ng.IChangesObject<() => void>;\r\n        pipHideTime: ng.IChangesObject<boolean>;\r\n        pipSize: ng.IChangesObject<any>;\r\n    }\r\n\r\n\r\n    class TimeRangeEditController {\r\n        public startLabel: string = 'Start time';\r\n        public endLabel: string = 'End time';\r\n        public pipStartLabel: string;\r\n        public pipEndLabel: string;\r\n\r\n        public pipEndDate: any;\r\n        public pipStartDate: any;\r\n        public pipHideTime: boolean;\r\n        public pipSize;\r\n        public showTime: boolean;\r\n        public data: TimeRangeEditData;\r\n        public intervalTimeCollection: any;\r\n        public disabled: () => boolean;\r\n\r\n        public pipChanged: (start: Date, end: Date) => void;\r\n\r\n        constructor(\r\n            private $injector: angular.auto.IInjectorService,\r\n            private pipDateConvert,\r\n            private $scope: ng.IScope,\r\n            $element: JQuery) {\r\n            \"ngInject\";\r\n\r\n            this.translate();\r\n            this.intervalTimeCollection = this.getTimeInterval();\r\n            this.data = new TimeRangeEditData();\r\n            this.initDate();\r\n            this.defineDate();\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }\r\n\r\n        public $onChanges(changes: TimeRangeEditChanges) {\r\n            if (changes.pipStartDate && changes.pipStartDate.currentValue) {\r\n                this.pipStartDate = changes.pipStartDate.currentValue;\r\n                this.initDate();\r\n                this.defineDate();\r\n            }\r\n            if (changes.pipEndDate && changes.pipEndDate.currentValue) {\r\n                this.pipEndDate = changes.pipEndDate.currentValue;\r\n                this.initDate();\r\n                this.defineDate();\r\n            }\r\n\r\n        }\r\n\r\n        private translate() {\r\n            let pipTranslate: any = this.$injector.has('pipTranslate') ? this.$injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    EVENT_NEW_START_TIME: 'Start time',\r\n                    EVENT_NEW_END_TIME: 'End time'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    EVENT_NEW_START_TIME: 'Начало',\r\n                    EVENT_NEW_END_TIME: 'Конец'\r\n                });\r\n                this.startLabel = this.pipStartLabel ? pipTranslate.translate(this.pipStartLabel)\r\n                    : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n                this.endLabel = this.pipEndLabel ? pipTranslate.translate(this.pipEndLabel)\r\n                    : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            }\r\n        }\r\n\r\n        private getDateJSON(value: any): Date {\r\n            return value ? new Date(value) : null;\r\n        }\r\n\r\n        private setDuration() {\r\n            let start, end;\r\n\r\n            if (!this.data.startDate || !this.data.endDate) {\r\n                return null;\r\n            }\r\n\r\n            start = new Date(this.data.startDate.getTime() + this.data.startTime * MinutesInHour * MillisecondsInSecond);\r\n            end = new Date(this.data.endDate.getTime() + this.data.endTime * MinutesInHour * MillisecondsInSecond);\r\n\r\n            return end - start;\r\n        }\r\n\r\n        private validateStartDate() {\r\n            let date: Date = new Date(), start: Date = new Date(), end: Date = new Date(), endTime: number, startTime: number;\r\n            // если начальная дата не задана, обнуляем и выходим\r\n            if (!this.data.startDate || _.isNull(this.data.startDate) || !this.data) {\r\n                this.data.startTime = null;\r\n                this.data.startDate = null;\r\n                return;\r\n            }\r\n\r\n            // еcли не задано начальное время - задаем его\r\n            if (_.isUndefined(this.data.startTime) || _.isNull(this.data.startTime)) {\r\n                if (!this.data || !this.data.endTime) {\r\n                    date = new Date();\r\n                    startTime = date.getTime() - this.pipDateConvert.toStartDay(date);\r\n                    this.data.startTime = Math.floor(startTime / (IntervalTimeRange * MinutesInHour * MillisecondsInSecond)) * IntervalTimeRange;\r\n                } else {\r\n                    this.data.startTime = this.data.endTime === 0 ? 0 : this.data.endTime - IntervalTimeRange;\r\n                }\r\n            }\r\n\r\n            if (this.data && this.data.startDate) {\r\n                start = new Date(this.data.startDate.getTime() + this.data.startTime * MinutesInHour * MillisecondsInSecond);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if (this.data.duration) {\r\n                    end = new Date(start.getTime() + this.data.duration);\r\n                    this.data.endDate = this.pipDateConvert.toStartDay(end);\r\n                    endTime = end.getTime() - this.data.endDate.getTime();\r\n                    this.data.endTime = Math.floor(endTime / (IntervalTimeRange * MinutesInHour * MillisecondsInSecond)) * IntervalTimeRange;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date(this.data.endDate.getTime() + this.data.endTime * MinutesInHour * MillisecondsInSecond);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        this.data.endDate = this.pipDateConvert.toStartDay(new Date(start.getTime() + (IntervalTimeRange * MinutesInHour * MillisecondsInSecond)));\r\n                        this.data.endTime = (this.data.startTime + IntervalTimeRange) % (HoursInDay * MinutesInHour); // минут в сутках\r\n                    }\r\n                }\r\n\r\n                this.data.startTime = Math.round(this.data.startTime / IntervalTimeRange) * IntervalTimeRange;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        private validateEndDate() {\r\n            let date: any = new Date(), start: Date = new Date(), end: Date = new Date();\r\n\r\n            if (!this.data.endDate) {\r\n                this.data.endTime = null;\r\n                this.data.endDate = null;\r\n                return;\r\n            }\r\n\r\n            // еcли не задано конечное время - задаем его\r\n            if (_.isUndefined(this.data.endTime) || _.isNull(this.data.endTime)) {\r\n                if (!this.data.startTime) {\r\n                    date = new Date();\r\n                    date = date.getTime() - this.pipDateConvert.toStartDay(date);\r\n                    this.data.endTime = Math.floor(date / (IntervalTimeRange * MinutesInHour * MillisecondsInSecond)) * IntervalTimeRange;\r\n                } else {\r\n                    this.data.endTime = this.data.startTime === (HoursInDay * MinutesInHour - IntervalTimeRange) ? (HoursInDay * MinutesInHour - IntervalTimeRange) : this.data.startTime + IntervalTimeRange;\r\n                }\r\n            }\r\n            if (this.data.startDate && this.data.startTime) {\r\n                start = new Date(this.data.startDate.getTime() + this.data.startTime * MinutesInHour * MillisecondsInSecond);\r\n            }\r\n            if (this.data.endDate && this.data.endTime) {\r\n                end = new Date(this.data.endDate.getTime() + this.data.endTime * MinutesInHour * MillisecondsInSecond);\r\n            }\r\n\r\n            if (start >= end) {\r\n                // Если начальная дата больше, то двигаем начальную дату\r\n                this.data.startDate = this.pipDateConvert.toStartDay(new Date(end.getTime() - IntervalTimeRange * MinutesInHour * MillisecondsInSecond));\r\n                this.data.startTime = this.data.endTime % (HoursInDay * MinutesInHour) === 0 ? (HoursInDay * MinutesInHour - IntervalTimeRange) : this.data.endTime - IntervalTimeRange;\r\n            }\r\n\r\n            this.data.endTime = Math.round(this.data.endTime / IntervalTimeRange) * IntervalTimeRange;\r\n            this.data.duration = this.setDuration();\r\n        }\r\n\r\n        private setDate() {\r\n            let time: number;\r\n\r\n            if (!this.data) this.data = new TimeRangeEditData();\r\n            this.data.bind = false;\r\n\r\n            if (this.data.startDate) {\r\n                time = this.data.startTime ? this.data.startTime * MinutesInHour * MillisecondsInSecond : 0;\r\n                this.pipStartDate = new Date(this.data.startDate.getTime() + time);\r\n            }\r\n\r\n            if (this.data.endDate) {\r\n                time = this.data.endTime ? this.data.endTime * MinutesInHour * MillisecondsInSecond : 0;\r\n                this.pipEndDate = new Date(this.data.endDate.getTime() + time);\r\n            }\r\n\r\n            this.data.bind = true;\r\n        }\r\n\r\n        private defineDate() {\r\n            let start: Date, end: Date;\r\n            if (this.pipStartDate !== null && this.pipStartDate !== undefined) {\r\n                start = _.isDate(this.pipStartDate) ? this.pipStartDate : null;\r\n\r\n                if (!start) {\r\n                    start = this.getDateJSON(this.pipStartDate);\r\n                }\r\n\r\n                this.data.startDate = this.pipDateConvert.toStartDay(start);\r\n                this.data.startTime = (<any>new Date(start) - <any>this.data.startDate) / (MinutesInHour * MillisecondsInSecond);\r\n            }\r\n\r\n            if (this.pipEndDate !== null && this.pipEndDate !== undefined) {\r\n                end = _.isDate(this.pipEndDate) ? this.pipEndDate : null;\r\n\r\n                if (!end) {\r\n                    end = this.getDateJSON(this.pipEndDate);\r\n                }\r\n\r\n                this.data.endDate = this.pipDateConvert.toStartDay(end);\r\n                this.data.endTime = (<any>new Date(end) - <any>this.data.endDate) / (MinutesInHour * MillisecondsInSecond);\r\n            }\r\n\r\n            this.validateStartDate();\r\n            this.validateEndDate();\r\n            this.data.duration = this.setDuration();\r\n            this.setDate();\r\n        }\r\n\r\n        private getTimeInterval() {\r\n            let result, minutes: number;\r\n\r\n            result = [];\r\n            for (let i: number = 0; i < 24; i++) {\r\n                for (let j: number = 0; j < 2; j++) {\r\n                    minutes = j * IntervalTimeRange;\r\n                    result.push({\r\n                        id: i * MinutesInHour + minutes,\r\n                        time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                    });\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        private toBoolean(value: any): boolean {\r\n            if (value == null) return false;\r\n            if (!value) return false;\r\n            value = value.toString().toLowerCase();\r\n            return value == '1' || value == 'true';\r\n        }\r\n\r\n        private initDate() {\r\n            this.data.startDate = null;\r\n            this.data.startTime = null;\r\n            this.data.endDate = null;\r\n            this.data.endTime = null;\r\n            this.data.duration = null;\r\n            this.showTime = !this.toBoolean(this.pipHideTime);\r\n        }\r\n\r\n        public onChangeStartDate(newV) {\r\n            this.validateStartDate();\r\n            this.data.duration = this.setDuration();\r\n            this.setDate();\r\n            this.pipChanged(this.pipStartDate, this.pipEndDate);\r\n        };\r\n\r\n        public onChangeEndDate() {\r\n            this.validateEndDate();\r\n            this.data.duration = this.setDuration();\r\n            this.setDate();\r\n            this.pipChanged(this.pipStartDate, this.pipEndDate);\r\n        };\r\n\r\n        public onChangeStartTime() {\r\n            if (!this.data.startDate) {\r\n                this.data.startDate = this.pipDateConvert.toStartDay(new Date());\r\n            }\r\n            this.validateStartDate();\r\n            this.data.duration = this.setDuration();\r\n            this.setDate();\r\n            this.pipChanged(this.pipStartDate, this.pipEndDate);\r\n        };\r\n\r\n        public onChangeEndTime() {\r\n            if (!this.data.endDate) {\r\n                this.data.endDate = this.pipDateConvert.toStartDay(new Date());\r\n            }\r\n\r\n            this.validateEndDate();\r\n            this.data.duration = this.setDuration();\r\n            this.setDate();\r\n            this.pipChanged(this.pipStartDate, this.pipEndDate);\r\n        };\r\n\r\n        public isDisabled() {\r\n            if (this.disabled) {\r\n                return this.disabled();\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n    }\r\n\r\n    const TimeRangeEditComponent: ng.IComponentOptions = {\r\n        bindings: TimeRangeEditBindings,\r\n        templateUrl: 'time_range_edit/TimeRangeEdit.html',\r\n        controller: TimeRangeEditController\r\n    };\r\n    angular.module('pipTimeRangeEdit', [])\r\n        .component('pipTimeRangeEdit', TimeRangeEditComponent)\r\n\r\n}\r\n","(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date/Date.html',\n    '<div class=\"pip-date layout-row flex\" tabindex=\"-1\"><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-day flex\" ng-disabled=\"$ctrl.disableControls\" ng-model=\"$ctrl.day\" placeholder=\"{{$ctrl.dayLabel}}\" ng-change=\"$ctrl.setValue()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in $ctrl.days track by opt\">{{:: opt }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-monthflex\" ng-disabled=\"$ctrl.disableControls\" ng-model=\"$ctrl.month\" placeholder=\"{{$ctrl.monthLabel}}\" ng-change=\"$ctrl.onMonthChanged()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.months track by opt.id\">{{:: opt.name }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-year flex\" ng-disabled=\"$ctrl.disableControls\" ng-model=\"$ctrl.year\" placeholder=\"{{$ctrl.yearLabel}}\" ng-change=\"$ctrl.onYearChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in $ctrl.years track by opt\">{{:: opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_range/DateRange.html',\n    '<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\"><md-input-container ng-show=\"$ctrl.isDay()\" class=\"input-container pip-day flex\" ng-class=\"{\\'flex-fixed\\' : $ctrl.$mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-day\" ng-class=\"{\\'pip-no-line\\' : $ctrl.pipNoLine}\" ng-disable=\"{{$ctrl.disableControls}}\" md-on-open=\"$ctrl.onDayClick()\" ng-model=\"$ctrl.day\" ng-change=\"$ctrl.setValue()\" placeholder=\"{{$ctrl.dayLabel}}\" aria-label=\"DAY\"><md-option ng-value=\"opt\" ng-repeat=\"opt in $ctrl.days track by opt\">{{$ctrl.nameDays[$index]}} {{ opt }}</md-option></md-select></md-input-container><md-input-container ng-show=\"$ctrl.isWeek()\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $ctrl.$mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-week\" ng-class=\"{\\'pip-no-line\\' : $ctrl.pipNoLine}\" ng-disable=\"{{$ctrl.disableControls}}\" ng-model=\"$ctrl.week\" ng-change=\"$ctrl.onWeekChange()\" placeholder=\"{{$ctrl.weekLabel}}\" aria-label=\"WEEK\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.weeks track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $ctrl.$mdMedia(\\'gt-xs\\'), \\'space8\\': $ctrl.$mdMedia(\\'xs\\')}\" ng-show=\"$ctrl.isDay() || $ctrl.isWeek()\"></div><md-input-container ng-show=\"$ctrl.isMonth() && !$ctrl.monthFormatShort\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $ctrl.$mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : $ctrl.pipNoLine}\" ng-disable=\"{{$ctrl.disableControls}}\" md-on-open=\"$ctrl.onMonthClick()\" ng-model=\"$ctrl.month\" ng-change=\"$ctrl.onMonthChanged()\" placeholder=\"{{$ctrl.monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.months track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><md-input-container ng-show=\"$ctrl.isMonth() && $ctrl.monthFormatShort\" class=\"flex input-container\" ng-class=\"{\\'flex-fixed\\' : $ctrl.$mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : $ctrl.pipNoLine}\" ng-disable=\"{{$ctrl.disableControls}}\" md-on-open=\"$ctrl.onMonthClick()\" ng-model=\"$ctrl.month\" ng-change=\"$ctrl.onMonthChanged()\" placeholder=\"{{$ctrl.monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.shortMonths track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $ctrl.$mdMedia(\\'gt-xs\\'), \\'space8\\': $ctrl.$mdMedia(\\'xs\\')}\" ng-show=\"$ctrl.isMonth()\"></div><md-input-container class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $ctrl.$mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-year\" ng-class=\"{\\'pip-no-line\\' : $ctrl.pipNoLine}\" ng-disable=\"{{$ctrl.disableControls}}\" md-on-open=\"$ctrl.onYearClick()\" ng-model=\"$ctrl.year\" ng-change=\"$ctrl.onYearChanged()\" placeholder=\"{{$ctrl.yearLabel}}\" aria-label=\"YEAR\"><md-option ng-value=\"opt\" ng-repeat=\"opt in $ctrl.years track by opt\">{{ opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range/TimeRange.html',\n    '<p><span ng-if=\"$ctrl.data.start != null\">{{$ctrl.data.start | formatLongDateTime}}</span> <span class=\"separator\" ng-if=\"$ctrl.data.start && $ctrl.data.end\">-</span> <span ng-if=\"$ctrl.data.end != null\">{{$ctrl.data.end | formatLongDateTime}}</span></p>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_edit/TimeRangeEdit.html',\n    '<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\"><div flex=\"47\" class=\"start-time-container\"><p class=\"text-caption text-grey\">{{$ctrl.startLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container\" flex=\"49\"><md-datepicker ng-model=\"$ctrl.data.startDate\" xmd-placeholder=\"{{$ctrl.startLabel}}\" ng-change=\"$ctrl.onChangeStartDate()\" ng-disabled=\"$ctrl.isDisabled()\" aria-label=\"START-DATE\"></md-datepicker></div><div flex=\"\" ng-if=\"$ctrl.showTime\"><md-input-container class=\"input-container\"><md-select aria-label=\"START-TIME\" ng-model=\"$ctrl.data.startTime\" ng-disabled=\"$ctrl.isDisabled()\" ng-change=\"$ctrl.onChangeStartTime($ctrl.data.startTime)\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div><div flex=\"47\" class=\"end-time-container\"><p class=\"text-caption text-grey\">{{$ctrl.endLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container flex-49\"><md-datepicker ng-model=\"$ctrl.data.endDate\" xmd-placeholder=\"{{$ctrl.endLabel}}\" ng-disabled=\"$ctrl.isDisabled()\" ng-change=\"$ctrl.onChangeEndDate()\" aria-label=\"END-DATE\"></md-datepicker></div><div flex=\"\" ng-if=\"$ctrl.showTime\"><md-input-container class=\"input-container\"><md-select aria-label=\"END-TIME\" ng-model=\"$ctrl.data.endTime\" ng-change=\"$ctrl.onChangeEndTime()\" ng-disabled=\"$ctrl.isDisabled()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in $ctrl.intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dates-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}