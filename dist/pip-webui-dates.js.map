<<<<<<< HEAD
{"version":3,"sources":["dates.js","pip-webui-dates-html.js","date/date.js","filters/datetime.js","date_range/date_range.js","formatting/date_format.js","time_range_edit/time_range_edit.js","time_range/time_range.js","utilites/dates_utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvjtgpfile":"pip-webui-dates.js","sourcesContent":["/**\r\n * @file Registration of Dates and times WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('pipDateTimes', [\r\n        'pipDate',\r\n        'pipDateRange',\r\n        'pipTimeRangeEdit',\r\n        'pipTimeRange',\r\n        'pipDatesUtils',\r\n        'pipDateFormat',\r\n        'pipDateTimeFilters'\r\n    ]);\r\n\r\n\r\n})(window.angular);\r\n\r\n","(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date/date.html',\n    '<!--\\n' +\n    '@file Date control content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<div class=\"pip-date layout-row flex\" tabindex=\"-1\">\\n' +\n    '\t<md-input-container class=\"tm0 flex\">\\n' +\n    '\t\t<md-select class=\"pip-date-day tm0 flex\" ng-disabled=\"disableControls\"\\n' +\n    '\t\t\t\t   ng-model=\"day\" placeholder=\"{{dayLabel}}\" ng-change=\"onDayChanged()\">\\n' +\n    '\t\t\t<md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{:: opt }}</md-option>\\n' +\n    '\t\t</md-select>\\n' +\n    '\t</md-input-container>\\n' +\n    '\t<div class=\"w16 flex-fixed\"></div>\\n' +\n    '\t<md-input-container class=\"tm0 flex\">\\n' +\n    '\t\t<md-select class=\"pip-date-month tm0 flex\" ng-disabled=\"disableControls\"\\n' +\n    '\t\t\t\t   ng-model=\"month\" placeholder=\"{{monthLabel}}\" ng-change=\"onMonthChanged()\">\\n' +\n    '\t\t\t<md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{:: opt.name }}</md-option>\\n' +\n    '\t\t</md-select>\\n' +\n    '\t</md-input-container>\\n' +\n    '\t<div class=\"w16 flex-fixed\"></div>\\n' +\n    '\t<md-input-container class=\"tm0 flex\">\\n' +\n    '\t\t<md-select class=\"pip-date-year tm0 flex\" ng-disabled=\"disableControls\"\\n' +\n    '\t\t\t\t   ng-model=\"year\" placeholder=\"{{yearLabel}}\" ng-change=\"onYearChanged()\">\\n' +\n    '\t\t\t<md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{:: opt }}</md-option>\\n' +\n    '\t\t</md-select>\\n' +\n    '\t</md-input-container>\\n' +\n    '</div>\\n' +\n    '\t\t\t\t\t');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_range/date_range.html',\n    '<!--\\n' +\n    '@file Date range control content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\">\\n' +\n    '    <md-input-container ng-show=\"isDay()\" class=\"tm0 pip-day flex\"\\n' +\n    '            ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-day w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onDayClick()\"\\n' +\n    '                   ng-model=\"day\"\\n' +\n    '                   ng-change=\"onDayChanged()\"\\n' +\n    '                   placeholder=\"{{dayLabel}}\"\\n' +\n    '                   aria-label=\"DAY\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt \">\\n' +\n    '               {{nameDays[$index]}} {{ opt }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <md-input-container ng-show=\"isWeek()\" class=\"tm0 flex\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-week w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   ng-model=\"week\"\\n' +\n    '                   ng-change=\"onWeekChange()\"\\n' +\n    '                   placeholder=\"{{weekLabel}}\"\\n' +\n    '                   aria-label=\"WEEK\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in weeks track by opt.id\">\\n' +\n    '                {{ opt.name }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container >\\n' +\n    '    <div class=\"flex-fixed\"\\n' +\n    '         ng-class=\"{\\'w16\\': $mdMedia(\\'gt-xs\\'), \\'w8\\':  $mdMedia(\\'xs\\')}\"\\n' +\n    '         ng-show=\"isDay() || isWeek()\">\\n' +\n    '    </div>\\n' +\n    '    <md-input-container ng-show=\"isMonth() && !monthFormatShort \" class=\"tm0 flex min-w72\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-month w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onMonthClick()\"\\n' +\n    '                   ng-model=\"month\"\\n' +\n    '                   ng-change=\"onMonthChanged()\"\\n' +\n    '                   placeholder=\"{{monthLabel}}\"\\n' +\n    '                   aria-label=\"MONTH\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">\\n' +\n    '                {{ opt.name }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <md-input-container ng-show=\"isMonth() && monthFormatShort\" class=\"flex tm0\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-month w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onMonthClick()\"\\n' +\n    '                   ng-model=\"month\"\\n' +\n    '                   ng-change=\"onMonthChanged()\"\\n' +\n    '                   placeholder=\"{{monthLabel}}\"\\n' +\n    '                   aria-label=\"MONTH\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in shortMonths track by opt.id\">\\n' +\n    '                {{ opt.name }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <div class=\"flex-fixed\"\\n' +\n    '         ng-class=\"{\\'w16\\': $mdMedia(\\'gt-xs\\'), \\'w8\\':  $mdMedia(\\'xs\\')}\"\\n' +\n    '         ng-show=\"isMonth()\">\\n' +\n    '    </div>\\n' +\n    '    <md-input-container class=\"tm0 flex\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-year w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onYearClick()\"\\n' +\n    '                   ng-model=\"year\"\\n' +\n    '                   ng-change=\"onYearChanged()\"\\n' +\n    '                   placeholder=\"{{yearLabel}}\"\\n' +\n    '                   aria-label=\"YEAR\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">\\n' +\n    '                {{ opt }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range/time_range.html',\n    '<p>\\n' +\n    '    <span ng-if=\"data.start != null\">{{data.start | formatShortDateTime}}</span>\\n' +\n    '    <span  class=\"rm4 lm4\" ng-if=\"data.start && data.end\"> - </span>\\n' +\n    '    <span ng-if=\"data.end != null\">{{data.end | formatShortDateTime}}</span>\\n' +\n    '</p>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_edit/time_range_edit.html',\n    '<!--\\n' +\n    '@file Time edit control content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\">\\n' +\n    '    <div flex=\"47\" class=\"w-stretch rm24-flex0\">\\n' +\n    '        <p class=\"text-caption text-grey tm0\">{{startLabel}}</p>\\n' +\n    '\\n' +\n    '        <div class=\"layout-row layout-align-space-between-center\">\\n' +\n    '            <div class=\"rm16 pip-datepicker-container\" flex=\"49\">\\n' +\n    '                <md-datepicker ng-model=\"data.startDate\"\\n' +\n    '                               xmd-placeholder=\"{{startLabel}}\"\\n' +\n    '                               ng-change=\"onChangeStartDate()\"\\n' +\n    '                               ng-disabled=\"isDisabled()\"\\n' +\n    '                               aria-label=\"START-DATE\">\\n' +\n    '                </md-datepicker>\\n' +\n    '            </div>\\n' +\n    '            <div flex>\\n' +\n    '                <md-input-container class=\"w-stretch tm0\">\\n' +\n    '                    <md-select aria-label=\"START-TIME\" class=\"tm0 bm0\" ng-model=\"data.startTime\" ng-disabled=\"isDisabled()\"\\n' +\n    '                               ng-change=\"onChangeStartTime()\">\\n' +\n    '                        <md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}\\n' +\n    '                        </md-option>\\n' +\n    '                    </md-select>\\n' +\n    '                </md-input-container>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div flex=\"47\" class=\"w-stretch\">\\n' +\n    '        <p class=\"text-caption text-grey tm0\">{{endLabel}}</p>\\n' +\n    '\\n' +\n    '        <div class=\"layout-row layout-align-space-between-center\">\\n' +\n    '            <div class=\"rm16 pip-datepicker-container flex-49\">\\n' +\n    '                <md-datepicker ng-model=\"data.endDate\"\\n' +\n    '                               xmd-placeholder=\"{{endLabel}}\"\\n' +\n    '                               ng-disabled=\"isDisabled()\"\\n' +\n    '                               ng-change=\"onChangeEndDate()\"\\n' +\n    '                               aria-label=\"END-DATE\">\\n' +\n    '                </md-datepicker>\\n' +\n    '            </div>\\n' +\n    '            <div flex>\\n' +\n    '                <md-input-container class=\"w-stretch tm0\">\\n' +\n    '                    <md-select aria-label=\"END-TIME\" class=\"tm0 bm0\" ng-model=\"data.endTime\" ng-change=\"onChangeEndTime()\"\\n' +\n    '                               ng-disabled=\"isDisabled()\">\\n' +\n    '                        <md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{\\n' +\n    '                            opt.time }}\\n' +\n    '                        </md-option>\\n' +\n    '                    </md-select>\\n' +\n    '                </md-input-container>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n","/**\r\n * @file Date control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples int sampler app\r\n * - Optimize. It is way to slow on samples\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDate', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDate',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    ngChange: '&'\r\n                },\r\n                templateUrl: 'date/date.html',\r\n                controller: 'pipDateController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateController',\r\n        ['$scope', '$element', function ($scope, $element) { //pipTranslate\r\n            var value;\r\n\r\n            function dayList(month, year) {\r\n                var count = 31, days = [], i;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: ''//pipTranslate.translate('MONTH_' + i)\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var i,\r\n                    currentYear = new Date().getFullYear(),\r\n                    startYear = $scope.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                    endYear = $scope.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                    years = [];\r\n\r\n                if ($scope.timeMode === 'past') {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                if ($scope.days.length !== days.length) {\r\n                    if ($scope.day > days.length) {\r\n                        $scope.day = days.length;\r\n                    }\r\n\r\n                    $scope.days = days;\r\n                }\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                    day = value ? value.getDate() : null,\r\n                    month = value ? value.getMonth() + 1 : null,\r\n                    year = value ? value.getFullYear() : null;\r\n\r\n                // Update day list if month and year were changed\r\n                if ($scope.month !== month && $scope.year !== year) {\r\n                    $scope.days = dayList($scope.month, $scope.year);\r\n                }\r\n\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.day && $scope.month && $scope.year) {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    $scope.model = value;\r\n                    $scope.ngChange();\r\n                }\r\n            }\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            // Set initial values\r\n            value = $scope.model ? _.isDate($scope.model) ? $scope.model : new Date($scope.model) : null;\r\n            $scope.day = value ? value.getDate() : null;\r\n            $scope.month = value ? value.getMonth() + 1 : null;\r\n            $scope.year = value ? value.getFullYear() : null;\r\n\r\n            $scope.dayLabel = 'day'; //pipTranslate.translate('DAY');\r\n            $scope.monthLabel = 'month'; //pipTranslate.translate('MONTH');\r\n            $scope.yearLabel = 'year'; //pipTranslate.translate('YEAR');\r\n\r\n            $scope.days = dayList($scope.month, $scope.year);\r\n            $scope.months = monthList();\r\n            $scope.years = yearList();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue) {\r\n                getValue(newValue);\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n\r\n","/**\r\n * @file Filter to format date and time\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDateTimeFilters', ['pipDateFormat']);\r\n\r\n    thisModule.filter('formatDate',  \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value, format) {\r\n                return pipDateFormat.formatDate(value, format);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongDate', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongDate(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongDateWithYear',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongDateWithYear(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatMonth',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value, format) {\r\n                return pipDateFormat.formatMonth(value, format);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortDate', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortDate(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortDateWithYear',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortDateWithYear(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongMonth',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongMonth(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatYear',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatYear(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortWeek',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortWeek(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value, format) {\r\n                return pipDateFormat.formatTime(value, format);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongDateTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongDateTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortDateTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortDateTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatElapsedInterval', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatElapsedInterval(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatElapsedTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatElapsedTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatMillisecondsToSeconds',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatMillisecondsToSeconds(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatDateRange',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value1, value2) {\r\n                return pipDateFormat.formatDateRange(value1, value2);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatDateTimeRange',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value1, value2) {\r\n                return pipDateFormat.formatDateTimeRange(value1, value2);\r\n            };\r\n        }]\r\n    );\r\n\r\n\r\n})();\r\n","/**\r\n * @file Date range control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples int sampler app\r\n * - Optimize. It is way to slow on samples\r\n */\r\n\r\n/*\r\n pip-date-range-type\r\n [ daily,  weekly,  monthly,  yearly ]\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n    var thisModule = angular.module('pipDateRange', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDateRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    pipChanged: '&',\r\n                    pipDateRangeType: '@',\r\n                    pipDateFormat: '@',\r\n                    pipNoLine: '@'\r\n                },\r\n                templateUrl: 'date_range/date_range.html',\r\n                controller: 'pipDateRangeController'\r\n            };\r\n        });\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateRangeController',\r\n        ['$scope', '$element', '$mdMedia', '$rootScope', function ($scope, $element, $mdMedia, $rootScope) { //pipTranslate, \r\n            var currentDate,\r\n                currentYear,\r\n                currentMonth,\r\n                currentDay,\r\n                prevState = {}, currentState = {};\r\n\r\n            currentDate = new Date();\r\n            currentYear = currentDate.getUTCFullYear();\r\n            currentMonth = currentDate.getUTCMonth() + 1;\r\n            currentDay = currentDate.getUTCDate();\r\n            $scope.daysWeek = {\r\n                en: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n                ru: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб']\r\n            };\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    var date, dayOfWeek;\r\n\r\n                    date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                    dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                var date, dayOfWeek;\r\n\r\n                date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onWeekChange = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            // visibility\r\n            $scope.isDay = function () {\r\n                return $scope.pipDateRangeType === 'daily';\r\n            };\r\n\r\n            $scope.isWeek = function () {\r\n                return $scope.pipDateRangeType === 'weekly';\r\n            };\r\n\r\n            $scope.isMonth = function () {\r\n                return $scope.pipDateRangeType === 'daily' ||\r\n                    $scope.pipDateRangeType === 'weekly' ||\r\n                    $scope.pipDateRangeType === 'monthly';\r\n            };\r\n\r\n            $scope.onChange = function () {\r\n                if ($scope.pipChanged) {\r\n                    $scope.pipChanged();\r\n                }\r\n            };\r\n\r\n            function setCurrent() {\r\n                currentState.day = $scope.day;\r\n                currentState.month = $scope.month;\r\n                currentState.year = $scope.year;\r\n                currentState.week = $scope.week;\r\n                currentState.dateRangeType = $scope.pipDateRangeType;\r\n                currentState.model = $scope.model;\r\n            }\r\n\r\n            function fillLists() {\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n                $scope.months = monthList();\r\n                $scope.shortMonths = monthList(true);\r\n                $scope.years = yearList();\r\n\r\n            }\r\n\r\n            function correctWeek() {\r\n                if (!prevState.model || prevState.model && prevState.model.getTime() >= $scope.model.getTime()) {\r\n                    // if shift week -> increase month\r\n                    if ($scope.weeks && $scope.weeks[$scope.week] && $scope.weeks[$scope.week].id <= 0) {\r\n                        if ($scope.month < 12) {\r\n                            $scope.month += 1;\r\n                        } else {\r\n                            $scope.month = 1;\r\n                            $scope.year += 1;\r\n                        }\r\n                        fillLists();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function init() {\r\n                var value;\r\n\r\n                value = $scope.model ? new Date($scope.model) : null;\r\n                $scope.day = value ? value.getUTCDate() : null;\r\n                $scope.month = value ? value.getUTCMonth() + 1 : null;\r\n                $scope.year = value ? value.getUTCFullYear() : null;\r\n                $scope.week = value ? getWeekByDate($scope.day, $scope.month - 1, $scope.year) : null;\r\n\r\n                fillLists();\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            }\r\n\r\n            // Set initial values\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    getValue(newValue);\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            $scope.$watch('pipDateRangeType', function (newValue, oldValue) {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    init();\r\n                }\r\n            });\r\n\r\n            $scope.onYearClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.year = currentYear;\r\n                }\r\n            };\r\n\r\n            $scope.onMonthClick = function () {\r\n                if (!$scope.month) {\r\n                    $scope.month = currentMonth;\r\n                }\r\n            };\r\n\r\n            $scope.onDayClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.day = currentDay;\r\n                }\r\n            };\r\n            // ---------------------------------------------------------------------------------------\r\n\r\n            function getCountDay(month, year) {\r\n                var count = 31;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count, days, i, ln;\r\n\r\n                ln = $rootScope.$language || 'en';\r\n                count = getCountDay(month, year);\r\n                $scope.nameDays = [];\r\n                days = [];\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                    $scope.nameDays.push($scope.daysWeek[ln][new Date(year, month - 1, i).getDay()]);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function getWeekByDate(day, month, year) {\r\n                var date, dayOfWeek, startWeek;\r\n\r\n                date = new Date(Date.UTC(year, month, day));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n                if (dayOfWeek === 1) {\r\n                    startWeek = day;\r\n                } else {\r\n                    startWeek = day + 1 - dayOfWeek;\r\n                }\r\n\r\n                return startWeek;\r\n            }\r\n\r\n            function getWeek(day, countDay, countPrevMonthDay) {\r\n                var endDay, startDay;\r\n\r\n                endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n                startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n                return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n            }\r\n\r\n            function weekList(month, year) { // возвращает список начала надели\r\n                var weeks, countDay, countPrevMonthDay, startWeek;\r\n\r\n                weeks = [];  // в массиве первые дни недели в текущем месяце\r\n                countDay = getCountDay(month, year);\r\n                startWeek = getWeekByDate(1, month - 1, year);\r\n\r\n                countPrevMonthDay = month - 1 ? getCountDay(month - 1, year) : getCountDay(12, year - 1);\r\n                while (startWeek < countDay + 1) {\r\n                    weeks.push({\r\n                        id: startWeek,\r\n                        name: getWeek(startWeek, countDay, countPrevMonthDay)\r\n                    });\r\n                    startWeek = startWeek + 7;\r\n                }\r\n\r\n                return weeks;\r\n            }\r\n\r\n            function monthList() {\r\n                var months, i;\r\n\r\n                months = [];\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: ''//pipTranslate.translate('MONTH_' + i)\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var startYear, i,\r\n                    endYear,\r\n                    years = [];\r\n\r\n                switch ($scope.timeMode) {\r\n                    case 'future':\r\n                        startYear = currentYear;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    case 'past':\r\n                        startYear = currentYear - 100;\r\n                        endYear = currentYear;\r\n                        break;\r\n                    case 'now':\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    default:\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 50;\r\n                        break;\r\n                }\r\n                if ($scope.timeMode === 'future') {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                switch ($scope.pipDateRangeType) {\r\n                    case 'monthly':\r\n                        $scope.day = 1;\r\n                        break;\r\n                    case 'yearly':\r\n                        $scope.month = 1;\r\n                        $scope.day = 1;\r\n                        break;\r\n                    default:\r\n                        if ($scope.days.length !== days.length) {\r\n                            if ($scope.day > days.length) {\r\n                                $scope.day = days.length;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                $scope.days = days;\r\n            }\r\n\r\n            function adjustWeek() {\r\n                var weeks;\r\n\r\n                weeks = weekList($scope.month, $scope.year);\r\n                $scope.week = getWeekByDate($scope.week, $scope.month - 1, $scope.year);\r\n                $scope.weeks = weeks;\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value, day, month, year, week;\r\n\r\n                value = v ? new Date(v) : null;\r\n                // Define values\r\n                day = value ? value.getUTCDate() : null;\r\n                month = value ? value.getUTCMonth() + 1 : null;\r\n                year = value ? value.getUTCFullYear() : null;\r\n                week = value ? getWeekByDate(day, month - 1, year) : null;\r\n                // Exit if nothing to update\r\n                if ($scope.day === day && $scope.month === month && $scope.year === year && $scope.week === week) {\r\n                    return;\r\n                }\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n                $scope.week = week;\r\n\r\n                // Define data sources\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.week, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                } else {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                }\r\n\r\n                prevState = _.cloneDeep(currentState);\r\n                setCurrent();\r\n                $scope.onChange();\r\n            }\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Date formatting service\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n /* global _, angular */\r\n \r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDateFormat', []);\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n\tthisModule.config(function() {\r\n\r\n        // pipTranslateProvider.translations('en', {\r\n        //     // Months - 'MONTH_' + monthIndex\r\n        //     // start at 0 to match JS date format\r\n        //     'MONTH_1': 'January',\r\n        //     'MONTH_2': 'February',\r\n        //     'MONTH_3': 'March',\r\n        //     'MONTH_4': 'April',\r\n        //     'MONTH_5': 'May',\r\n        //     'MONTH_6': 'June',\r\n        //     'MONTH_7': 'July',\r\n        //     'MONTH_8': 'August',\r\n        //     'MONTH_9': 'September',\r\n        //     'MONTH_10': 'October',\r\n        //     'MONTH_11': 'November',\r\n        //     'MONTH_12': 'December',\r\n\r\n        //     'MONTH_LONG_1': 'January',\r\n        //     'MONTH_LONG_2': 'February',\r\n        //     'MONTH_LONG_3': 'March',\r\n        //     'MONTH_LONG_4': 'April',\r\n        //     'MONTH_LONG_5': 'May',\r\n        //     'MONTH_LONG_6': 'June',\r\n        //     'MONTH_LONG_7': 'July',\r\n        //     'MONTH_LONG_8': 'August',\r\n        //     'MONTH_LONG_9': 'September',\r\n        //     'MONTH_LONG_10': 'October',\r\n        //     'MONTH_LONG_11': 'November',\r\n        //     'MONTH_LONG_12': 'December',\r\n\r\n        //     'MONTH_SHORT_1': 'Jan',\r\n        //     'MONTH_SHORT_2': 'Feb',\r\n        //     'MONTH_SHORT_3': 'Mar',\r\n        //     'MONTH_SHORT_4': 'Apr',\r\n        //     'MONTH_SHORT_5': 'May',\r\n        //     'MONTH_SHORT_6': 'Jun',\r\n        //     'MONTH_SHORT_7': 'Jul',\r\n        //     'MONTH_SHORT_8': 'Aug',\r\n        //     'MONTH_SHORT_9': 'Sep',\r\n        //     'MONTH_SHORT_10': 'Oct',\r\n        //     'MONTH_SHORT_11': 'Nov',\r\n        //     'MONTH_SHORT_12': 'Dec',\r\n\r\n        //     // Days of the week - 'DAY_' + dayIndex\r\n        //     // start at 1 to match JS date format\r\n        //     'DAY_1': 'Monday',\r\n        //     'DAY_2': 'Tuesday',\r\n        //     'DAY_3': 'Wednesday',\r\n        //     'DAY_4': 'Thursday',\r\n        //     'DAY_5': 'Friday',\r\n        //     'DAY_6': 'Saturday',\r\n        //     'DAY_7': 'Sunday',\r\n\r\n        //     'ELAPSED_TODAY': 'Today',\r\n        //     'ELAPSED_YESTERDAY': 'Yesterday',\r\n        //     'ELAPSED_YEARS': 'y',\r\n        //     'ELAPSED_MONTHS': 'mth',\r\n        //     'ELAPSED_WEEKS': 'w',\r\n        //     'ELAPSED_DAYS': 'd',\r\n        //     'ELAPSED_HOURS': 'h',\r\n        //     'ELAPSED_MINUTES': 'm',\r\n        //     'ELAPSED_SECONDS': 's',\r\n        //     'ELAPSED_AT': 'at',\r\n        //     'ELAPSED_AGO': 'ago',\r\n        //     'ELAPSED_JUST_NOW': 'Just now',\r\n        //     'ELAPSED_FEW_MIN_AGO': 'Few min ago',\r\n        //     'ELAPSED_MIN_AGO': 'min ago',\r\n        //     'ELAPSED_HOUR_AGO': 'hour ago',\r\n        //     'ELAPSED_HOURS_AGO': 'hours ago',\r\n        //     'ELAPSED_HOURS_AGO_MORE_THAN_FIVE': 'hours ago'\r\n        // });\r\n\r\n        // pipTranslateProvider.translations('ru', {\r\n        //     // Months - 'MONTH_' + monthIndex\r\n        //     // start at 0 to match JS date format\r\n        //     'MONTH_1': 'январь',\r\n        //     'MONTH_2': 'февраль',\r\n        //     'MONTH_3': 'март',\r\n        //     'MONTH_4': 'апрель',\r\n        //     'MONTH_5': 'май',\r\n        //     'MONTH_6': 'июнь',\r\n        //     'MONTH_7': 'июль',\r\n        //     'MONTH_8': 'август',\r\n        //     'MONTH_9': 'сентябрь',\r\n        //     'MONTH_10': 'октябрь',\r\n        //     'MONTH_11': 'ноябрь',\r\n        //     'MONTH_12': 'декабрь',\r\n\r\n        //     'MONTH_LONG_1': 'января',\r\n        //     'MONTH_LONG_2': 'февраля',\r\n        //     'MONTH_LONG_3': 'марта',\r\n        //     'MONTH_LONG_4': 'апреля',\r\n        //     'MONTH_LONG_5': 'мая',\r\n        //     'MONTH_LONG_6': 'июня',\r\n        //     'MONTH_LONG_7': 'июля',\r\n        //     'MONTH_LONG_8': 'августа',\r\n        //     'MONTH_LONG_9': 'сентября',\r\n        //     'MONTH_LONG_10': 'октября',\r\n        //     'MONTH_LONG_11': 'ноября',\r\n        //     'MONTH_LONG_12': 'декабря',\r\n\r\n        //     'MONTH_SHORT_1': 'янв',\r\n        //     'MONTH_SHORT_2': 'фев',\r\n        //     'MONTH_SHORT_3': 'мар',\r\n        //     'MONTH_SHORT_4': 'апр',\r\n        //     'MONTH_SHORT_5': 'май',\r\n        //     'MONTH_SHORT_6': 'июн',\r\n        //     'MONTH_SHORT_7': 'июл',\r\n        //     'MONTH_SHORT_8': 'авг',\r\n        //     'MONTH_SHORT_9': 'сен',\r\n        //     'MONTH_SHORT_10': 'окт',\r\n        //     'MONTH_SHORT_11': 'ноя',\r\n        //     'MONTH_SHORT_12': 'дек',\r\n\r\n        //     // Days of the week - 'DAY_' + dayIndex\r\n        //     // start at 1 to match JS date format\r\n        //     'DAY_1': 'понедельник',\r\n        //     'DAY_2': 'вторник',\r\n        //     'DAY_3': 'среда',\r\n        //     'DAY_4': 'четверг',\r\n        //     'DAY_5': 'пятница',\r\n        //     'DAY_6': 'суббота',\r\n        //     'DAY_7': 'воскресенье',\r\n\r\n        //     'ELAPSED_TODAY': 'Сегодня',\r\n        //     'ELAPSED_YESTERDAY': 'Вчера',\r\n        //     'ELAPSED_YEARS': 'г',\r\n        //     'ELAPSED_MONTHS': 'мц',\r\n        //     'ELAPSED_WEEKS': 'н',\r\n        //     'ELAPSED_DAYS': 'д',\r\n        //     'ELAPSED_HOURS': 'ч',\r\n        //     'ELAPSED_MINUTES': 'м',\r\n        //     'ELAPSED_SECONDS': 'с',\r\n        //     'ELAPSED_AT': 'в',\r\n        //     'ELAPSED_AGO': 'тн',\r\n        //     'ELAPSED_JUST_NOW': 'Только что',\r\n        //     'ELAPSED_FEW_MIN_AGO': 'Несколько мин тн',\r\n        //     'ELAPSED_MIN_AGO': 'мин тн',\r\n        //     'ELAPSED_HOUR_AGO': 'час тн',\r\n        //     'ELAPSED_HOURS_AGO': 'часа тн',\r\n        //     'ELAPSED_HOURS_AGO_MORE_THAN_FIVE': 'часов тн'\r\n        // });\r\n\t\t\r\n\t});\r\n\r\n    thisModule.factory('pipDateFormat',\r\n        ['pipDates', '$rootScope', function (pipDates, $rootScope) { //pipTranslate\r\n\r\n            return {\r\n                formatDate: formatDate,\r\n                formatLongDate: formatLongDate,\r\n                formatShortDate: formatShortDate,\r\n                formatShortDateWithYear: formatShortDateWithYear,\r\n                formatLongDateWithYear: formatLongDateWithYear,\r\n\r\n                formatLongMonth: formatLongMonth,\r\n                formatMonth: formatMonth,\r\n                formatYear: formatYear,\r\n                formatShortWeek: formatShortWeek,\r\n                formatShortDayAndMonth: formatShortDayAndMonth,\r\n                formatLongDayAndMonth: formatLongDayAndMonth,\r\n\r\n                formatDateRange: formatDateRange,\r\n                formatDateTimeRange: formatDateTimeRange,\r\n\r\n                formatTime: formatTime,\r\n                formatLongTime: formatLongTime,\r\n                formatShortTime: formatShortTime, \r\n\r\n                formatLongDateTime: formatLongDateTime,\r\n                formatShortDateTime: formatShortDateTime,\r\n\r\n                formatElapsedTime: formatElapsedTime,\r\n                formatElapsedInterval: formatElapsedInterval,\r\n\r\n                formatMillisecondsToSeconds: formatMillisecondsToSeconds\r\n            };\r\n\r\n\r\n            function twoDigits(value) {\r\n                return value < 10 ? '0' + value : value; \r\n            };\r\n\r\n            function formatDate(value, format, str) {\r\n                if (value == null) return '';\r\n\r\n                var\r\n                    strict = str || false,\r\n                    value = _.isDate(value) ? value : new Date(value),\r\n                    thisYear = new Date().getUTCFullYear(),\r\n                    year = value.getUTCFullYear(),\r\n                    month = value.getUTCMonth(),\r\n                    // longMonthName = pipTranslate.translate('MONTH_LONG_' + (month + 1)),\r\n                    // shortMonthName = pipTranslate.translate('MONTH_SHORT_' + (month + 1)),\r\n                    // monthName = pipTranslate.translate('MONTH_' + (month + 1)),\r\n                    day = value.getUTCDate(),\r\n                    startWeek = pipDates.toStartWeek(value),\r\n                    endWeek = pipDates.toEndWeek(value, -1);\r\n\r\n                if (strict == false && format == 'd MMMM yyyy' && thisYear === year) {\r\n                        format = 'MMMM d';\r\n                }\r\n                if (strict == false && format == 'd MMM yyyy' && thisYear === year) {\r\n                        format = 'MMM d';\r\n                }\r\n                if ((format == 'MMM d') && $rootScope.$language == 'ru') {\r\n                        format = 'd MMM';\r\n                }\r\n                if ((format == 'MMMM d') && $rootScope.$language == 'ru') {\r\n                    format = 'd MMMM';\r\n                }\r\n\r\n                if (format == 'd MMMM yyyy')\r\n                    return '' + day + ' ' + longMonthName + ' ' + year\r\n                else if (format == 'MMMM d, yyyy')\r\n                    return '' + monthName + ' ' + day + ', ' + year\r\n                if (format == 'd MMM yyyy')\r\n                    return '' + day + ' ' + shortMonthName + ' ' + year\r\n                else if (format == 'MMM d, yyyy')\r\n                    return '' + shortMonthName + ' ' + day + ', ' + year\r\n                else if (format == 'd MMMM')\r\n                    return '' + day + ' ' + longMonthName\r\n                else if (format == 'd MMM')\r\n                    return '' + day + ' ' + shortMonthName\r\n                else if (format == 'MMM d')\r\n                    return '' + shortMonthName + ' ' + day;\r\n                else if (format == 'MMMM d')\r\n                    return '' + longMonthName + ' ' + day;\r\n                else if (format == 'yyyy/M/d')\r\n                    return '' + year + '/' + month + '/' + day;\r\n                else if (format == 'yyy-M-d')\r\n                    return '' + year + '-' + month + '-' + day;\r\n                else if (format == 'MMMM')\r\n                    return '' + longMonthName + ' ' + year;\r\n                else if (format == 'yyyy')\r\n                    return '' + year;\r\n                else if (format == 'ww')\r\n                    return '' + startWeek.getUTCDate() + ' - ' + endWeek.getUTCDate() + ' ' + monthName + ' ' + year;\r\n\r\n                return '' + day + ' ' + monthName + ' ' + year\r\n            }\r\n\r\n            function formatLongDate(value) {\r\n                return formatDate(value, 'd MMMM yyyy');\r\n            }\r\n\r\n            function formatShortDateWithYear(value) {\r\n                return formatDate(value, 'd MMM yyyy', true);\r\n            }\r\n\r\n            function formatLongDateWithYear(value) {\r\n                return formatDate(value, 'd MMMM yyyy', true);\r\n            }\r\n\r\n            function formatShortDate(value) {\r\n                return formatDate(value, 'd MMM yyyy');\r\n            }\r\n\r\n            function formatLongMonth(value) {\r\n                return formatDate(value, 'MMMM');\r\n            }\r\n\r\n            function formatYear(value) {\r\n                return formatDate(value, 'yyyy');\r\n            }\r\n\r\n            function formatShortWeek(value) {\r\n                return formatDate(value, 'ww');\r\n            }\r\n\r\n            function formatShortDayAndMonth(value) {\r\n                return formatDate(value, 'd MMM');\r\n            }\r\n\r\n            function formatLongDayAndMonth(value) {\r\n                if ($rootScope.$language == 'ru')\r\n                    return formatDate(value, 'd MMMM');\r\n                else\r\n                    return formatDate(value, 'MMMM d');\r\n            }\r\n\r\n            function formatDateRange(value1, value2) {\r\n                value1 =  value1 ? (_.isDate(value1) ? value1 : new Date(value1)) : null;\r\n                value2 =  value2 ? (_.isDate(value2) ? value2 : new Date(value2)) : null;\r\n\r\n                if (value1 == null) {\r\n                    if ($rootScope.$language == 'ru')\r\n                        return formatDate(value2, 'd MMM yyyy', true);\r\n                    else\r\n                        return formatDate(value2, 'MMM d, yyyy', true);\r\n                }\r\n\r\n                if (value2 == null || value1 == value2) {\r\n                    if ($rootScope.$language == 'ru')\r\n                        return formatDate(value1, 'd MMM yyyy', true);\r\n                    else\r\n                        return formatDate(value1, 'MMM d, yyyy', true);\r\n                }\r\n\r\n                if (value1.getUTCFullYear() !== value2.getUTCFullYear()) {\r\n                    if ($rootScope.$language == 'ru')\r\n                        return formatDate(value1, 'd MMM yyyy', true) + '-' + formatDate(value2, 'd MMM yyyy', true);\r\n                    else\r\n                        return formatDate(value1, 'MMM d, yyyy', true) + '-' + formatDate(value2, 'MMM d, yyyy', true);\r\n                } else {\r\n                        return formatDate(value1, 'd MMM') + ' - ' + formatDate(value2, 'd MMM')\r\n                            + ((new Date().getUTCFullYear() !== value1.getUTCFullYear()) ? ' ' + formatDate(value1, 'yyyy') : '');\r\n                }\r\n            }\r\n\r\n            function formatDateTimeRange(value1, value2) {\r\n                value1 =  value1 ? (_.isDate(value1) ? value1 : new Date(value1)) : null;\r\n                value2 =  value2 ? (_.isDate(value2) ? value2 : new Date(value2)) : null;\r\n                if (value1 == null && value2 == null) return '';\r\n\r\n                if (value1 == null) {\r\n                    return formatShortDateTime(value2);\r\n                }\r\n\r\n                if (value2 == null || value1 == value2) {\r\n                    return formatShortDateTime(value1);\r\n                }\r\n\r\n                var dayStart, monthStart, yearStart,\r\n                    dayEnd, monthEnd, yearEnd;\r\n\r\n                dayStart = value1.getUTCDate();\r\n                monthStart = value1.getUTCMonth();\r\n                yearStart = value1.getUTCFullYear();\r\n                dayEnd = value2.getUTCDate();\r\n                monthEnd = value2.getUTCMonth();\r\n                yearEnd = value2.getUTCFullYear();\r\n\r\n\r\n                if (yearStart !== yearEnd) {\r\n                    return formatDate(value1, 'd MMM') + ', ' + yearStart + ' ' + formatTime(value1, 'hh:mm') +\r\n                        ' - ' + formatDate(value2, 'd MMM') + ', ' + yearEnd + ' ' + formatTime(value2, 'hh:mm');\r\n                } else {\r\n                    if (monthStart != monthEnd && !dayStart != dayEnd)\r\n                        return formatDate(value1, 'd MMM') + ', ' + formatTime(value1, 'hh:mm') +\r\n                            ' - ' + formatDate(value2, 'd MMM') + ', ' + formatTime(value2, 'hh:mm');\r\n                    else\r\n                        return formatTime(value1, 'hh:mm') + ' - ' + formatTime(value2, 'hh:mm')\r\n                }\r\n            }\r\n\r\n            function formatTime(value, format) {\r\n                if (value == null) return '';\r\n\r\n                value = _.isDate(value) ? value : new Date(value);\r\n                \r\n                var \r\n                    hours = value.getHours(),\r\n                    mins = value.getMinutes(),\r\n                    secs = value.getSeconds(),\r\n                    ampm = '';\r\n\r\n                // if (pipTranslate && pipTranslate.use() == 'en') {\r\n                //     ampm = hours >= 12 ? ' PM' : ' AM';\r\n                //     hours = hours % 12;\r\n                //     if (hours == 0) hours = 12;\r\n                // }\r\n\r\n                if (format == 'hh:mm:ss')\r\n                    return '' + twoDigits(hours) + ':' + twoDigits(mins) + ':' + twoDigits(secs) + ampm;\r\n                else if (format == 'hh:mm')\r\n                    return '' + twoDigits(hours) + ':' + twoDigits(mins) + ampm;\r\n\r\n                return '' + twoDigits(hours) + ':' + twoDigits(mins) + ':' + twoDigits(secs) + ampm;\r\n            }\r\n\r\n            function formatMonth(value, short) {\r\n                if (value == null) return '';\r\n                return 'MONTH_SHORT_' + value //short ? pipTranslate.translate('MONTH_SHORT_' + value) : pipTranslate.translate('MONTH_' + value);\r\n            }\r\n\r\n            function formatLongTime(value) {\r\n                return formatTime(value, 'hh:mm:ss');\r\n            }\r\n\r\n            function formatShortTime(value) {\r\n                return formatTime(value, 'hh:mm');\r\n            }\r\n\r\n            function formatLongDateTime(value) {\r\n                if (value == null) return '';\r\n                value = _.isDate(value) ? value : new Date(value);\r\n                return formatLongDate(value) + ' ' + formatLongTime(value);\r\n            }\r\n\r\n            function formatShortDateTime(value) {\r\n                if (value == null) return '';\r\n                value = _.isDate(value) ? value : new Date(value);\r\n                return formatShortDate(value) + ' ' + formatShortTime(value);\r\n            }\r\n\r\n            function formatElapsedTime(value, format) {\r\n                if (value == null) return '';\r\n\r\n                value = _.isDate(value) ? value : new Date(value);\r\n\r\n                var \r\n                    current = new Date(),\r\n                    diff = Math.floor(((current.getTime() + current.getTimezoneOffset()) - (value.getTime() + value.getTimezoneOffset())) / 1000);\r\n\r\n                if (diff < 1) return 'ELAPSED_JUST_NOW' //pipTranslate.translate('ELAPSED_JUST_NOW');\r\n\r\n                var years, months, weeks, days, hours, mins, secs;\r\n\r\n                secs = diff % 60;\r\n\r\n                diff = Math.floor(diff / 60);\r\n                mins = diff % 60;\r\n\r\n                diff = Math.floor(diff / 60);\r\n                hours = diff % 24;\r\n\r\n                diff = diff / 24;\r\n                years = Math.floor(diff / 365),\r\n\r\n                diff = diff - years * 365;\r\n                months = Math.floor(diff / 30),\r\n                days = Math.floor(diff - months * 30);\r\n\r\n                if (days % 7 == 0) {\r\n                    weeks = Math.floor(days / 7);\r\n                    days = 0;\r\n                } else {\r\n                    weeks = 0;\r\n                }\r\n\r\n                // if (format == 'interval') {\r\n                //     var result = '';\r\n\r\n                //     if (years) {\r\n                //         result += ' ' + years + pipTranslate.translate('ELAPSED_YEARS');\r\n                //         weeks = days = hours = mins = secs = null;\r\n                //     }\r\n                //     if (months) {\r\n                //         result += ' ' + months + pipTranslate.translate('ELAPSED_MONTHS');\r\n                //         days = hours = mins = secs = null;\r\n                //     }\r\n                //     if (weeks) {\r\n                //         result += ' ' + weeks + pipTranslate.translate('ELAPSED_WEEKS');\r\n                //         hours = mins = secs = null;\r\n                //     }\r\n                //     if (days) {\r\n                //         result += ' ' + days + pipTranslate.translate('ELAPSED_DAYS');\r\n                //         mins = secs = null;\r\n                //     }\r\n                //     if (hours) {\r\n                //         result += ' ' + hours + pipTranslate.translate('ELAPSED_HOURS');\r\n                //         secs = null;\r\n                //     }\r\n                //     if (mins) result += ' ' + mins + pipTranslate.translate('ELAPSED_MINUTES');\r\n                //     if (secs) result += ' ' + secs + pipTranslate.translate('ELAPSED_SECONDS');\r\n\r\n                //     return result != '' ? result + ' ' + pipTranslate.translate('ELAPSED_AGO') \r\n                //         : pipTranslate.translate('ELAPSED_JUST_NOW');\r\n                // }\r\n\r\n                // Default time format = 'default'\r\n\r\n                // if (years > 0) {\r\n                //     return formatDate(value, 'd MMM yyyy');\r\n                // }\r\n\r\n                // if (months > 0 || weeks > 0 || days > 1) {\r\n                //     return formatDate(value, 'MMM d') \r\n                //         + ', ' + formatTime(value, 'hh:mm');\r\n                // }\r\n\r\n                // if (days == 1) {\r\n                //     return pipTranslate.translate('ELAPSED_YESTERDAY') \r\n                //         + ', ' + formatTime(value, 'hh:mm');\r\n                // }\r\n\r\n                // if (hours > 10) {\r\n                //     return pipTranslate.translate('ELAPSED_TODAY') \r\n                //         + ', ' + formatTime(value, 'hh:mm');\r\n                // }\r\n\r\n                // if (hours > 0) {\r\n                //     return '' + hours + ' ' + (hours < 2 ? pipTranslate.translate('ELAPSED_HOUR_AGO') :\r\n                //         hours < 5 ? pipTranslate.translate('ELAPSED_HOURS_AGO') : pipTranslate.translate('ELAPSED_HOURS_AGO_MORE_THAN_FIVE'));\r\n                // }\r\n\r\n                // if (mins > 10) {\r\n                //     return '' + mins + ' ' + pipTranslate.translate('ELAPSED_MIN_AGO');\r\n                // }\r\n\r\n                // if (mins > 0) {\r\n                //     return pipTranslate.translate('ELAPSED_FEW_MIN_AGO');\r\n                // }\r\n\r\n                // return pipTranslate.translate('ELAPSED_JUST_NOW');\r\n            }\r\n\r\n            function formatElapsedInterval(value) {\r\n                return formatElapsedTime(value, 'interval');  \r\n            }\r\n\r\n            function formatMillisecondsToSeconds(value) {\r\n                return Math.floor(value / 1000)\r\n            }\r\n\r\n        }]\r\n    );\r\n    \r\n})();\r\n","\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRangeEdit', ['pipDatesUtils']);\r\n\r\n    thisModule.directive('pipTimeRangeEdit',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipChanged: '&',\r\n                    pipEndDate: '=',\r\n                    pipStartLabel: '@',\r\n                    pipEndLabel: '@',\r\n                    disabled: '&ngDisabled',\r\n                    pipSize: '='\r\n                },\r\n                templateUrl: 'time_range_edit/time_range_edit.html',\r\n                controller: 'pipTimeRangeEditController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipTimeRangeEditController',\r\n        ['$scope', '$element', '$attrs', 'pipDates', 'pipTranslate', function ($scope, $element, $attrs, pipDates, pipTranslate) {\r\n\r\n            function getDateJSON(value) {\r\n                return value ? new Date(value) : null;\r\n            }\r\n\r\n            function setDuration() {\r\n                var start, end;\r\n\r\n                if (!$scope.data.startDate || !$scope.data.endDate) {\r\n                    return null;\r\n                }\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                return end - start;\r\n            }\r\n\r\n            function validateStartDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано начальное время - задаем его\r\n                if (!$scope.data.startTime) {\r\n                    if (!$scope.data.endTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDates.toStartDay(date);\r\n                        $scope.data.startTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.startTime = $scope.data.endTime === 0 ? 0 : $scope.data.endTime - 30;\r\n                    }\r\n                }\r\n\r\n                // если конечная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if ($scope.data.duration) {\r\n                    end = new Date(start.getTime() + $scope.data.duration);\r\n                    $scope.data.endDate = pipDates.toStartDay(end);\r\n                    end = end.getTime() - $scope.data.endDate.getTime();\r\n                    $scope.data.endTime = Math.floor(end / (30 * 60 * 1000)) * 30;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        $scope.data.endDate = pipDates.toStartDay(new Date(start.getTime() + 30 * 60000));\r\n                        $scope.data.endTime = ($scope.data.startTime + 30) % 1440;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function validateEndDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано конечное время - задаем его\r\n                if (!$scope.data.endTime) {\r\n                    if (!$scope.data.startTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDates.toStartDay(date);\r\n                        $scope.data.endTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.endTime = $scope.data.startTime === 1410 ? 1410 : $scope.data.startTime + 30;\r\n                    }\r\n                }\r\n\r\n                // если yачальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                if (start >= end) {\r\n                    // Если начальная дата больше, то двигаем начальную дату\r\n                    $scope.data.startDate = pipDates.toStartDay(new Date(end.getTime() - 30 * 60000));\r\n                    $scope.data.startTime = $scope.data.endTime % 1440 === 0 ? 1410 : $scope.data.endTime - 30;\r\n                }\r\n\r\n                $scope.data.duration = setDuration();\r\n            }\r\n\r\n            function setDate() {\r\n                var time;\r\n\r\n                $scope.data.bind = false;\r\n\r\n                if ($scope.data.startDate) {\r\n                    time = $scope.data.startTime ? $scope.data.startTime * 60 * 1000 : 0;\r\n                    $scope.pipStartDate = new Date($scope.data.startDate.getTime() + time);\r\n                }\r\n\r\n                if ($scope.data.endDate) {\r\n                    time = $scope.data.endTime ? $scope.data.endTime * 60 * 1000 : 0;\r\n                    $scope.pipEndDate = new Date($scope.data.endDate.getTime() + time);\r\n                }\r\n\r\n                $scope.data.bind = true;\r\n            }\r\n\r\n            function defineDate() {\r\n                var start, end;\r\n\r\n                if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                    start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate : null;\r\n\r\n                    if (!start) {\r\n                        start = getDateJSON($scope.pipStartDate);\r\n                    }\r\n\r\n                    $scope.data.startDate = pipDates.toStartDay(start);\r\n                    $scope.data.startTime = (new Date(start) - $scope.data.startDate) / (60 * 1000);\r\n                }\r\n\r\n                if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                    end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate : null;\r\n\r\n                    if (!start) {\r\n                        end = getDateJSON($scope.pipEndDate);\r\n                    }\r\n\r\n                    $scope.data.endDate = pipDates.toStartDay(end);\r\n                    $scope.data.endTime = (new Date(end) - $scope.data.endDate) / (60 * 1000);\r\n                }\r\n\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n            }\r\n\r\n            function getTimeInterval() {\r\n                var result, i, j, minutes;\r\n\r\n                result = [];\r\n                for (i = 0; i < 24; i++) {\r\n                    for (j = 0; j < 2; j++) {\r\n                        minutes = j * 30;\r\n                        result.push({\r\n                            id: i * 60 + minutes,\r\n                            time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function initDate() {\r\n                $scope.data.startDate = null;\r\n                $scope.data.startTime = null;\r\n                $scope.data.endDate = null;\r\n                $scope.data.endTime = null;\r\n                $scope.data.duration = null;\r\n            }\r\n\r\n            // initialize data\r\n            $scope.intervalTimeCollection = getTimeInterval();\r\n            $scope.data = {};\r\n            $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n                : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n            $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n                : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            initDate();\r\n            defineDate();\r\n\r\n            // process function\r\n            $scope.onChangeStartDate = function () {\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndDate = function () {\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeStartTime = function () {\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startDate = pipDates.toStartDay(new Date());\r\n                }\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndTime = function () {\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endDate = pipDates.toStartDay(new Date());\r\n                }\r\n\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.isDisabled = function () {\r\n                if ($scope.disabled) {\r\n                    return $scope.disabled();\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            $scope.$watchGroup([$scope.pipStartDate, $scope.pipEndDate], function () {\r\n                if ($scope.data.bind) {\r\n                    initDate();\r\n                    defineDate();\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Time control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRange', []);\r\n\r\n    thisModule.directive('pipTimeRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipEndDate: '='\r\n                },\r\n                templateUrl: 'time_range/time_range.html',\r\n                link: function ($scope, $element, $attrs) {\r\n\r\n                    function getDateJSON(value) {\r\n                        return value ? new Date(value) : null;\r\n                    }\r\n\r\n                    function defineStartDate() {\r\n                        if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                            $scope.data.start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate\r\n                                : getDateJSON($scope.pipStartDate);\r\n                        }\r\n                    }\r\n\r\n                    function defineEndDate() {\r\n                        if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                            $scope.data.end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate\r\n                                : getDateJSON($scope.pipEndDate);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    $scope.data = {};\r\n                    $scope.data.start = null;\r\n                    $scope.data.end = null;\r\n                    defineStartDate();\r\n                    defineEndDate();\r\n\r\n                    if (toBoolean($attrs.pipRebind)) {\r\n                        $scope.$watch('pipStartDate',\r\n                            function () {\r\n                                $scope.data.start = null;\r\n                                defineStartDate();\r\n                            }\r\n                        );\r\n                        $scope.$watch('pipEndDate',\r\n                            function () {\r\n                                $scope.data.end = null;\r\n                                defineEndDate();\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-time-range');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Date utilities\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global _, angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDatesUtils', []);\r\n\r\n    // Todo: Use moment functions instead\r\n    thisModule.factory('pipDates', function () {\r\n        var dates = {};\r\n\r\n        dates.addHours = function (date, hours) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            var time = date.getTime() + hours * 3600000;\r\n            return new Date(time);\r\n        };\r\n\r\n        dates.toStartDay = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n        };\r\n\r\n        dates.toEndDay = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            offset = offset != null ? offset : 0;\r\n            var start = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            return new Date(start.getTime() + 24 * 3600000 + offset);\r\n        };\r\n\r\n        dates.toStartWeek = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            return new Date(date.getTime() - (dayOfWeek - 1) * 24 * 3600000);  // dayOfWeek = 0 для воскресенья\r\n        };\r\n\r\n        dates.toEndWeek = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            offset = offset != null ? offset : 0;\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            return new Date(date.getTime() + (8 - dayOfWeek) * 24 * 3600000 + offset);\r\n        };\r\n\r\n        dates.toStartMonth = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            return new Date(date.getFullYear(), date.getMonth(), 1);\r\n        };\r\n\r\n        dates.toEndMonth = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n\r\n            var\r\n                month = date.getMonth() + 1,\r\n                year = date.getFullYear();\r\n\r\n            if (month > 11) {\r\n                year++;\r\n                month = 0;\r\n            }\r\n\r\n            date = new Date(year, month, 1);\r\n\r\n            if (offset != null) {\r\n                date = new Date(date.getTime() + offset);\r\n            }\r\n\r\n            return date;\r\n        };\r\n\r\n        dates.toStartYear = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            return new Date(date.getFullYear(), 0, 1);\r\n        };\r\n\r\n        dates.toEndYear = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            date = new Date(date.getFullYear() + 1, 0, 1);\r\n\r\n            if (offset != null) {\r\n                date = new Date(date.getTime() + offset);\r\n            }\r\n\r\n            return date;\r\n        };\r\n\r\n        /** UTC functions  - **/\r\n        dates.toUTCDate = function (year, month, day) {\r\n            return new Date(Date.UTC(year, month, day));\r\n        };\r\n\r\n        dates.toUTCDate = function (date) {\r\n            return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        };\r\n\r\n        dates.fromUTCDate = function (date) {\r\n            if (date == null) date = new Date();\r\n            return new Date(\r\n                date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\r\n        };\r\n\r\n        dates.toUTCStartWeek = function (date) {\r\n            if(!_.isDate(date)) {\r\n                date = new Date(date);\r\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n            }\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            date = dayOfWeek != 1 ? new Date(date.getTime() - (dayOfWeek - 1) * 24 * 3600000) : date;\r\n            return  new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        };\r\n\r\n        dates.toUTCEndWeek = function (date, offset) {\r\n            if(!_.isDate(date)) {\r\n                date = new Date(date);\r\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n            }\r\n            offset = offset != null ? offset : 0;\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            date = new Date(date.getTime() + (8 - dayOfWeek) * 24 * 3600000 + offset);\r\n            return  new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        };\r\n\r\n        return dates;\r\n    });\r\n})();\r\n"]}
=======
{"version":3,"sources":["pip-webui-dates-html.js","dates.js","date/date.js","date_range/date_range.js","filters/datetime.js","formatting/date_format.js","time_range/time_range.js","time_range_edit/time_range_edit.js","utilites/dates_utils.js"],"names":[],"mappingsjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxtgpfile":"pip-webui-dates.js","sourcesContent":["(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date/date.html',\n    '<!--\\n' +\n    '@file Date control content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<div class=\"pip-date layout-row flex\" tabindex=\"-1\">\\n' +\n    '\t<md-input-container class=\"tm0 flex\">\\n' +\n    '\t\t<md-select class=\"pip-date-day tm0 flex\" ng-disabled=\"disableControls\"\\n' +\n    '\t\t\t\t   ng-model=\"day\" placeholder=\"{{dayLabel}}\" ng-change=\"onDayChanged()\">\\n' +\n    '\t\t\t<md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{:: opt }}</md-option>\\n' +\n    '\t\t</md-select>\\n' +\n    '\t</md-input-container>\\n' +\n    '\t<div class=\"w16 flex-fixed\"></div>\\n' +\n    '\t<md-input-container class=\"tm0 flex\">\\n' +\n    '\t\t<md-select class=\"pip-date-month tm0 flex\" ng-disabled=\"disableControls\"\\n' +\n    '\t\t\t\t   ng-model=\"month\" placeholder=\"{{monthLabel}}\" ng-change=\"onMonthChanged()\">\\n' +\n    '\t\t\t<md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{:: opt.name }}</md-option>\\n' +\n    '\t\t</md-select>\\n' +\n    '\t</md-input-container>\\n' +\n    '\t<div class=\"w16 flex-fixed\"></div>\\n' +\n    '\t<md-input-container class=\"tm0 flex\">\\n' +\n    '\t\t<md-select class=\"pip-date-year tm0 flex\" ng-disabled=\"disableControls\"\\n' +\n    '\t\t\t\t   ng-model=\"year\" placeholder=\"{{yearLabel}}\" ng-change=\"onYearChanged()\">\\n' +\n    '\t\t\t<md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{:: opt }}</md-option>\\n' +\n    '\t\t</md-select>\\n' +\n    '\t</md-input-container>\\n' +\n    '</div>\\n' +\n    '\t\t\t\t\t');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_range/date_range.html',\n    '<!--\\n' +\n    '@file Date range control content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\">\\n' +\n    '    <md-input-container ng-show=\"isDay()\" class=\"tm0 pip-day flex\"\\n' +\n    '            ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-day w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onDayClick()\"\\n' +\n    '                   ng-model=\"day\"\\n' +\n    '                   ng-change=\"onDayChanged()\"\\n' +\n    '                   placeholder=\"{{dayLabel}}\"\\n' +\n    '                   aria-label=\"DAY\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt \">\\n' +\n    '               {{nameDays[$index]}} {{ opt }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <md-input-container ng-show=\"isWeek()\" class=\"tm0 flex\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-week w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   ng-model=\"week\"\\n' +\n    '                   ng-change=\"onWeekChange()\"\\n' +\n    '                   placeholder=\"{{weekLabel}}\"\\n' +\n    '                   aria-label=\"WEEK\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in weeks track by opt.id\">\\n' +\n    '                {{ opt.name }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container >\\n' +\n    '    <div class=\"flex-fixed\"\\n' +\n    '         ng-class=\"{\\'w16\\': $mdMedia(\\'gt-xs\\'), \\'w8\\':  $mdMedia(\\'xs\\')}\"\\n' +\n    '         ng-show=\"isDay() || isWeek()\">\\n' +\n    '    </div>\\n' +\n    '    <md-input-container ng-show=\"isMonth() && !monthFormatShort \" class=\"tm0 flex min-w72\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-month w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onMonthClick()\"\\n' +\n    '                   ng-model=\"month\"\\n' +\n    '                   ng-change=\"onMonthChanged()\"\\n' +\n    '                   placeholder=\"{{monthLabel}}\"\\n' +\n    '                   aria-label=\"MONTH\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">\\n' +\n    '                {{ opt.name }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <md-input-container ng-show=\"isMonth() && monthFormatShort\" class=\"flex tm0\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-month w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onMonthClick()\"\\n' +\n    '                   ng-model=\"month\"\\n' +\n    '                   ng-change=\"onMonthChanged()\"\\n' +\n    '                   placeholder=\"{{monthLabel}}\"\\n' +\n    '                   aria-label=\"MONTH\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt.id\" ng-repeat=\"opt in shortMonths track by opt.id\">\\n' +\n    '                {{ opt.name }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '    <div class=\"flex-fixed\"\\n' +\n    '         ng-class=\"{\\'w16\\': $mdMedia(\\'gt-xs\\'), \\'w8\\':  $mdMedia(\\'xs\\')}\"\\n' +\n    '         ng-show=\"isMonth()\">\\n' +\n    '    </div>\\n' +\n    '    <md-input-container class=\"tm0 flex\"\\n' +\n    '                        ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\">\\n' +\n    '        <md-select class=\"select-year w-stretch\"\\n' +\n    '                   ng-class=\"{\\'pip-no-line\\' : pipNoLine}\"\\n' +\n    '                   ng-disable=\"{{disableControls}}\"\\n' +\n    '                   md-on-open=\"onYearClick()\"\\n' +\n    '                   ng-model=\"year\"\\n' +\n    '                   ng-change=\"onYearChanged()\"\\n' +\n    '                   placeholder=\"{{yearLabel}}\"\\n' +\n    '                   aria-label=\"YEAR\">\\n' +\n    '\\n' +\n    '            <md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">\\n' +\n    '                {{ opt }}\\n' +\n    '            </md-option>\\n' +\n    '        </md-select>\\n' +\n    '    </md-input-container>\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range/time_range.html',\n    '<p>\\n' +\n    '    <span ng-if=\"data.start != null\">{{data.start | formatShortDateTime}}</span>\\n' +\n    '    <span  class=\"rm4 lm4\" ng-if=\"data.start && data.end\"> - </span>\\n' +\n    '    <span ng-if=\"data.end != null\">{{data.end | formatShortDateTime}}</span>\\n' +\n    '</p>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_edit/time_range_edit.html',\n    '<!--\\n' +\n    '@file Time edit control content\\n' +\n    '@copyright Digital Living Software Corp. 2014-2016\\n' +\n    '-->\\n' +\n    '\\n' +\n    '<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\">\\n' +\n    '    <div flex=\"47\" class=\"w-stretch rm24-flex0\">\\n' +\n    '        <p class=\"text-caption text-grey tm0\">{{startLabel}}</p>\\n' +\n    '\\n' +\n    '        <div class=\"layout-row layout-align-space-between-center\">\\n' +\n    '            <div class=\"rm16 pip-datepicker-container\" flex=\"49\">\\n' +\n    '                <md-datepicker ng-model=\"data.startDate\"\\n' +\n    '                               xmd-placeholder=\"{{startLabel}}\"\\n' +\n    '                               ng-change=\"onChangeStartDate()\"\\n' +\n    '                               ng-disabled=\"isDisabled()\"\\n' +\n    '                               aria-label=\"START-DATE\">\\n' +\n    '                </md-datepicker>\\n' +\n    '            </div>\\n' +\n    '            <div flex>\\n' +\n    '                <md-input-container class=\"w-stretch tm0\">\\n' +\n    '                    <md-select aria-label=\"START-TIME\" class=\"tm0 bm0\" ng-model=\"data.startTime\" ng-disabled=\"isDisabled()\"\\n' +\n    '                               ng-change=\"onChangeStartTime()\">\\n' +\n    '                        <md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}\\n' +\n    '                        </md-option>\\n' +\n    '                    </md-select>\\n' +\n    '                </md-input-container>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div flex=\"47\" class=\"w-stretch\">\\n' +\n    '        <p class=\"text-caption text-grey tm0\">{{endLabel}}</p>\\n' +\n    '\\n' +\n    '        <div class=\"layout-row layout-align-space-between-center\">\\n' +\n    '            <div class=\"rm16 pip-datepicker-container flex-49\">\\n' +\n    '                <md-datepicker ng-model=\"data.endDate\"\\n' +\n    '                               xmd-placeholder=\"{{endLabel}}\"\\n' +\n    '                               ng-disabled=\"isDisabled()\"\\n' +\n    '                               ng-change=\"onChangeEndDate()\"\\n' +\n    '                               aria-label=\"END-DATE\">\\n' +\n    '                </md-datepicker>\\n' +\n    '            </div>\\n' +\n    '            <div flex>\\n' +\n    '                <md-input-container class=\"w-stretch tm0\">\\n' +\n    '                    <md-select aria-label=\"END-TIME\" class=\"tm0 bm0\" ng-model=\"data.endTime\" ng-change=\"onChangeEndTime()\"\\n' +\n    '                               ng-disabled=\"isDisabled()\">\\n' +\n    '                        <md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{\\n' +\n    '                            opt.time }}\\n' +\n    '                        </md-option>\\n' +\n    '                    </md-select>\\n' +\n    '                </md-input-container>\\n' +\n    '            </div>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n})();\n","/**\r\n * @file Registration of Dates and times WebUI controls\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global angular */\r\n\r\n(function (angular) {\r\n    'use strict';\r\n\r\n    angular.module('pipDateTimes', [\r\n        'pipDate',\r\n        'pipDateRange',\r\n        'pipTimeRangeEdit',\r\n        'pipTimeRange',\r\n        'pipDatesUtils',\r\n        'pipDateFormat',\r\n        'pipDateTimeFilters'\r\n    ]);\r\n\r\n    angular.module('pipDateTimesControls', ['pipDateTimes']);\r\n\r\n})(window.angular);\r\n\r\n","/**\r\n * @file Date control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples int sampler app\r\n * - Optimize. It is way to slow on samples\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDate', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDate',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    ngChange: '&'\r\n                },\r\n                templateUrl: 'date/date.html',\r\n                controller: 'pipDateController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateController',\r\n        ['$scope', '$element', 'pipTranslate', function ($scope, $element, pipTranslate) {\r\n            var value;\r\n\r\n            function dayList(month, year) {\r\n                var count = 31, days = [], i;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: pipTranslate.translate('MONTH_' + i)\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var i,\r\n                    currentYear = new Date().getFullYear(),\r\n                    startYear = $scope.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                    endYear = $scope.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                    years = [];\r\n\r\n                if ($scope.timeMode === 'past') {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                if ($scope.days.length !== days.length) {\r\n                    if ($scope.day > days.length) {\r\n                        $scope.day = days.length;\r\n                    }\r\n\r\n                    $scope.days = days;\r\n                }\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                    day = value ? value.getDate() : null,\r\n                    month = value ? value.getMonth() + 1 : null,\r\n                    year = value ? value.getFullYear() : null;\r\n\r\n                // Update day list if month and year were changed\r\n                if ($scope.month !== month && $scope.year !== year) {\r\n                    $scope.days = dayList($scope.month, $scope.year);\r\n                }\r\n\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.day && $scope.month && $scope.year) {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    $scope.model = value;\r\n                    $scope.ngChange();\r\n                }\r\n            }\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            // Set initial values\r\n            value = $scope.model ? _.isDate($scope.model) ? $scope.model : new Date($scope.model) : null;\r\n            $scope.day = value ? value.getDate() : null;\r\n            $scope.month = value ? value.getMonth() + 1 : null;\r\n            $scope.year = value ? value.getFullYear() : null;\r\n\r\n            $scope.dayLabel = pipTranslate.translate('DAY');\r\n            $scope.monthLabel = pipTranslate.translate('MONTH');\r\n            $scope.yearLabel = pipTranslate.translate('YEAR');\r\n\r\n            $scope.days = dayList($scope.month, $scope.year);\r\n            $scope.months = monthList();\r\n            $scope.years = yearList();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue) {\r\n                getValue(newValue);\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n\r\n","/**\r\n * @file Date range control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples int sampler app\r\n * - Optimize. It is way to slow on samples\r\n */\r\n\r\n/*\r\n pip-date-range-type\r\n [ daily,  weekly,  monthly,  yearly ]\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n    var thisModule = angular.module('pipDateRange', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDateRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    pipChanged: '&',\r\n                    pipDateRangeType: '@',\r\n                    pipDateFormat: '@',\r\n                    pipNoLine: '@'\r\n                },\r\n                templateUrl: 'date_range/date_range.html',\r\n                controller: 'pipDateRangeController'\r\n            };\r\n        });\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateRangeController',\r\n        ['$scope', '$element', 'pipTranslate', '$mdMedia', '$rootScope', function ($scope, $element, pipTranslate, $mdMedia, $rootScope) {\r\n            var currentDate,\r\n                currentYear,\r\n                currentMonth,\r\n                currentDay,\r\n                prevState = {}, currentState = {};\r\n\r\n            currentDate = new Date();\r\n            currentYear = currentDate.getUTCFullYear();\r\n            currentMonth = currentDate.getUTCMonth() + 1;\r\n            currentDay = currentDate.getUTCDate();\r\n            $scope.daysWeek = {\r\n                en: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n                ru: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб']\r\n            };\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    var date, dayOfWeek;\r\n\r\n                    date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                    dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                var date, dayOfWeek;\r\n\r\n                date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onWeekChange = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            // visibility\r\n            $scope.isDay = function () {\r\n                return $scope.pipDateRangeType === 'daily';\r\n            };\r\n\r\n            $scope.isWeek = function () {\r\n                return $scope.pipDateRangeType === 'weekly';\r\n            };\r\n\r\n            $scope.isMonth = function () {\r\n                return $scope.pipDateRangeType === 'daily' ||\r\n                    $scope.pipDateRangeType === 'weekly' ||\r\n                    $scope.pipDateRangeType === 'monthly';\r\n            };\r\n\r\n            $scope.onChange = function () {\r\n                if ($scope.pipChanged) {\r\n                    $scope.pipChanged();\r\n                }\r\n            };\r\n\r\n            function setCurrent() {\r\n                currentState.day = $scope.day;\r\n                currentState.month = $scope.month;\r\n                currentState.year = $scope.year;\r\n                currentState.week = $scope.week;\r\n                currentState.dateRangeType = $scope.pipDateRangeType;\r\n                currentState.model = $scope.model;\r\n            }\r\n\r\n            function fillLists() {\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n                $scope.months = monthList();\r\n                $scope.shortMonths = monthList(true);\r\n                $scope.years = yearList();\r\n\r\n            }\r\n\r\n            function correctWeek() {\r\n                if (!prevState.model || prevState.model && prevState.model.getTime() >= $scope.model.getTime()) {\r\n                    // if shift week -> increase month\r\n                    if ($scope.weeks && $scope.weeks[$scope.week] && $scope.weeks[$scope.week].id <= 0) {\r\n                        if ($scope.month < 12) {\r\n                            $scope.month += 1;\r\n                        } else {\r\n                            $scope.month = 1;\r\n                            $scope.year += 1;\r\n                        }\r\n                        fillLists();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function init() {\r\n                var value;\r\n\r\n                value = $scope.model ? new Date($scope.model) : null;\r\n                $scope.day = value ? value.getUTCDate() : null;\r\n                $scope.month = value ? value.getUTCMonth() + 1 : null;\r\n                $scope.year = value ? value.getUTCFullYear() : null;\r\n                $scope.week = value ? getWeekByDate($scope.day, $scope.month - 1, $scope.year) : null;\r\n\r\n                fillLists();\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            }\r\n\r\n            // Set initial values\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    getValue(newValue);\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            $scope.$watch('pipDateRangeType', function (newValue, oldValue) {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    init();\r\n                }\r\n            });\r\n\r\n            $scope.onYearClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.year = currentYear;\r\n                }\r\n            };\r\n\r\n            $scope.onMonthClick = function () {\r\n                if (!$scope.month) {\r\n                    $scope.month = currentMonth;\r\n                }\r\n            };\r\n\r\n            $scope.onDayClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.day = currentDay;\r\n                }\r\n            };\r\n            // ---------------------------------------------------------------------------------------\r\n\r\n            function getCountDay(month, year) {\r\n                var count = 31;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count, days, i, ln;\r\n\r\n                ln = $rootScope.$language || 'en';\r\n                count = getCountDay(month, year);\r\n                $scope.nameDays = [];\r\n                days = [];\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                    $scope.nameDays.push($scope.daysWeek[ln][new Date(year, month - 1, i).getDay()]);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function getWeekByDate(day, month, year) {\r\n                var date, dayOfWeek, startWeek;\r\n\r\n                date = new Date(Date.UTC(year, month, day));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n                if (dayOfWeek === 1) {\r\n                    startWeek = day;\r\n                } else {\r\n                    startWeek = day + 1 - dayOfWeek;\r\n                }\r\n\r\n                return startWeek;\r\n            }\r\n\r\n            function getWeek(day, countDay, countPrevMonthDay) {\r\n                var endDay, startDay;\r\n\r\n                endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n                startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n                return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n            }\r\n\r\n            function weekList(month, year) { // возвращает список начала надели\r\n                var weeks, countDay, countPrevMonthDay, startWeek;\r\n\r\n                weeks = [];  // в массиве первые дни недели в текущем месяце\r\n                countDay = getCountDay(month, year);\r\n                startWeek = getWeekByDate(1, month - 1, year);\r\n\r\n                countPrevMonthDay = month - 1 ? getCountDay(month - 1, year) : getCountDay(12, year - 1);\r\n                while (startWeek < countDay + 1) {\r\n                    weeks.push({\r\n                        id: startWeek,\r\n                        name: getWeek(startWeek, countDay, countPrevMonthDay)\r\n                    });\r\n                    startWeek = startWeek + 7;\r\n                }\r\n\r\n                return weeks;\r\n            }\r\n\r\n            function monthList() {\r\n                var months, i;\r\n\r\n                months = [];\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: pipTranslate.translate('MONTH_' + i)\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var startYear, i,\r\n                    endYear,\r\n                    years = [];\r\n\r\n                switch ($scope.timeMode) {\r\n                    case 'future':\r\n                        startYear = currentYear;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    case 'past':\r\n                        startYear = currentYear - 100;\r\n                        endYear = currentYear;\r\n                        break;\r\n                    case 'now':\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    default:\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 50;\r\n                        break;\r\n                }\r\n                if ($scope.timeMode === 'future') {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                switch ($scope.pipDateRangeType) {\r\n                    case 'monthly':\r\n                        $scope.day = 1;\r\n                        break;\r\n                    case 'yearly':\r\n                        $scope.month = 1;\r\n                        $scope.day = 1;\r\n                        break;\r\n                    default:\r\n                        if ($scope.days.length !== days.length) {\r\n                            if ($scope.day > days.length) {\r\n                                $scope.day = days.length;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                $scope.days = days;\r\n            }\r\n\r\n            function adjustWeek() {\r\n                var weeks;\r\n\r\n                weeks = weekList($scope.month, $scope.year);\r\n                $scope.week = getWeekByDate($scope.week, $scope.month - 1, $scope.year);\r\n                $scope.weeks = weeks;\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value, day, month, year, week;\r\n\r\n                value = v ? new Date(v) : null;\r\n                // Define values\r\n                day = value ? value.getUTCDate() : null;\r\n                month = value ? value.getUTCMonth() + 1 : null;\r\n                year = value ? value.getUTCFullYear() : null;\r\n                week = value ? getWeekByDate(day, month - 1, year) : null;\r\n                // Exit if nothing to update\r\n                if ($scope.day === day && $scope.month === month && $scope.year === year && $scope.week === week) {\r\n                    return;\r\n                }\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n                $scope.week = week;\r\n\r\n                // Define data sources\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.week, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                } else {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                }\r\n\r\n                prevState = _.cloneDeep(currentState);\r\n                setCurrent();\r\n                $scope.onChange();\r\n            }\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Filter to format date and time\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDateTimeFilters', ['pipDateFormat']);\r\n\r\n    thisModule.filter('formatDate',  \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value, format) {\r\n                return pipDateFormat.formatDate(value, format);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongDate', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongDate(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongDateWithYear',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongDateWithYear(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatMonth',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value, format) {\r\n                return pipDateFormat.formatMonth(value, format);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortDate', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortDate(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortDateWithYear',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortDateWithYear(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongMonth',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongMonth(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatYear',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatYear(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortWeek',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortWeek(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value, format) {\r\n                return pipDateFormat.formatTime(value, format);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatLongDateTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatLongDateTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatShortDateTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatShortDateTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatElapsedInterval', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatElapsedInterval(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatElapsedTime', \r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatElapsedTime(value);  \r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatMillisecondsToSeconds',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value) {\r\n                return pipDateFormat.formatMillisecondsToSeconds(value);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatDateRange',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value1, value2) {\r\n                return pipDateFormat.formatDateRange(value1, value2);\r\n            };\r\n        }]\r\n    );\r\n\r\n    thisModule.filter('formatDateTimeRange',\r\n        ['pipDateFormat', function (pipDateFormat) {\r\n            return function(value1, value2) {\r\n                return pipDateFormat.formatDateTimeRange(value1, value2);\r\n            };\r\n        }]\r\n    );\r\n\r\n\r\n})();\r\n","/**\r\n * @file Date formatting service\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n /* global _, angular */\r\n \r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDateFormat', ['pipUtils', 'pipTranslate']);\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n\tthisModule.config(['pipTranslateProvider', function(pipTranslateProvider) {\r\n\r\n        pipTranslateProvider.translations('en', {\r\n            // Months - 'MONTH_' + monthIndex\r\n            // start at 0 to match JS date format\r\n            'MONTH_1': 'January',\r\n            'MONTH_2': 'February',\r\n            'MONTH_3': 'March',\r\n            'MONTH_4': 'April',\r\n            'MONTH_5': 'May',\r\n            'MONTH_6': 'June',\r\n            'MONTH_7': 'July',\r\n            'MONTH_8': 'August',\r\n            'MONTH_9': 'September',\r\n            'MONTH_10': 'October',\r\n            'MONTH_11': 'November',\r\n            'MONTH_12': 'December',\r\n\r\n            'MONTH_LONG_1': 'January',\r\n            'MONTH_LONG_2': 'February',\r\n            'MONTH_LONG_3': 'March',\r\n            'MONTH_LONG_4': 'April',\r\n            'MONTH_LONG_5': 'May',\r\n            'MONTH_LONG_6': 'June',\r\n            'MONTH_LONG_7': 'July',\r\n            'MONTH_LONG_8': 'August',\r\n            'MONTH_LONG_9': 'September',\r\n            'MONTH_LONG_10': 'October',\r\n            'MONTH_LONG_11': 'November',\r\n            'MONTH_LONG_12': 'December',\r\n\r\n            'MONTH_SHORT_1': 'Jan',\r\n            'MONTH_SHORT_2': 'Feb',\r\n            'MONTH_SHORT_3': 'Mar',\r\n            'MONTH_SHORT_4': 'Apr',\r\n            'MONTH_SHORT_5': 'May',\r\n            'MONTH_SHORT_6': 'Jun',\r\n            'MONTH_SHORT_7': 'Jul',\r\n            'MONTH_SHORT_8': 'Aug',\r\n            'MONTH_SHORT_9': 'Sep',\r\n            'MONTH_SHORT_10': 'Oct',\r\n            'MONTH_SHORT_11': 'Nov',\r\n            'MONTH_SHORT_12': 'Dec',\r\n\r\n            // Days of the week - 'DAY_' + dayIndex\r\n            // start at 1 to match JS date format\r\n            'DAY_1': 'Monday',\r\n            'DAY_2': 'Tuesday',\r\n            'DAY_3': 'Wednesday',\r\n            'DAY_4': 'Thursday',\r\n            'DAY_5': 'Friday',\r\n            'DAY_6': 'Saturday',\r\n            'DAY_7': 'Sunday',\r\n\r\n            'ELAPSED_TODAY': 'Today',\r\n            'ELAPSED_YESTERDAY': 'Yesterday',\r\n            'ELAPSED_YEARS': 'y',\r\n            'ELAPSED_MONTHS': 'mth',\r\n            'ELAPSED_WEEKS': 'w',\r\n            'ELAPSED_DAYS': 'd',\r\n            'ELAPSED_HOURS': 'h',\r\n            'ELAPSED_MINUTES': 'm',\r\n            'ELAPSED_SECONDS': 's',\r\n            'ELAPSED_AT': 'at',\r\n            'ELAPSED_AGO': 'ago',\r\n            'ELAPSED_JUST_NOW': 'Just now',\r\n            'ELAPSED_FEW_MIN_AGO': 'Few min ago',\r\n            'ELAPSED_MIN_AGO': 'min ago',\r\n            'ELAPSED_HOUR_AGO': 'hour ago',\r\n            'ELAPSED_HOURS_AGO': 'hours ago',\r\n            'ELAPSED_HOURS_AGO_MORE_THAN_FIVE': 'hours ago'\r\n        });\r\n\r\n        pipTranslateProvider.translations('ru', {\r\n            // Months - 'MONTH_' + monthIndex\r\n            // start at 0 to match JS date format\r\n            'MONTH_1': 'январь',\r\n            'MONTH_2': 'февраль',\r\n            'MONTH_3': 'март',\r\n            'MONTH_4': 'апрель',\r\n            'MONTH_5': 'май',\r\n            'MONTH_6': 'июнь',\r\n            'MONTH_7': 'июль',\r\n            'MONTH_8': 'август',\r\n            'MONTH_9': 'сентябрь',\r\n            'MONTH_10': 'октябрь',\r\n            'MONTH_11': 'ноябрь',\r\n            'MONTH_12': 'декабрь',\r\n\r\n            'MONTH_LONG_1': 'января',\r\n            'MONTH_LONG_2': 'февраля',\r\n            'MONTH_LONG_3': 'марта',\r\n            'MONTH_LONG_4': 'апреля',\r\n            'MONTH_LONG_5': 'мая',\r\n            'MONTH_LONG_6': 'июня',\r\n            'MONTH_LONG_7': 'июля',\r\n            'MONTH_LONG_8': 'августа',\r\n            'MONTH_LONG_9': 'сентября',\r\n            'MONTH_LONG_10': 'октября',\r\n            'MONTH_LONG_11': 'ноября',\r\n            'MONTH_LONG_12': 'декабря',\r\n\r\n            'MONTH_SHORT_1': 'янв',\r\n            'MONTH_SHORT_2': 'фев',\r\n            'MONTH_SHORT_3': 'мар',\r\n            'MONTH_SHORT_4': 'апр',\r\n            'MONTH_SHORT_5': 'май',\r\n            'MONTH_SHORT_6': 'июн',\r\n            'MONTH_SHORT_7': 'июл',\r\n            'MONTH_SHORT_8': 'авг',\r\n            'MONTH_SHORT_9': 'сен',\r\n            'MONTH_SHORT_10': 'окт',\r\n            'MONTH_SHORT_11': 'ноя',\r\n            'MONTH_SHORT_12': 'дек',\r\n\r\n            // Days of the week - 'DAY_' + dayIndex\r\n            // start at 1 to match JS date format\r\n            'DAY_1': 'понедельник',\r\n            'DAY_2': 'вторник',\r\n            'DAY_3': 'среда',\r\n            'DAY_4': 'четверг',\r\n            'DAY_5': 'пятница',\r\n            'DAY_6': 'суббота',\r\n            'DAY_7': 'воскресенье',\r\n\r\n            'ELAPSED_TODAY': 'Сегодня',\r\n            'ELAPSED_YESTERDAY': 'Вчера',\r\n            'ELAPSED_YEARS': 'г',\r\n            'ELAPSED_MONTHS': 'мц',\r\n            'ELAPSED_WEEKS': 'н',\r\n            'ELAPSED_DAYS': 'д',\r\n            'ELAPSED_HOURS': 'ч',\r\n            'ELAPSED_MINUTES': 'м',\r\n            'ELAPSED_SECONDS': 'с',\r\n            'ELAPSED_AT': 'в',\r\n            'ELAPSED_AGO': 'тн',\r\n            'ELAPSED_JUST_NOW': 'Только что',\r\n            'ELAPSED_FEW_MIN_AGO': 'Несколько мин тн',\r\n            'ELAPSED_MIN_AGO': 'мин тн',\r\n            'ELAPSED_HOUR_AGO': 'час тн',\r\n            'ELAPSED_HOURS_AGO': 'часа тн',\r\n            'ELAPSED_HOURS_AGO_MORE_THAN_FIVE': 'часов тн'\r\n        });\r\n\t\t\r\n\t}]);\r\n\r\n    thisModule.factory('pipDateFormat',\r\n        ['pipDates', 'pipTranslate', '$rootScope', function (pipDates, pipTranslate, $rootScope) {\r\n\r\n            return {\r\n                formatDate: formatDate,\r\n                formatLongDate: formatLongDate,\r\n                formatShortDate: formatShortDate,\r\n                formatShortDateWithYear: formatShortDateWithYear,\r\n                formatLongDateWithYear: formatLongDateWithYear,\r\n\r\n                formatLongMonth: formatLongMonth,\r\n                formatMonth: formatMonth,\r\n                formatYear: formatYear,\r\n                formatShortWeek: formatShortWeek,\r\n                formatShortDayAndMonth: formatShortDayAndMonth,\r\n                formatLongDayAndMonth: formatLongDayAndMonth,\r\n\r\n                formatDateRange: formatDateRange,\r\n                formatDateTimeRange: formatDateTimeRange,\r\n\r\n                formatTime: formatTime,\r\n                formatLongTime: formatLongTime,\r\n                formatShortTime: formatShortTime, \r\n\r\n                formatLongDateTime: formatLongDateTime,\r\n                formatShortDateTime: formatShortDateTime,\r\n\r\n                formatElapsedTime: formatElapsedTime,\r\n                formatElapsedInterval: formatElapsedInterval,\r\n\r\n                formatMillisecondsToSeconds: formatMillisecondsToSeconds\r\n            };\r\n\r\n\r\n            function twoDigits(value) {\r\n                return value < 10 ? '0' + value : value; \r\n            };\r\n\r\n            function formatDate(value, format, str) {\r\n                if (value == null) return '';\r\n\r\n                var\r\n                    strict = str || false,\r\n                    value = _.isDate(value) ? value : new Date(value),\r\n                    thisYear = new Date().getUTCFullYear(),\r\n                    year = value.getUTCFullYear(),\r\n                    month = value.getUTCMonth(),\r\n                    longMonthName = pipTranslate.translate('MONTH_LONG_' + (month + 1)),\r\n                    shortMonthName = pipTranslate.translate('MONTH_SHORT_' + (month + 1)),\r\n                    monthName = pipTranslate.translate('MONTH_' + (month + 1)),\r\n                    day = value.getUTCDate(),\r\n                    startWeek = pipDates.toStartWeek(value),\r\n                    endWeek = pipDates.toEndWeek(value, -1);\r\n\r\n                if (strict == false && format == 'd MMMM yyyy' && thisYear === year) {\r\n                        format = 'MMMM d';\r\n                }\r\n                if (strict == false && format == 'd MMM yyyy' && thisYear === year) {\r\n                        format = 'MMM d';\r\n                }\r\n                if ((format == 'MMM d') && $rootScope.$language == 'ru') {\r\n                        format = 'd MMM';\r\n                }\r\n                if ((format == 'MMMM d') && $rootScope.$language == 'ru') {\r\n                    format = 'd MMMM';\r\n                }\r\n\r\n                if (format == 'd MMMM yyyy')\r\n                    return '' + day + ' ' + longMonthName + ' ' + year\r\n                else if (format == 'MMMM d, yyyy')\r\n                    return '' + monthName + ' ' + day + ', ' + year\r\n                if (format == 'd MMM yyyy')\r\n                    return '' + day + ' ' + shortMonthName + ' ' + year\r\n                else if (format == 'MMM d, yyyy')\r\n                    return '' + shortMonthName + ' ' + day + ', ' + year\r\n                else if (format == 'd MMMM')\r\n                    return '' + day + ' ' + longMonthName\r\n                else if (format == 'd MMM')\r\n                    return '' + day + ' ' + shortMonthName\r\n                else if (format == 'MMM d')\r\n                    return '' + shortMonthName + ' ' + day;\r\n                else if (format == 'MMMM d')\r\n                    return '' + longMonthName + ' ' + day;\r\n                else if (format == 'yyyy/M/d')\r\n                    return '' + year + '/' + month + '/' + day;\r\n                else if (format == 'yyy-M-d')\r\n                    return '' + year + '-' + month + '-' + day;\r\n                else if (format == 'MMMM')\r\n                    return '' + longMonthName + ' ' + year;\r\n                else if (format == 'yyyy')\r\n                    return '' + year;\r\n                else if (format == 'ww')\r\n                    return '' + startWeek.getUTCDate() + ' - ' + endWeek.getUTCDate() + ' ' + monthName + ' ' + year;\r\n\r\n                return '' + day + ' ' + monthName + ' ' + year\r\n            }\r\n\r\n            function formatLongDate(value) {\r\n                return formatDate(value, 'd MMMM yyyy');\r\n            }\r\n\r\n            function formatShortDateWithYear(value) {\r\n                return formatDate(value, 'd MMM yyyy', true);\r\n            }\r\n\r\n            function formatLongDateWithYear(value) {\r\n                return formatDate(value, 'd MMMM yyyy', true);\r\n            }\r\n\r\n            function formatShortDate(value) {\r\n                return formatDate(value, 'd MMM yyyy');\r\n            }\r\n\r\n            function formatLongMonth(value) {\r\n                return formatDate(value, 'MMMM');\r\n            }\r\n\r\n            function formatYear(value) {\r\n                return formatDate(value, 'yyyy');\r\n            }\r\n\r\n            function formatShortWeek(value) {\r\n                return formatDate(value, 'ww');\r\n            }\r\n\r\n            function formatShortDayAndMonth(value) {\r\n                return formatDate(value, 'd MMM');\r\n            }\r\n\r\n            function formatLongDayAndMonth(value) {\r\n                if ($rootScope.$language == 'ru')\r\n                    return formatDate(value, 'd MMMM');\r\n                else\r\n                    return formatDate(value, 'MMMM d');\r\n            }\r\n\r\n            function formatDateRange(value1, value2) {\r\n                value1 =  value1 ? (_.isDate(value1) ? value1 : new Date(value1)) : null;\r\n                value2 =  value2 ? (_.isDate(value2) ? value2 : new Date(value2)) : null;\r\n\r\n                if (value1 == null) {\r\n                    if ($rootScope.$language == 'ru')\r\n                        return formatDate(value2, 'd MMM yyyy', true);\r\n                    else\r\n                        return formatDate(value2, 'MMM d, yyyy', true);\r\n                }\r\n\r\n                if (value2 == null || value1 == value2) {\r\n                    if ($rootScope.$language == 'ru')\r\n                        return formatDate(value1, 'd MMM yyyy', true);\r\n                    else\r\n                        return formatDate(value1, 'MMM d, yyyy', true);\r\n                }\r\n\r\n                if (value1.getUTCFullYear() !== value2.getUTCFullYear()) {\r\n                    if ($rootScope.$language == 'ru')\r\n                        return formatDate(value1, 'd MMM yyyy', true) + '-' + formatDate(value2, 'd MMM yyyy', true);\r\n                    else\r\n                        return formatDate(value1, 'MMM d, yyyy', true) + '-' + formatDate(value2, 'MMM d, yyyy', true);\r\n                } else {\r\n                        return formatDate(value1, 'd MMM') + ' - ' + formatDate(value2, 'd MMM')\r\n                            + ((new Date().getUTCFullYear() !== value1.getUTCFullYear()) ? ' ' + formatDate(value1, 'yyyy') : '');\r\n                }\r\n            }\r\n\r\n            function formatDateTimeRange(value1, value2) {\r\n                value1 =  value1 ? (_.isDate(value1) ? value1 : new Date(value1)) : null;\r\n                value2 =  value2 ? (_.isDate(value2) ? value2 : new Date(value2)) : null;\r\n                if (value1 == null && value2 == null) return '';\r\n\r\n                if (value1 == null) {\r\n                    return formatShortDateTime(value2);\r\n                }\r\n\r\n                if (value2 == null || value1 == value2) {\r\n                    return formatShortDateTime(value1);\r\n                }\r\n\r\n                var dayStart, monthStart, yearStart,\r\n                    dayEnd, monthEnd, yearEnd;\r\n\r\n                dayStart = value1.getUTCDate();\r\n                monthStart = value1.getUTCMonth();\r\n                yearStart = value1.getUTCFullYear();\r\n                dayEnd = value2.getUTCDate();\r\n                monthEnd = value2.getUTCMonth();\r\n                yearEnd = value2.getUTCFullYear();\r\n\r\n\r\n                if (yearStart !== yearEnd) {\r\n                    return formatDate(value1, 'd MMM') + ', ' + yearStart + ' ' + formatTime(value1, 'hh:mm') +\r\n                        ' - ' + formatDate(value2, 'd MMM') + ', ' + yearEnd + ' ' + formatTime(value2, 'hh:mm');\r\n                } else {\r\n                    if (monthStart != monthEnd && !dayStart != dayEnd)\r\n                        return formatDate(value1, 'd MMM') + ', ' + formatTime(value1, 'hh:mm') +\r\n                            ' - ' + formatDate(value2, 'd MMM') + ', ' + formatTime(value2, 'hh:mm');\r\n                    else\r\n                        return formatTime(value1, 'hh:mm') + ' - ' + formatTime(value2, 'hh:mm')\r\n                }\r\n            }\r\n\r\n            function formatTime(value, format) {\r\n                if (value == null) return '';\r\n\r\n                value = _.isDate(value) ? value : new Date(value);\r\n                \r\n                var \r\n                    hours = value.getHours(),\r\n                    mins = value.getMinutes(),\r\n                    secs = value.getSeconds(),\r\n                    ampm = '';\r\n\r\n                if (pipTranslate.use() == 'en') {\r\n                    ampm = hours >= 12 ? ' PM' : ' AM';\r\n                    hours = hours % 12;\r\n                    if (hours == 0) hours = 12;\r\n                }\r\n\r\n                if (format == 'hh:mm:ss')\r\n                    return '' + twoDigits(hours) + ':' + twoDigits(mins) + ':' + twoDigits(secs) + ampm;\r\n                else if (format == 'hh:mm')\r\n                    return '' + twoDigits(hours) + ':' + twoDigits(mins) + ampm;\r\n\r\n                return '' + twoDigits(hours) + ':' + twoDigits(mins) + ':' + twoDigits(secs) + ampm;\r\n            }\r\n\r\n            function formatMonth(value, short) {\r\n                if (value == null) return '';\r\n                return short ? pipTranslate.translate('MONTH_SHORT_' + value) : pipTranslate.translate('MONTH_' + value);\r\n            }\r\n\r\n            function formatLongTime(value) {\r\n                return formatTime(value, 'hh:mm:ss');\r\n            }\r\n\r\n            function formatShortTime(value) {\r\n                return formatTime(value, 'hh:mm');\r\n            }\r\n\r\n            function formatLongDateTime(value) {\r\n                if (value == null) return '';\r\n                value = _.isDate(value) ? value : new Date(value);\r\n                return formatLongDate(value) + ' ' + formatLongTime(value);\r\n            }\r\n\r\n            function formatShortDateTime(value) {\r\n                if (value == null) return '';\r\n                value = _.isDate(value) ? value : new Date(value);\r\n                return formatShortDate(value) + ' ' + formatShortTime(value);\r\n            }\r\n\r\n            function formatElapsedTime(value, format) {\r\n                if (value == null) return '';\r\n\r\n                value = _.isDate(value) ? value : new Date(value);\r\n\r\n                var \r\n                    current = new Date(),\r\n                    diff = Math.floor(((current.getTime() + current.getTimezoneOffset()) - (value.getTime() + value.getTimezoneOffset())) / 1000);\r\n\r\n                if (diff < 1) return pipTranslate.translate('ELAPSED_JUST_NOW');\r\n\r\n                var years, months, weeks, days, hours, mins, secs;\r\n\r\n                secs = diff % 60;\r\n\r\n                diff = Math.floor(diff / 60);\r\n                mins = diff % 60;\r\n\r\n                diff = Math.floor(diff / 60);\r\n                hours = diff % 24;\r\n\r\n                diff = diff / 24;\r\n                years = Math.floor(diff / 365),\r\n\r\n                diff = diff - years * 365;\r\n                months = Math.floor(diff / 30),\r\n                days = Math.floor(diff - months * 30);\r\n\r\n                if (days % 7 == 0) {\r\n                    weeks = Math.floor(days / 7);\r\n                    days = 0;\r\n                } else {\r\n                    weeks = 0;\r\n                }\r\n\r\n                if (format == 'interval') {\r\n                    var result = '';\r\n\r\n                    if (years) {\r\n                        result += ' ' + years + pipTranslate.translate('ELAPSED_YEARS');\r\n                        weeks = days = hours = mins = secs = null;\r\n                    }\r\n                    if (months) {\r\n                        result += ' ' + months + pipTranslate.translate('ELAPSED_MONTHS');\r\n                        days = hours = mins = secs = null;\r\n                    }\r\n                    if (weeks) {\r\n                        result += ' ' + weeks + pipTranslate.translate('ELAPSED_WEEKS');\r\n                        hours = mins = secs = null;\r\n                    }\r\n                    if (days) {\r\n                        result += ' ' + days + pipTranslate.translate('ELAPSED_DAYS');\r\n                        mins = secs = null;\r\n                    }\r\n                    if (hours) {\r\n                        result += ' ' + hours + pipTranslate.translate('ELAPSED_HOURS');\r\n                        secs = null;\r\n                    }\r\n                    if (mins) result += ' ' + mins + pipTranslate.translate('ELAPSED_MINUTES');\r\n                    if (secs) result += ' ' + secs + pipTranslate.translate('ELAPSED_SECONDS');\r\n\r\n                    return result != '' ? result + ' ' + pipTranslate.translate('ELAPSED_AGO') \r\n                        : pipTranslate.translate('ELAPSED_JUST_NOW');\r\n                }\r\n\r\n                // Default time format = 'default'\r\n\r\n                if (years > 0) {\r\n                    return formatDate(value, 'd MMM yyyy');\r\n                }\r\n\r\n                if (months > 0 || weeks > 0 || days > 1) {\r\n                    return formatDate(value, 'MMM d') \r\n                        + ', ' + formatTime(value, 'hh:mm');\r\n                }\r\n\r\n                if (days == 1) {\r\n                    return pipTranslate.translate('ELAPSED_YESTERDAY') \r\n                        + ', ' + formatTime(value, 'hh:mm');\r\n                }\r\n\r\n                if (hours > 10) {\r\n                    return pipTranslate.translate('ELAPSED_TODAY') \r\n                        + ', ' + formatTime(value, 'hh:mm');\r\n                }\r\n\r\n                if (hours > 0) {\r\n                    return '' + hours + ' ' + (hours < 2 ? pipTranslate.translate('ELAPSED_HOUR_AGO') :\r\n                        hours < 5 ? pipTranslate.translate('ELAPSED_HOURS_AGO') : pipTranslate.translate('ELAPSED_HOURS_AGO_MORE_THAN_FIVE'));\r\n                }\r\n\r\n                if (mins > 10) {\r\n                    return '' + mins + ' ' + pipTranslate.translate('ELAPSED_MIN_AGO');\r\n                }\r\n\r\n                if (mins > 0) {\r\n                    return pipTranslate.translate('ELAPSED_FEW_MIN_AGO');\r\n                }\r\n\r\n                return pipTranslate.translate('ELAPSED_JUST_NOW');\r\n            }\r\n\r\n            function formatElapsedInterval(value) {\r\n                return formatElapsedTime(value, 'interval');  \r\n            }\r\n\r\n            function formatMillisecondsToSeconds(value) {\r\n                return Math.floor(value / 1000)\r\n            }\r\n\r\n        }]\r\n    );\r\n    \r\n})();\r\n","/**\r\n * @file Time control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRange', []);\r\n\r\n    thisModule.directive('pipTimeRange',\r\n        ['pipUtils', function (pipUtils) {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipEndDate: '='\r\n                },\r\n                templateUrl: 'time_range/time_range.html',\r\n                link: function ($scope, $element, $attrs) {\r\n\r\n                    function getDateJSON(value) {\r\n                        return value ? new Date(value) : null;\r\n                    }\r\n\r\n                    function defineStartDate() {\r\n                        if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                            $scope.data.start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate\r\n                                : getDateJSON($scope.pipStartDate);\r\n                        }\r\n                    }\r\n\r\n                    function defineEndDate() {\r\n                        if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                            $scope.data.end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate\r\n                                : getDateJSON($scope.pipEndDate);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    $scope.data = {};\r\n                    $scope.data.start = null;\r\n                    $scope.data.end = null;\r\n                    defineStartDate();\r\n                    defineEndDate();\r\n\r\n                    if (toBoolean($attrs.pipRebind)) {\r\n                        $scope.$watch('pipStartDate',\r\n                            function () {\r\n                                $scope.data.start = null;\r\n                                defineStartDate();\r\n                            }\r\n                        );\r\n                        $scope.$watch('pipEndDate',\r\n                            function () {\r\n                                $scope.data.end = null;\r\n                                defineEndDate();\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-time-range');\r\n                }\r\n            };\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n","\r\n(function (angular, _) {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRangeEdit', ['pipDateUtils', 'pipTranslate']);\r\n\r\n    thisModule.directive('pipTimeRangeEdit',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipChanged: '&',\r\n                    pipEndDate: '=',\r\n                    pipStartLabel: '@',\r\n                    pipEndLabel: '@',\r\n                    disabled: '&ngDisabled',\r\n                    pipSize: '='\r\n                },\r\n                templateUrl: 'time_range_edit/time_range_edit.html',\r\n                controller: 'pipTimeRangeEditController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipTimeRangeEditController',\r\n        ['$scope', '$element', '$attrs', 'pipDates', 'pipTranslate', function ($scope, $element, $attrs, pipDates, pipTranslate) {\r\n\r\n            function getDateJSON(value) {\r\n                return value ? new Date(value) : null;\r\n            }\r\n\r\n            function setDuration() {\r\n                var start, end;\r\n\r\n                if (!$scope.data.startDate || !$scope.data.endDate) {\r\n                    return null;\r\n                }\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                return end - start;\r\n            }\r\n\r\n            function validateStartDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано начальное время - задаем его\r\n                if (!$scope.data.startTime) {\r\n                    if (!$scope.data.endTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDates.toStartDay(date);\r\n                        $scope.data.startTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.startTime = $scope.data.endTime === 0 ? 0 : $scope.data.endTime - 30;\r\n                    }\r\n                }\r\n\r\n                // если конечная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if ($scope.data.duration) {\r\n                    end = new Date(start.getTime() + $scope.data.duration);\r\n                    $scope.data.endDate = pipDates.toStartDay(end);\r\n                    end = end.getTime() - $scope.data.endDate.getTime();\r\n                    $scope.data.endTime = Math.floor(end / (30 * 60 * 1000)) * 30;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        $scope.data.endDate = pipDates.toStartDay(new Date(start.getTime() + 30 * 60000));\r\n                        $scope.data.endTime = ($scope.data.startTime + 30) % 1440;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function validateEndDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано конечное время - задаем его\r\n                if (!$scope.data.endTime) {\r\n                    if (!$scope.data.startTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDates.toStartDay(date);\r\n                        $scope.data.endTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.endTime = $scope.data.startTime === 1410 ? 1410 : $scope.data.startTime + 30;\r\n                    }\r\n                }\r\n\r\n                // если yачальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                if (start >= end) {\r\n                    // Если начальная дата больше, то двигаем начальную дату\r\n                    $scope.data.startDate = pipDates.toStartDay(new Date(end.getTime() - 30 * 60000));\r\n                    $scope.data.startTime = $scope.data.endTime % 1440 === 0 ? 1410 : $scope.data.endTime - 30;\r\n                }\r\n\r\n                $scope.data.duration = setDuration();\r\n            }\r\n\r\n            function setDate() {\r\n                var time;\r\n\r\n                $scope.data.bind = false;\r\n\r\n                if ($scope.data.startDate) {\r\n                    time = $scope.data.startTime ? $scope.data.startTime * 60 * 1000 : 0;\r\n                    $scope.pipStartDate = new Date($scope.data.startDate.getTime() + time);\r\n                }\r\n\r\n                if ($scope.data.endDate) {\r\n                    time = $scope.data.endTime ? $scope.data.endTime * 60 * 1000 : 0;\r\n                    $scope.pipEndDate = new Date($scope.data.endDate.getTime() + time);\r\n                }\r\n\r\n                $scope.data.bind = true;\r\n            }\r\n\r\n            function defineDate() {\r\n                var start, end;\r\n\r\n                if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                    start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate : null;\r\n\r\n                    if (!start) {\r\n                        start = getDateJSON($scope.pipStartDate);\r\n                    }\r\n\r\n                    $scope.data.startDate = pipDates.toStartDay(start);\r\n                    $scope.data.startTime = (new Date(start) - $scope.data.startDate) / (60 * 1000);\r\n                }\r\n\r\n                if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                    end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate : null;\r\n\r\n                    if (!start) {\r\n                        end = getDateJSON($scope.pipEndDate);\r\n                    }\r\n\r\n                    $scope.data.endDate = pipDates.toStartDay(end);\r\n                    $scope.data.endTime = (new Date(end) - $scope.data.endDate) / (60 * 1000);\r\n                }\r\n\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n            }\r\n\r\n            function getTimeInterval() {\r\n                var result, i, j, minutes;\r\n\r\n                result = [];\r\n                for (i = 0; i < 24; i++) {\r\n                    for (j = 0; j < 2; j++) {\r\n                        minutes = j * 30;\r\n                        result.push({\r\n                            id: i * 60 + minutes,\r\n                            time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function initDate() {\r\n                $scope.data.startDate = null;\r\n                $scope.data.startTime = null;\r\n                $scope.data.endDate = null;\r\n                $scope.data.endTime = null;\r\n                $scope.data.duration = null;\r\n            }\r\n\r\n            // initialize data\r\n            $scope.intervalTimeCollection = getTimeInterval();\r\n            $scope.data = {};\r\n            $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n                : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n            $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n                : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            initDate();\r\n            defineDate();\r\n\r\n            // process function\r\n            $scope.onChangeStartDate = function () {\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndDate = function () {\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeStartTime = function () {\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startDate = pipDates.toStartDay(new Date());\r\n                }\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndTime = function () {\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endDate = pipDates.toStartDay(new Date());\r\n                }\r\n\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.isDisabled = function () {\r\n                if ($scope.disabled) {\r\n                    return $scope.disabled();\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            $scope.$watchGroup([$scope.pipStartDate, $scope.pipEndDate], function () {\r\n                if ($scope.data.bind) {\r\n                    initDate();\r\n                    defineDate();\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }]\r\n    );\r\n\r\n})(window.angular, window._);\r\n","/**\r\n * @file Date utilities\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n\r\n/* global _, angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDatesUtils', []);\r\n\r\n    // Todo: Use moment functions instead\r\n    thisModule.factory('pipDates', function () {\r\n        var dates = {};\r\n\r\n        dates.addHours = function (date, hours) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            var time = date.getTime() + hours * 3600000;\r\n            return new Date(time);\r\n        };\r\n\r\n        dates.toStartDay = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            return new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n        };\r\n\r\n        dates.toEndDay = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            offset = offset != null ? offset : 0;\r\n            var start = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            return new Date(start.getTime() + 24 * 3600000 + offset);\r\n        };\r\n\r\n        dates.toStartWeek = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            return new Date(date.getTime() - (dayOfWeek - 1) * 24 * 3600000);  // dayOfWeek = 0 для воскресенья\r\n        };\r\n\r\n        dates.toEndWeek = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            offset = offset != null ? offset : 0;\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            return new Date(date.getTime() + (8 - dayOfWeek) * 24 * 3600000 + offset);\r\n        };\r\n\r\n        dates.toStartMonth = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            return new Date(date.getFullYear(), date.getMonth(), 1);\r\n        };\r\n\r\n        dates.toEndMonth = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n\r\n            var\r\n                month = date.getMonth() + 1,\r\n                year = date.getFullYear();\r\n\r\n            if (month > 11) {\r\n                year++;\r\n                month = 0;\r\n            }\r\n\r\n            date = new Date(year, month, 1);\r\n\r\n            if (offset != null) {\r\n                date = new Date(date.getTime() + offset);\r\n            }\r\n\r\n            return date;\r\n        };\r\n\r\n        dates.toStartYear = function (date) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            return new Date(date.getFullYear(), 0, 1);\r\n        };\r\n\r\n        dates.toEndYear = function (date, offset) {\r\n            date = _.isDate(date) ? date : new Date(date);\r\n            date = new Date(date.getFullYear() + 1, 0, 1);\r\n\r\n            if (offset != null) {\r\n                date = new Date(date.getTime() + offset);\r\n            }\r\n\r\n            return date;\r\n        };\r\n\r\n        /** UTC functions  - **/\r\n        dates.toUTCDate = function (year, month, day) {\r\n            return new Date(Date.UTC(year, month, day));\r\n        };\r\n\r\n        dates.toUTCDate = function (date) {\r\n            return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        };\r\n\r\n        dates.fromUTCDate = function (date) {\r\n            if (date == null) date = new Date();\r\n            return new Date(\r\n                date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\r\n        };\r\n\r\n        dates.toUTCStartWeek = function (date) {\r\n            if(!_.isDate(date)) {\r\n                date = new Date(date);\r\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n            }\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            date = dayOfWeek != 1 ? new Date(date.getTime() - (dayOfWeek - 1) * 24 * 3600000) : date;\r\n            return  new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        };\r\n\r\n        dates.toUTCEndWeek = function (date, offset) {\r\n            if(!_.isDate(date)) {\r\n                date = new Date(date);\r\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n            }\r\n            offset = offset != null ? offset : 0;\r\n            var dayOfWeek = date.getDay() ? date.getDay() : 7;\r\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n            date = new Date(date.getTime() + (8 - dayOfWeek) * 24 * 3600000 + offset);\r\n            return  new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n        };\r\n\r\n        return dates;\r\n    });\r\n})();\r\n"]}
>>>>>>> a7fbd961d731cbcc87b3ca6272dab7cf9e0a06c4
