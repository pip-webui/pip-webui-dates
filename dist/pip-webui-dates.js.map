{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/date/date.ts","src/date/date_filter.ts","src/date/date_service.ts","src/date_directive/date.ts","src/date_range_directive/date_range.ts","src/dates.ts","src/dependencies/translate.js","src/time_range_directive/time_range.ts","src/time_range_edit_directive/time_range_edit.ts","temp/pip-webui-dates-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-dates.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nangular.module('pipDateTime', [\r\n    'pipDateTime.Service', 'pipDateTime.Filter'\r\n]);\r\n","'use strict';\r\n\r\nfunction formatTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";\r\n\r\n    return function (value: any, format: string): string {\r\n        return pipDateTime.formatTime(value, format);\r\n    }\r\n}\r\n\r\nfunction formatDateOptionalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, format: string): string {\r\n        return pipDateTime.formatDateOptional(value, format);\r\n    }\r\n}\r\n\r\nfunction formatLongDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDate(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMiddleDate(value);\r\n    }\r\n}\r\n\r\nfunction formatMonthFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any) {\r\n        return pipDateTime.formatMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongMonth(value);\r\n    }\r\n}\r\n\r\nfunction formatYearFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatYear(value);\r\n    }\r\n}\r\n\r\nfunction formatWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMiddleDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatShortDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatMiddleDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatLongDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.formatLongDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction bbFormatDateLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, firstTime: boolean): string {\r\n        return pipDateTime.bbFormatDateLongTime(value, firstTime);\r\n    }\r\n}\r\n\r\nfunction formatFullDateTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatFullDateTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortTime(value);\r\n    }\r\n}\r\n\r\nfunction formatLongTimeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongTime(value);\r\n    }\r\n}\r\n\r\nfunction formatShortDayOfWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDayOfWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDayOfWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatLongMonthDayFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatShortMonthDayFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortMonthDay(value);\r\n    }\r\n}\r\n\r\nfunction formatDateRangeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value1: any, value2: any): string {\r\n        return pipDateTime.formatDateRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatDateTimeRangeFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value1: any, value2: any): string {\r\n        return pipDateTime.formatDateTimeRange(value1, value2);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatShortISOWeekFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatShortISOWeek(value);\r\n    }\r\n}\r\n\r\nfunction formatISOWeekOrdinalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatISOWeekOrdinal(value);\r\n    }\r\n}\r\n\r\nfunction formatDateYFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatLongDateYFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatLongDateY(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeLongFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateLongTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeLongFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateShortTimeLong(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateLongTimeShortFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateLongTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatTodayDateShortTimeShortFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatTodayDateShortTimeShort(value);\r\n    }\r\n}\r\n\r\nfunction formatMillisecondsToSecondsFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.formatMillisecondsToSeconds(value);\r\n    }\r\n}\r\n\r\nfunction formatElapsedIntervalFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any, start: any): string {\r\n        return pipDateTime.formatElapsedInterval(value, start);\r\n    }\r\n}\r\n\r\nfunction getDateJSONFilter(pipDateTime: any) {\r\n    \"ngInject\";  \r\n\r\n    return function (value: any): string {\r\n        return pipDateTime.getDateJSON(value);\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDateTime.Filter', [])\r\n    .filter('formatTime', formatTimeFilter)\r\n    .filter('formatDateOptional', formatDateOptionalFilter)\r\n    .filter('bbFormatDateLongTime', bbFormatDateLongTimeFilter)\r\n    .filter('formatShortDate', formatShortDateFilter)\r\n    .filter('formatMiddleDate', formatMiddleDateFilter)\r\n    .filter('formatLongDate', formatLongDateFilter)\r\n    .filter('formatMonth', formatMonthFilter)\r\n    .filter('formatLongMonth', formatLongMonthFilter)\r\n    .filter('formatYear', formatYearFilter)\r\n    .filter('formatWeek', formatWeekFilter)\r\n    .filter('formatShortWeek', formatShortWeekFilter)\r\n    .filter('formatShortDateTime', formatShortDateTimeFilter)\r\n    .filter('formatMiddleDateTime', formatMiddleDateTimeFilter)    \r\n    .filter('formatLongDateTime', formatLongDateTimeFilter)\r\n    .filter('formatShortDateLongTime', formatShortDateLongTimeFilter)\r\n    .filter('formatMiddleDateLongTime', formatMiddleDateLongTimeFilter)    \r\n    .filter('formatLongDateLongTime', formatLongDateLongTimeFilter)    \r\n    .filter('formatFullDateTime', formatFullDateTimeFilter)\r\n    .filter('formatShortTime', formatShortTimeFilter)\r\n    .filter('formatLongTime', formatLongTimeFilter)\r\n    .filter('formatShortDayOfWeek', formatShortDayOfWeekFilter)\r\n    .filter('formatLongDayOfWeek', formatLongDayOfWeekFilter)\r\n    .filter('formatLongMonthDay', formatLongMonthDayFilter)\r\n    .filter('formatShortMonthDay', formatShortMonthDayFilter)\r\n    .filter('formatDateRange', formatDateRangeFilter)\r\n    .filter('formatDateTimeRange', formatDateTimeRangeFilter)\r\n    .filter('formatISOWeek', formatISOWeekFilter)\r\n    .filter('formatShortISOWeek', formatShortISOWeekFilter)\r\n    .filter('formatISOWeekOrdinal', formatISOWeekOrdinalFilter)\r\n    .filter('formatDateY', formatDateYFilter)\r\n    .filter('formatLongDateY', formatLongDateYFilter)\r\n    .filter('formatTodayDateLongTimeLong', formatTodayDateLongTimeLongFilter)\r\n    .filter('formatTodayDateShortTimeLong', formatTodayDateShortTimeLongFilter)\r\n    .filter('formatTodayDateLongTimeShort', formatTodayDateLongTimeShortFilter)\r\n    .filter('formatTodayDateShortTimeShort', formatTodayDateShortTimeShortFilter)\r\n    .filter('formatMillisecondsToSeconds', formatMillisecondsToSecondsFilter)\r\n    .filter('formatElapsedInterval', formatElapsedIntervalFilter);\r\n","'use strict';\r\n\r\nexport class DateTimeConfig {\r\n    timeZone: number;\r\n}\r\n\r\nexport interface IDateTimeService {\r\n    readonly config: DateTimeConfig;\r\n    useTimeZone(offset: number);\r\n\r\n    bbFormatDateLongTime(value: any, firstTime?: boolean): string; \r\n    \r\n    formatTime(value: any, format: string): string;\r\n    formatDateOptional(value: any, format: string): string;\r\n    formatShortDate(value: any): string;\r\n    formatMiddleDate(value: any): string;\r\n    formatLongDate(value: any): string;\r\n    formatMonth(value: any): string;\r\n    formatLongMonth(value: any): string;\r\n    formatYear(value: any): string;\r\n    formatWeek(value: any): string;\r\n    formatShortWeek(value: any): string;\r\n    formatShortDateTime(value: any): string;\r\n    formatMiddleDateTime(value: any): string;    \r\n    formatLongDateTime(value: any): string;\r\n    formatFullDateTime(value: any): string;\r\n    formatShortDateLongTime(value: any, firstTime?: boolean): string;\r\n    formatMiddleDateLongTime(value: any, firstTime?: boolean): string;    \r\n    formatLongDateLongTime(value: any, firstTime?: boolean): string;    \r\n    formatShortTime(value: any): string;\r\n    formatLongTime(value: any): string;\r\n    formatShortDayOfWeek(value: any): string;\r\n    formatLongDayOfWeek(value: any): string;\r\n    formatLongMonthDay(value: any): string;\r\n    formatShortMonthDay(value: any): string;\r\n    formatDateRange(value1: any, value2: any): string;\r\n    formatDateTimeRange(value1: any, value2: any): string;\r\n    formatISOWeek(value: any): string;\r\n    formatShortISOWeek(value: any): string;\r\n    formatISOWeekOrdinal(value: any): string;\r\n    formatDateY(value: any): string;\r\n    formatLongDateY(value: any): string;\r\n    formatTodayDateLongTimeLong(value: any): string;\r\n    formatTodayDateShortTimeLong(value: any): string;\r\n    formatTodayDateLongTimeShort(value: any): string;\r\n    formatTodayDateShortTimeShort(value: any): string;\r\n    formatMillisecondsToSeconds(value: any): string;\r\n    formatElapsedInterval(value: any, start: any): string;\r\n\r\n    getDateJSON(date: any): string;\r\n    getNextStart(value: any, category: string): any;\r\n    getPrevStart(value: any, category: string): any;\r\n    getNowStart(category: string): any;\r\n\r\n    addHours(value: any, hours: number): any;\r\n    toStartDay(value: any): any;\r\n    toEndDay(value: any, offset: number): any;\r\n    toStartWeek(value: any): any;\r\n    toEndWeek(value: any, offset: number): any;\r\n    toStartMonth(value: any): any;\r\n    toEndMonth(value: any, offset: number): any;\r\n    toStartYear(value: any): any;\r\n    toEndYear(value: any, offset: number): any;\r\n \r\n}\r\n\r\nexport interface IDateTimeProvider extends IDateTimeService, ng.IServiceProvider {\r\n\r\n}\r\n\r\nclass DateTime implements IDateTimeService {\r\n    private _config: DateTimeConfig;\r\n    protected _momentRanged = new Array('year', 'month', 'week', 'isoweek', 'day');\r\n    protected _defaultFormat = 'LL'\r\n\r\n    private isUndefinedOrNull(value: any): boolean {\r\n        return angular.isUndefined(value) || value === null;\r\n    }\r\n\r\n    private getRange(value: string): string {\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return 'day';\r\n        }\r\n\r\n        let index = this._momentRanged.indexOf(value)\r\n\r\n        if (index < 0) {\r\n            return 'day'\r\n        } else {\r\n            return this._momentRanged[index];\r\n        }\r\n    }\r\n\r\n    private getOperationRange(value: string): string {\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return 'day';\r\n        }\r\n\r\n        let range = value == 'isoweek' ? 'week' : value,\r\n            index = this._momentRanged.indexOf(range)\r\n\r\n        if (index < 0) {\r\n            return 'day'\r\n        } else {\r\n            return this._momentRanged[index];\r\n        }\r\n    }\r\n\r\n    private formatDateTime(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            formatTpl: string;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        formatTpl = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n        return date.format(formatTpl);\r\n    }\r\n\r\n    private formatDateTimeY(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            nowDate: any,\r\n            formatMoment: string;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n        formatMoment = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat);\r\n\r\n        if (nowDate.year() == date.year()) {\r\n            formatMoment = formatMoment.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n        }\r\n\r\n        return date.format(formatMoment);\r\n    }\r\n\r\n    private formatDay(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            format = moment.localeData().longDateFormat(basicFormat ? basicFormat : this._defaultFormat),\r\n            formatMonthYearless = format.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '').replace(/M/g, '');\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.format(formatMonthYearless);\r\n    }\r\n\r\n    private formatMonthDay(value: any, basicFormat: string): string {\r\n        var date: any,\r\n            format = basicFormat ? basicFormat : this._defaultFormat,\r\n            formatLL = moment.localeData().longDateFormat(format),\r\n            formatYearlessLL = formatLL.replace(/Y/g, '').replace(/^\\W|\\W$|\\W\\W/, '');\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        \r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.format(formatYearlessLL);\r\n    }\r\n\r\n//  use timezone not testing\r\n    private formatRange(value1: any, value2: any, basicFormat: string): string {\r\n        var dateStart: any,\r\n            dateEnd: any,\r\n            format = basicFormat ? basicFormat : this._defaultFormat;\r\n\r\n        if (this.isUndefinedOrNull(value1)) {\r\n            dateStart = null;\r\n        } else {\r\n            dateStart = (this._config.timeZone != undefined && this._config.timeZone != null) ?  moment(value1).utcOffset(this._config.timeZone) : moment(value1);\r\n        }\r\n        if (this.isUndefinedOrNull(value2)) {\r\n            dateEnd = null;\r\n        } else {\r\n            dateEnd = (this._config.timeZone != undefined && this._config.timeZone != null) ?  moment(value2).utcOffset(this._config.timeZone) : moment(value2);\r\n        }\r\n\r\n        if (dateStart === null && dateEnd === null) return '';\r\n\r\n        if (dateStart === null) {\r\n            return dateEnd.format(basicFormat);\r\n        } else if (dateEnd === null || dateStart.isSame(dateEnd)) {\r\n            return dateStart.format(basicFormat);;\r\n        }\r\n\r\n        if (dateStart.isAfter(dateEnd)) {\r\n            // todo localization\r\n            throw new Error('Date range error. Start date is more than end date.');\r\n        }\r\n\r\n        if (dateStart.year() == dateEnd.year()) {\r\n            if (dateStart.month() == dateEnd.month()) {\r\n                return this.formatDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            } else {\r\n                return this.formatMonthDay(dateStart, basicFormat) + '-' + dateEnd.format(basicFormat);\r\n            }\r\n        } else {\r\n            return dateStart.format(basicFormat) + '-' + dateEnd.format(basicFormat);\r\n        }\r\n    }\r\n\r\n    private toStartRange(value: any, range: string): any {\r\n        var date: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.startOf(range).toDate();\r\n    }\r\n\r\n    private toEndRange(value: any, range: string, offset: number): any {\r\n        var date: any,\r\n            result: any,\r\n            mssOffset: number;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (!angular.isNumber(offset)) {\r\n            mssOffset = 0;\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        if (mssOffset) {\r\n            result = date.startOf(range).add(mssOffset, 'milliseconds');\r\n        } else {\r\n            result = date.startOf(range);\r\n        }\r\n\r\n        return date.startOf(range).toDate();\r\n    }\r\n\r\n    private toDateWithTime(value: any, formatDate: string, formatTime: string, firstTime?: boolean): any {\r\n        var date: any,\r\n            result: string,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n        if (firstTime) {\r\n            result = date.format(formatTime) + ' ' + date.format(formatDate);\r\n        } else {\r\n            result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private toTodayDate(value: any, formatDate: string, formatTime: string): any {\r\n        var date: any,\r\n            result: string,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        if (this._config.timeZone != undefined && this._config.timeZone != null) {\r\n            date = moment(value).utcOffset(this._config.timeZone);\r\n        } else {\r\n            date = moment(value);\r\n        }\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        nowDate = moment();\r\n\r\n        if (nowDate.year() == date.year() && nowDate.month() == date.month() && nowDate.day() == date.day()) {\r\n            result = date.format(formatTime);\r\n        } else {\r\n            result = date.format(formatDate) + ' ' + date.format(formatTime);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public constructor(config: DateTimeConfig) { \r\n        this._config = config || { timeZone: null };\r\n    };\r\n\r\n    public get config(): DateTimeConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public useTimeZone(offset: number) {\r\n        this._config.timeZone = offset;\r\n    }\r\n    // formating functions \r\n    // -------------------\r\n\r\n    // todo Optional\r\n    public formatTime(value: any, format: string): string {\r\n        return this.formatDateTime(value, 'LLL');\r\n    }\r\n    // todo Optional\r\n    public formatDateOptional(value: any, format: string): string {\r\n        return this.formatDateTime(value, 'L');\r\n    }\r\n\r\n    // date formats\r\n    public formatShortDate(value: any): string {\r\n        return this.formatDateTime(value, 'L');\r\n    }\r\n\r\n    public bbFormatDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'MM/DD/YY', 'LTS', firstTime); \r\n    }\r\n\r\n    public formatMiddleDate(value: any): string {\r\n        return this.formatDateTime(value, 'll');\r\n    }\r\n\r\n    public formatLongDate(value: any): string {\r\n        return this.formatDateTime(value, 'LL');\r\n    }\r\n\r\n    public formatMonth(value: any): string {\r\n        return this.formatDateTime(value, 'MM');\r\n    }\r\n\r\n    public formatLongMonth(value: any): string {\r\n        return this.formatDateTime(value, 'MMMM');\r\n    }\r\n\r\n    public formatYear(value: any): string {\r\n        return this.formatDateTime(value, 'YYYY');\r\n    }\r\n\r\n    public formatWeek(value: any): string {\r\n        return this.formatDateTime(value, 'ww');\r\n    }\r\n\r\n    public formatShortWeek(value: any): string {\r\n        return this.formatDateTime(value, 'w');\r\n    }\r\n\r\n    public formatShortDateTime(value: any): string {\r\n        return this.toDateWithTime(value, 'L', 'LT'); \r\n    }\r\n\r\n    public formatMiddleDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'lll');\r\n    }\r\n\r\n    public formatLongDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'LLL');\r\n    }\r\n\r\n    public formatFullDateTime(value: any): string {\r\n        return this.formatDateTime(value, 'LLLL');\r\n    }\r\n\r\n    public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'L', 'LTS', firstTime); \r\n    }\r\n\r\n    public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'll', 'LTS', firstTime);\r\n    }\r\n\r\n    public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this.toDateWithTime(value, 'LL', 'LTS', firstTime);\r\n    }\r\n\r\n    public formatShortTime(value: any): string {\r\n        return this.formatDateTime(value, 'LT');\r\n    }\r\n\r\n    public formatLongTime(value: any): string {\r\n        return this.formatDateTime(value, 'LTS');\r\n    }\r\n\r\n    public formatShortDayOfWeek(value: any): string {\r\n        return this.formatDateTime(value, 'dd');\r\n    }\r\n\r\n    public formatLongDayOfWeek(value: any): string {\r\n        return this.formatDateTime(value, 'dddd');\r\n    }\r\n\r\n    // public formatTimeNumber(value: any): string {\r\n    //     return this.formatDateTime(value, 'LLL');\r\n    // }\r\n\r\n    // public formatLongTimeNumber(value: any): string {\r\n    //     return this.formatDateTime(value, 'LLLL');\r\n    // }\r\n\r\n    ///-----------------\r\n\r\n    public formatLongMonthDay(value: any): string {\r\n        return this.formatMonthDay(value, 'LL');\r\n    }\r\n\r\n    public formatShortMonthDay(value: any): string {\r\n        return this.formatMonthDay(value, 'L');\r\n    }\r\n\r\n    public formatDateRange(value1: any, value2: any): string {\r\n        return this.formatRange(value1, value2, 'LL');\r\n    }\r\n\r\n    public formatDateTimeRange(value1: any, value2: any): string {\r\n        return this.formatRange(value1, value2, 'LLL');\r\n    }\r\n\r\n    // iso function\r\n    // --------------\r\n\r\n    public formatISOWeek(value: any): string {\r\n        return this.formatDateTime(value, 'WW');\r\n    }\r\n\r\n    public formatShortISOWeek(value: any): string {\r\n        return this.formatDateTime(value, 'W');\r\n    }\r\n\r\n    public formatISOWeekOrdinal(value: any): string {\r\n        return this.formatDateTime(value, 'Wo');\r\n    }\r\n    // special formats \r\n    // --------------\r\n\r\n    // year option displays if the current year is not equal to, the date of \r\n    public formatDateY(value: any): string {\r\n        return this.formatDateTimeY(value, 'L');\r\n    }\r\n\r\n    // year option displays if the current year is not equal to, the date of\r\n    public formatLongDateY(value: any): string {\r\n        return this.formatDateTimeY(value, 'LL');\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateLongTimeLong(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LTS')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateShortTimeLong(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LTS')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateLongTimeShort(value: any): string {\r\n        return this.toTodayDate(value, 'LL', 'LT')\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateShortTimeShort(value: any): string {\r\n        return this.toTodayDate(value, 'll', 'LT')\r\n    }\r\n\r\n    // todo\r\n    public formatMillisecondsToSeconds(value: any): string {\r\n        return '';\r\n    }\r\n\r\n    // todo\r\n    public formatElapsedInterval(value: any, start: any): string {\r\n        var date: any,\r\n            nowDate: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n        if (this.isUndefinedOrNull(start)) {\r\n            nowDate = moment();\r\n        } else {\r\n            nowDate = moment(start);\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid() || !nowDate.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return moment(date).fromNow(nowDate);\r\n    }\r\n\r\n    public getDateJSON(date: any): string {\r\n        return JSON.stringify(moment(date));\r\n    }\r\n\r\n    // navigation functions \r\n    // ------------------\r\n\r\n    public getNextStart(value: any, category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category);\r\n        result = moment(date).startOf(range).add(this.getOperationRange(range));\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public getPrevStart(value: any, category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        if (this.isUndefinedOrNull(value)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category);\r\n        result = moment(date).startOf(range).add(-1, this.getOperationRange(range));\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public getNowStart(category: string): any {\r\n        var date: any,\r\n            range: string,\r\n            result: any;\r\n\r\n        date = moment();\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        range = this.getRange(category)\r\n        result = moment(date).startOf(range);\r\n\r\n        return result.toDate();\r\n    }\r\n\r\n    public addHours(value: any, hours: number): any {\r\n        var date: any;\r\n\r\n        if (this.isUndefinedOrNull(value) || !angular.isNumber(hours)) {\r\n            return '';\r\n        }\r\n\r\n        date = moment(value);\r\n        if (!date.isValid()) {\r\n            return '';\r\n        }\r\n\r\n        return date.add(hours, 'hours').toDate();\r\n    }\r\n\r\n    public toStartDay(value: any): any {\r\n        return this.toStartRange(value, 'day');\r\n    }\r\n\r\n    public toEndDay(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'day', offset);\r\n    }\r\n\r\n    public toStartWeek(value: any): any {\r\n        return this.toStartRange(value, 'week');\r\n    }\r\n\r\n    public toEndWeek(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'week', offset);\r\n    }\r\n\r\n    public toStartMonth(value: any): any {\r\n        return this.toStartRange(value, 'month');\r\n    }\r\n\r\n    public toEndMonth(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'month', offset);\r\n    }\r\n\r\n    public toStartYear(value: any): any {\r\n        return this.toStartRange(value, 'year');\r\n    }\r\n\r\n    public toEndYear(value: any, offset: number): any {\r\n        return this.toEndRange(value, 'year', offset);\r\n    }\r\n\r\n}\r\n\r\nclass DateTimeService {\r\n    private _datetime: DateTime;\r\n    private _config: DateTimeConfig;\r\n\r\n    public constructor(\r\n        datetime: DateTime,\r\n    ) {\r\n        this._config = { timeZone: null};\r\n        this._datetime = datetime;\r\n    }\r\n\r\n    // todo Optional\r\n    public useTimeZone(offset: number): void {\r\n        return this._datetime.useTimeZone(offset);\r\n    }\r\n\r\n    // todo Optional\r\n    public formatTime(value: any, format: string): string {\r\n        return this._datetime.formatTime(value, format);\r\n    }\r\n\r\n    // todo Optional\r\n    public formatDateOptional(value: any, format: string): string {\r\n        return this._datetime.formatDateOptional(value, format);\r\n    }\r\n\r\n    public formatShortDate(value: any): string {\r\n        return this._datetime.formatShortDate(value);\r\n    }\r\n\r\n    public formatMiddleDate(value: any): string {\r\n        return this._datetime.formatMiddleDate(value);\r\n    }\r\n\r\n    public formatLongDate(value: any): string {\r\n        return this._datetime.formatLongDate(value);\r\n    }\r\n\r\n    public formatMonth(value: any): string {\r\n        return this._datetime.formatMonth(value);\r\n    }\r\n\r\n    public formatLongMonth(value: any): string {\r\n        return this._datetime.formatLongMonth(value);\r\n    }\r\n\r\n    public formatYear(value: any): string {\r\n        return this._datetime.formatYear(value);\r\n    }\r\n\r\n    public formatWeek(value: any): string {\r\n        return this._datetime.formatWeek(value);\r\n    }\r\n\r\n    public formatShortWeek(value: any): string {\r\n        return this._datetime.formatShortWeek(value);\r\n    }\r\n\r\n    public formatShortDateTime(value: any): string {\r\n        return this._datetime.formatShortDateTime(value);\r\n    }\r\n\r\n    public formatMiddleDateTime(value: any): string {\r\n        return this._datetime.formatMiddleDateTime(value);\r\n    }\r\n\r\n    public formatLongDateTime(value: any): string {\r\n        return this._datetime.formatLongDateTime(value);\r\n    }\r\n\r\n    public formatFullDateTime(value: any): string {\r\n        return this._datetime.formatFullDateTime(value);\r\n    }\r\n\r\n    public formatShortDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatShortDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatMiddleDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatMiddleDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatLongDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.formatLongDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public bbFormatDateLongTime(value: any, firstTime?: boolean): string {\r\n        return this._datetime.bbFormatDateLongTime(value, firstTime);\r\n    }\r\n\r\n    public formatShortTime(value: any): string {\r\n        return this._datetime.formatShortTime(value);\r\n    }\r\n\r\n    public formatLongTime(value: any): string {\r\n        return this._datetime.formatLongTime(value);\r\n    }\r\n\r\n    public formatShortDayOfWeek(value: any): string {\r\n        return this._datetime.formatShortDayOfWeek(value);\r\n    }\r\n\r\n    public formatLongDayOfWeek(value: any): string {\r\n        return this._datetime.formatLongDayOfWeek(value);\r\n    }\r\n\r\n    public formatLongMonthDay(value: any): string {\r\n        return this._datetime.formatLongMonthDay(value);\r\n    }\r\n\r\n    public formatShortMonthDay(value: any): string {\r\n        return this._datetime.formatShortMonthDay(value);\r\n    }\r\n\r\n    public formatDateRange(value1: any, value2: any): string {\r\n        return this._datetime.formatDateRange(value1, value2);\r\n    }\r\n\r\n    public formatDateTimeRange(value1: any, value2: any): string {\r\n        return this._datetime.formatDateTimeRange(value1, value2);\r\n    }\r\n\r\n    // iso function\r\n    // --------------\r\n\r\n    public formatISOWeek(value: any): string {\r\n        return this._datetime.formatISOWeek(value);\r\n    }\r\n\r\n    public formatShortISOWeek(value: any): string {\r\n        return this._datetime.formatShortISOWeek(value);\r\n    }\r\n\r\n    public formatISOWeekOrdinal(value: any): string {\r\n        return this._datetime.formatISOWeekOrdinal(value);\r\n    }\r\n    // special formats \r\n    // --------------\r\n\r\n    // year option displays if the current year is not equal to, the date of \r\n    public formatDateY(value: any): string {\r\n        return this._datetime.formatDateY(value);\r\n    }\r\n\r\n    // year option displays if the current year is not equal to, the date of\r\n    public formatLongDateY(value: any): string {\r\n        return this._datetime.formatLongDateY(value);\r\n    }\r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateLongTimeLong(value: any): string {\r\n        return this._datetime.formatTodayDateLongTimeLong(value);\r\n    }    \r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30:25 PM or 8:30:25 PM\r\n    public formatTodayDateShortTimeLong(value: any): string {\r\n        return this._datetime.formatTodayDateShortTimeLong(value);\r\n    }     \r\n\r\n    // date displays if the current date  is not equal now \r\n    // September 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateLongTimeShort(value: any): string {\r\n        return this._datetime.formatTodayDateLongTimeShort(value);\r\n    }     \r\n\r\n    // date displays if the current date  is not equal now \r\n    // Sep 4 1986 8:30 PM or 8:30 PM\r\n    public formatTodayDateShortTimeShort(value: any): string {\r\n        return this._datetime.formatTodayDateShortTimeShort(value);\r\n    }     \r\n\r\n    // todo\r\n    public formatMillisecondsToSeconds(value: any) {\r\n        return this._datetime.formatMillisecondsToSeconds(value);\r\n    }\r\n\r\n    // todo\r\n    public formatElapsedInterval(value: any, start: any): string {\r\n        return this._datetime.formatElapsedInterval(value, start);\r\n    }\r\n\r\n    public getDateJSON(date: any): string {\r\n        return this._datetime.getDateJSON(date);\r\n    }\r\n\r\n    // navigation functions \r\n    // ------------------\r\n\r\n    public getNextStart(value: any, category: string): any {\r\n        return this._datetime.getNextStart(value, category);\r\n    }\r\n\r\n    public getPrevStart(value: any, category: string): any {\r\n        return this._datetime.getPrevStart(value, category);\r\n    }\r\n\r\n    public getNowStart(category: string): any {\r\n        return this._datetime.getNowStart(category);\r\n    }\r\n\r\n    public addHours(value: any, hours: number): any {\r\n        return this._datetime.addHours(value, hours);\r\n    }\r\n\r\n    public toStartDay(value: any): any {\r\n        return this._datetime.toStartDay(value);\r\n    }\r\n\r\n    public toEndDay(value: any, offset: number): any {\r\n        return this._datetime.toEndDay(value, offset);\r\n    }\r\n\r\n    public toStartWeek(value: any): any {\r\n        return this._datetime.toStartWeek(value);\r\n    }\r\n\r\n    public toEndWeek(value: any, offset: number): any {\r\n        return this._datetime.toEndWeek(value, offset);\r\n    }\r\n\r\n    public toStartMonth(value: any): any {\r\n        return this._datetime.toStartMonth(value);\r\n    }\r\n\r\n    public toEndMonth(value: any, offset: number): any {\r\n        return this._datetime.toEndMonth(value, offset);\r\n    }\r\n\r\n    public toStartYear(value: any): any {\r\n        return this._datetime.toStartYear(value);\r\n    }\r\n\r\n    public toEndYear(value: any, offset: number): any {\r\n        return this._datetime.toEndYear(value, offset);\r\n    }\r\n\r\n}\r\n\r\nclass DateTimeProvider extends DateTime implements IDateTimeProvider {\r\n    private _translation: DateTime;\r\n    private _service: DateTimeService;\r\n\r\n    public constructor() {\r\n        super({ timeZone: null });\r\n    }\r\n\r\n    public $get(): any {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new DateTimeService(this);\r\n        return this._service;\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipDateTime.Service', [])\r\n    .provider('pipDateTime', DateTimeProvider);\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDate', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDate',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    ngChange: '&'\r\n                },\r\n                templateUrl: 'date_directive/date.html',\r\n                controller: 'pipDateController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateController',\r\n        function ($scope, $element, $injector) { //pipTranslate\r\n            var value,\r\n                localeDate: any = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    DAY: 'Day',\r\n                    MONTH: 'Month',\r\n                    YEAR: 'Year'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    DAY: 'День',\r\n                    MONTH: 'Месяц',\r\n                    YEAR: 'Год'                    \r\n                });\r\n                $scope.dayLabel = pipTranslate.translate('DAY');\r\n                $scope.monthLabel = pipTranslate.translate('MONTH');\r\n                $scope.yearLabel = pipTranslate.translate('YEAR');\r\n            } else {\r\n                $scope.dayLabel = 'Day';\r\n                $scope.monthLabel = 'Month';                \r\n                $scope.yearLabel = 'Year';\r\n\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count = 31, days = [], i;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var i,\r\n                    currentYear = new Date().getFullYear(),\r\n                    startYear = $scope.timeMode === 'future' ? currentYear : currentYear - 100,\r\n                    endYear = $scope.timeMode === 'past' ? currentYear : currentYear + 100,\r\n                    years = [];\r\n\r\n                if ($scope.timeMode === 'past') {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                if ($scope.days.length !== days.length) {\r\n                    if ($scope.day > days.length) {\r\n                        $scope.day = days.length;\r\n                    }\r\n\r\n                    $scope.days = days;\r\n                }\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value = v ? _.isDate(v) ? v : new Date(v) : null,\r\n                    day = value ? value.getDate() : null,\r\n                    month = value ? value.getMonth() + 1 : null,\r\n                    year = value ? value.getFullYear() : null;\r\n\r\n                // Update day list if month and year were changed\r\n                if ($scope.month !== month && $scope.year !== year) {\r\n                    $scope.days = dayList($scope.month, $scope.year);\r\n                }\r\n\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.day && $scope.month && $scope.year) {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    $scope.model = value;\r\n                    $scope.ngChange();\r\n                }\r\n            }\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                adjustDay();\r\n                setValue();\r\n            };\r\n\r\n            // Set initial values\r\n            value = $scope.model ? _.isDate($scope.model) ? $scope.model : new Date($scope.model) : null;\r\n            $scope.day = value ? value.getDate() : null;\r\n            $scope.month = value ? value.getMonth() + 1 : null;\r\n            $scope.year = value ? value.getFullYear() : null;\r\n\r\n\r\n\r\n            $scope.days = dayList($scope.month, $scope.year);\r\n            $scope.months = monthList();\r\n            $scope.years = yearList();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue) {\r\n                getValue(newValue);\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n        }\r\n    );\r\n\r\n})();\r\n\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n    var thisModule = angular.module('pipDateRange', ['pipDates.Templates']);\r\n\r\n    thisModule.directive('pipDateRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                require: 'ngModel',\r\n                scope: {\r\n                    timeMode: '@pipTimeMode',\r\n                    disabled: '&ngDisabled',\r\n                    model: '=ngModel',\r\n                    pipChanged: '&',\r\n                    pipDateRangeType: '@',\r\n                    pipDateFormat: '@',\r\n                    pipNoLine: '@'\r\n                },\r\n                templateUrl: 'date_range_directive/date_range.html',\r\n                controller: 'pipDateRangeController'\r\n            };\r\n        });\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipDateRangeController',\r\n        function ($scope, $element, $mdMedia, $rootScope, $injector, $timeout) { //pipTranslate, \r\n            var currentDate,\r\n                currentYear,\r\n                currentMonth,\r\n                currentDay,\r\n                prevState: any = {}, \r\n                currentState: any = {},\r\n                localeDate: any = moment.localeData(),\r\n                momentMonths = angular.isArray(localeDate._months) ? localeDate._months : localeDate._months.format,\r\n                momentDays = angular.isArray(localeDate._weekdays) ? localeDate._weekdays : localeDate._weekdays.format,\r\n                momentShortDays = localeDate._weekdaysMin,\r\n                momentFirstDayOfWeek = localeDate._week.dow;\r\n\r\n            // var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            // if (pipTranslate) {\r\n            //     pipTranslate.setTranslations('en', {\r\n            //         EVENT_NEW_START_TIME: 'Start time',\r\n            //         EVENT_NEW_END_TIME: 'End time'\r\n            //     });\r\n            //     pipTranslate.setTranslations('ru', {\r\n            //         EVENT_NEW_START_TIME: 'Начало',\r\n            //         EVENT_NEW_END_TIME: 'Конец'                \r\n            //     });\r\n            //     $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n            //     $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n            //             : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            // } else {\r\n            //     $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n            //     $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            // }\r\n\r\n            currentDate = new Date();\r\n            currentYear = currentDate.getUTCFullYear();\r\n            currentMonth = currentDate.getUTCMonth() + 1;\r\n            currentDay = currentDate.getUTCDate();\r\n\r\n            $scope.onDayChanged = function () {\r\n                setValue();\r\n            };\r\n\r\n            $scope.onMonthChanged = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    var date, dayOfWeek;\r\n\r\n                    date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                    dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onYearChanged = function () {\r\n                var date, dayOfWeek;\r\n\r\n                date = new Date(Date.UTC($scope.year, $scope.month - 1, 1));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    $scope.week = getWeekByDate(dayOfWeek, $scope.month - 1, $scope.year);\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            $scope.onWeekChange = function () {\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    adjustWeek();\r\n                    correctWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            };\r\n\r\n            // visibility\r\n            $scope.isDay = function () {\r\n                return $scope.pipDateRangeType === 'daily';\r\n            };\r\n\r\n            $scope.isWeek = function () {\r\n                return $scope.pipDateRangeType === 'weekly';\r\n            };\r\n\r\n            $scope.isMonth = function () {\r\n                return $scope.pipDateRangeType === 'daily' ||\r\n                    $scope.pipDateRangeType === 'weekly' ||\r\n                    $scope.pipDateRangeType === 'monthly';\r\n            };\r\n\r\n            $scope.onChange = function () {\r\n                if ($scope.pipChanged) {\r\n                    $timeout(function() {\r\n                        $scope.pipChanged();\r\n                    }, 0);\r\n                }\r\n            };\r\n\r\n            function setCurrent() {\r\n                currentState.day = $scope.day;\r\n                currentState.month = $scope.month;\r\n                currentState.year = $scope.year;\r\n                currentState.week = $scope.week;\r\n                currentState.dateRangeType = $scope.pipDateRangeType;\r\n                currentState.model = $scope.model;\r\n            }\r\n\r\n            function fillLists() {\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n                $scope.months = monthList();\r\n                $scope.shortMonths = monthList();\r\n                $scope.years = yearList();\r\n\r\n            }\r\n\r\n            function correctWeek() {\r\n                if (!prevState.model || prevState.model && prevState.model.getTime() >= $scope.model.getTime()) {\r\n                    // if shift week -> increase month\r\n                    if ($scope.weeks && $scope.weeks[$scope.week] && $scope.weeks[$scope.week].id <= 0) {\r\n                        if ($scope.month < 12) {\r\n                            $scope.month += 1;\r\n                        } else {\r\n                            $scope.month = 1;\r\n                            $scope.year += 1;\r\n                        }\r\n                        fillLists();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function init() {\r\n                var value;\r\n\r\n                value = $scope.model ? new Date($scope.model) : null;\r\n                $scope.day = value ? value.getUTCDate() : null;\r\n                $scope.month = value ? value.getUTCMonth() + 1 : null;\r\n                $scope.year = value ? value.getUTCFullYear() : null;\r\n                $scope.week = value ? getWeekByDate($scope.day, $scope.month - 1, $scope.year) : null;\r\n\r\n                fillLists();\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    correctWeek();\r\n                    adjustWeek();\r\n                } else {\r\n                    adjustDay();\r\n                }\r\n                setValue();\r\n            }\r\n\r\n            // Set initial values\r\n            $scope.$mdMedia = $mdMedia;\r\n\r\n            init();\r\n\r\n            $scope.disableControls = $scope.disabled ? $scope.disabled() : false;\r\n\r\n            // React on changes\r\n            $scope.$watch('model', function (newValue, oldValue) {\r\n                if (newValue !== oldValue) {\r\n                    getValue(newValue);\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            $scope.$watch('pipDateRangeType', function (newValue, oldValue) {\r\n                if (newValue !== oldValue && oldValue) {\r\n                    init();\r\n                }\r\n            });\r\n\r\n            $scope.onYearClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.year = currentYear;\r\n                }\r\n            };\r\n\r\n            $scope.onMonthClick = function () {\r\n                if (!$scope.month) {\r\n                    $scope.month = currentMonth;\r\n                }\r\n            };\r\n\r\n            $scope.onDayClick = function () {\r\n                if (!$scope.year) {\r\n                    $scope.day = currentDay;\r\n                }\r\n            };\r\n            // ---------------------------------------------------------------------------------------\r\n\r\n            function getCountDay(month, year) {\r\n                var count = 31;\r\n\r\n                if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n                    count = 30;\r\n                } else if (month === 2) {\r\n                    if (year) {\r\n                        // Calculate leap year (primitive)\r\n                        count = year % 4 === 0 ? 29 : 28;\r\n                    } else {\r\n                        count = 28;\r\n                    }\r\n                }\r\n\r\n                return count;\r\n            }\r\n\r\n            function dayList(month, year) {\r\n                var count, days, i, ln;\r\n\r\n              //  ln = $rootScope.$language || 'en';\r\n                count = getCountDay(month, year);\r\n                $scope.nameDays = [];\r\n                days = [];\r\n                for (i = 1; i <= count; i++) {\r\n                    days.push(i);\r\n                    $scope.nameDays.push(momentShortDays[moment([year, month - 1, i]).weekday()]);\r\n                }\r\n\r\n                return days;\r\n            }\r\n\r\n            function getWeekByDate(day, month, year) {\r\n                var date, dayOfWeek, startWeek;\r\n\r\n                date = new Date(Date.UTC(year, month, day));\r\n                dayOfWeek = date.getUTCDay() ? date.getUTCDay() : 7;\r\n\r\n                if (dayOfWeek === 1) {\r\n                    startWeek = day;\r\n                } else {\r\n                    startWeek = day + 1 - dayOfWeek;\r\n                }\r\n\r\n                return startWeek;\r\n            }\r\n\r\n            function getWeek(day, countDay, countPrevMonthDay) {\r\n                var endDay, startDay;\r\n\r\n                endDay = day + 6 > countDay ? countDay - day - 6 : day + 6;\r\n                startDay = day > 0 ? day : countPrevMonthDay + day;\r\n\r\n                return startDay.toString() + ' - ' + (Math.abs(endDay)).toString();\r\n            }\r\n\r\n            function weekList(month, year) { // возвращает список начала надели\r\n                var weeks, countDay, countPrevMonthDay, startWeek;\r\n\r\n                weeks = [];  // в массиве первые дни недели в текущем месяце\r\n                countDay = getCountDay(month, year);\r\n                startWeek = getWeekByDate(1, month - 1, year);\r\n\r\n                countPrevMonthDay = month - 1 ? getCountDay(month - 1, year) : getCountDay(12, year - 1);\r\n                while (startWeek < countDay + 1) {\r\n                    weeks.push({\r\n                        id: startWeek,\r\n                        name: getWeek(startWeek, countDay, countPrevMonthDay)\r\n                    });\r\n                    startWeek = startWeek + 7;\r\n                }\r\n\r\n                return weeks;\r\n            }\r\n\r\n            function monthList() {\r\n                var months = [], i;\r\n\r\n                for (i = 1; i <= 12; i++) {\r\n                    months.push({\r\n                        id: i,\r\n                        name: momentMonths[i-1]\r\n                    });\r\n                }\r\n\r\n                return months;\r\n            }\r\n\r\n            function yearList() {\r\n                var startYear, i,\r\n                    endYear,\r\n                    years = [];\r\n\r\n                switch ($scope.timeMode) {\r\n                    case 'future':\r\n                        startYear = currentYear;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    case 'past':\r\n                        startYear = currentYear - 100;\r\n                        endYear = currentYear;\r\n                        break;\r\n                    case 'now':\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 100;\r\n                        break;\r\n                    default:\r\n                        startYear = currentYear - 50;\r\n                        endYear = currentYear + 50;\r\n                        break;\r\n                }\r\n                if ($scope.timeMode === 'future') {\r\n                    for (i = startYear; i <= endYear; i++) {\r\n                        years.push(i);\r\n                    }\r\n                } else {\r\n                    for (i = endYear; i >= startYear; i--) {\r\n                        years.push(i);\r\n                    }\r\n                }\r\n\r\n                return years;\r\n            }\r\n\r\n            function adjustDay() {\r\n                var days = dayList($scope.month, $scope.year);\r\n\r\n                switch ($scope.pipDateRangeType) {\r\n                    case 'monthly':\r\n                        $scope.day = 1;\r\n                        break;\r\n                    case 'yearly':\r\n                        $scope.month = 1;\r\n                        $scope.day = 1;\r\n                        break;\r\n                    default:\r\n                        if ($scope.days.length !== days.length) {\r\n                            if ($scope.day > days.length) {\r\n                                $scope.day = days.length;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                $scope.days = days;\r\n            }\r\n\r\n            function adjustWeek() {\r\n                var weeks;\r\n\r\n                weeks = weekList($scope.month, $scope.year);\r\n                $scope.week = getWeekByDate($scope.week, $scope.month - 1, $scope.year);\r\n                $scope.weeks = weeks;\r\n            }\r\n\r\n            function getValue(v) {\r\n                var value, day, month, year, week;\r\n\r\n                value = v ? new Date(v) : null;\r\n                // Define values\r\n                day = value ? value.getUTCDate() : null;\r\n                month = value ? value.getUTCMonth() + 1 : null;\r\n                year = value ? value.getUTCFullYear() : null;\r\n                week = value ? getWeekByDate(day, month - 1, year) : null;\r\n                // Exit if nothing to update\r\n                if ($scope.day === day && $scope.month === month && $scope.year === year && $scope.week === week) {\r\n                    return;\r\n                }\r\n                // Assign values to scope\r\n                $scope.day = day;\r\n                $scope.month = month;\r\n                $scope.year = year;\r\n                $scope.week = week;\r\n\r\n                // Define data sources\r\n                $scope.days = dayList($scope.month, $scope.year);\r\n                $scope.weeks = weekList($scope.month, $scope.year);\r\n            }\r\n\r\n            function setValue() {\r\n                var value;\r\n\r\n                if ($scope.pipDateRangeType === 'weekly') {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.week, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                } else {\r\n                    value = new Date($scope.year, $scope.month - 1, $scope.day, 0, 0, 0, 0);\r\n                    value = new Date(value.getTime() - value.getTimezoneOffset() * 60000);\r\n                    $scope.model = value;\r\n                }\r\n\r\n                prevState = _.cloneDeep(currentState);\r\n                setCurrent();\r\n                $scope.onChange();\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","'use strict';\r\n\r\nangular.module('pipDates', [\r\n    'pipDate',\r\n    'pipTimeRange',\r\n    'pipDateTime',\r\n    'pipTimeRangeEdit',\r\n    'pipDateRange',\r\n    'pipDates.Translate'\r\n]);\r\n","/**\r\n * @file Optional filter to translate string resources\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipDates.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRange', []);\r\n\r\n    thisModule.directive('pipTimeRange',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipEndDate: '='\r\n                },\r\n                templateUrl: 'time_range_directive/time_range.html',\r\n                link: function ($scope: any, $element, $attrs) {\r\n\r\n                    function getDateJSON(value) {\r\n                        return value ? new Date(value) : null;\r\n                    }\r\n\r\n                    function defineStartDate() {\r\n                        if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                            $scope.data.start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate\r\n                                : getDateJSON($scope.pipStartDate);\r\n                        }\r\n                    }\r\n\r\n                    function defineEndDate() {\r\n                        if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                            $scope.data.end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate\r\n                                : getDateJSON($scope.pipEndDate);\r\n                        }\r\n                    }\r\n\r\n                    function toBoolean(value) {\r\n                        if (value == null) return false;\r\n                        if (!value) return false;\r\n                        value = value.toString().toLowerCase();\r\n                        return value == '1' || value == 'true';\r\n                    }\r\n\r\n                    $scope.data = {};\r\n                    $scope.data.start = null;\r\n                    $scope.data.end = null;\r\n                    defineStartDate();\r\n                    defineEndDate();\r\n\r\n                    if (toBoolean((<any>$attrs).pipRebind)) {\r\n                        $scope.$watch('pipStartDate',\r\n                            function () {\r\n                                $scope.data.start = null;\r\n                                defineStartDate();\r\n                            }\r\n                        );\r\n                        $scope.$watch('pipEndDate',\r\n                            function () {\r\n                                $scope.data.end = null;\r\n                                defineEndDate();\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-time-range');\r\n                }\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipTimeRangeEdit', []);\r\n\r\n    thisModule.directive('pipTimeRangeEdit',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipStartDate: '=',\r\n                    pipChanged: '&',\r\n                    pipEndDate: '=',\r\n                    pipStartLabel: '@',\r\n                    pipEndLabel: '@',\r\n                    disabled: '&ngDisabled',\r\n                    pipHideTime: '=',\r\n                    pipSize: '='\r\n                },\r\n                templateUrl: 'time_range_edit_directive/time_range_edit.html',\r\n                controller: 'pipTimeRangeEditController'\r\n            };\r\n        }\r\n    );\r\n\r\n    // Todo: Remove dependency on Translate. Use moment localization\r\n    thisModule.controller('pipTimeRangeEditController',\r\n        function ($scope, $element, $attrs, $injector, pipDateTime) { //pipTranslate\r\n\r\n            var pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n            if (pipTranslate) {\r\n                pipTranslate.setTranslations('en', {\r\n                    EVENT_NEW_START_TIME: 'Start time',\r\n                    EVENT_NEW_END_TIME: 'End time'\r\n                });\r\n                pipTranslate.setTranslations('ru', {\r\n                    EVENT_NEW_START_TIME: 'Начало',\r\n                    EVENT_NEW_END_TIME: 'Конец'                \r\n                });\r\n                $scope.startLabel = $scope.pipStartLabel ? pipTranslate.translate($scope.pipStartLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_START_TIME');\r\n                $scope.endLabel = $scope.pipEndLabel ? pipTranslate.translate($scope.pipEndLabel)\r\n                        : pipTranslate.translate('EVENT_NEW_END_TIME');\r\n            } else {\r\n                $scope.startLabel = $scope.pipStartLabel ? $scope.pipStartLabel : 'Start time';\r\n                $scope.endLabel = $scope.pipEndLabel ? $scope.pipEndLabel : 'End time';              \r\n            }\r\n\r\n            function getDateJSON(value) {\r\n                return value ? new Date(value) : null;\r\n            }\r\n\r\n            function setDuration() {\r\n                var start, end;\r\n\r\n                if (!$scope.data.startDate || !$scope.data.endDate) {\r\n                    return null;\r\n                }\r\n                \r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                return end - start;\r\n            }\r\n\r\n            function validateStartDate() {\r\n                var date, start, end;\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано начальное время - задаем его\r\n                if ($scope.data.startTime === undefined || $scope.data.startTime === null) {\r\n                    if (!$scope.data.endTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.startTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.startTime = $scope.data.endTime === 0 ? 0 : $scope.data.endTime - 30;\r\n                    }\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n\r\n                // Если есть длительность, то сохраняем ее. Длительность можно изменить только изменяя конечную дату\r\n                if ($scope.data.duration) {\r\n                    end = new Date(start.getTime() + $scope.data.duration);\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    end = end.getTime() - $scope.data.endDate.getTime();\r\n                    $scope.data.endTime = Math.floor(end / (30 * 60 * 1000)) * 30;\r\n                } else {\r\n                    // Если нет длительности сравниваем даты\r\n                    end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n                    if (start >= end) {\r\n                        // Если начальная дата больше, то двигаем конечную дату\r\n                        $scope.data.endDate = pipDateTime.toStartDay(new Date(start.getTime() + 30 * 60000));\r\n                        $scope.data.endTime = ($scope.data.startTime + 30) % 1440;\r\n                    }\r\n                }\r\n\r\n                $scope.data.startTime = Math.round($scope.data.startTime / 30) * 30;\r\n                console.log('$scope.data.startTime', $scope.data.startTime);\r\n            }\r\n\r\n            function validateEndDate() {\r\n                var date, start, end;\r\n\r\n                // если начальная дата не задана, обнуляем и выходим\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endTime = null;\r\n\r\n                    return;\r\n                }\r\n\r\n                // еcли не задано конечное время - задаем его\r\n                if ($scope.data.endTime === undefined || $scope.data.endTime === null) {\r\n                    if (!$scope.data.startTime) {\r\n                        date = new Date();\r\n                        date = date.getTime() - pipDateTime.toStartDay(date);\r\n                        $scope.data.endTime = Math.floor(date / (30 * 60 * 1000)) * 30;\r\n                    } else {\r\n                        $scope.data.endTime = $scope.data.startTime === 1410 ? 1410 : $scope.data.startTime + 30;\r\n                    }\r\n                }\r\n\r\n                start = new Date($scope.data.startDate.getTime() + $scope.data.startTime * 60 * 1000);\r\n                end = new Date($scope.data.endDate.getTime() + $scope.data.endTime * 60 * 1000);\r\n\r\n                if (start >= end) {\r\n                    // Если начальная дата больше, то двигаем начальную дату\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date(end.getTime() - 30 * 60000));\r\n                    $scope.data.startTime = $scope.data.endTime % 1440 === 0 ? 1410 : $scope.data.endTime - 30;\r\n                }\r\n\r\n                $scope.data.endTime = Math.round($scope.data.endTime / 30) * 30;\r\n                $scope.data.duration = setDuration();\r\n            }\r\n\r\n            function setDate() {\r\n                var time;\r\n\r\n                $scope.data.bind = false;\r\n\r\n                if ($scope.data.startDate) {\r\n                    time = $scope.data.startTime ? $scope.data.startTime * 60 * 1000 : 0;\r\n                    $scope.pipStartDate = new Date($scope.data.startDate.getTime() + time);\r\n                }\r\n\r\n                if ($scope.data.endDate) {\r\n                    time = $scope.data.endTime ? $scope.data.endTime * 60 * 1000 : 0;\r\n                    $scope.pipEndDate = new Date($scope.data.endDate.getTime() + time);\r\n                }\r\n\r\n                $scope.data.bind = true;\r\n            }\r\n\r\n            function defineDate() {\r\n                var start, end;\r\n\r\n                if ($scope.pipStartDate !== null && $scope.pipStartDate !== undefined) {\r\n                    start = _.isDate($scope.pipStartDate) ? $scope.pipStartDate : null;\r\n\r\n                    if (!start) {\r\n                        start = getDateJSON($scope.pipStartDate);\r\n                    }\r\n\r\n                    $scope.data.startDate = pipDateTime.toStartDay(start);\r\n                    $scope.data.startTime = (<any>new Date(start) - $scope.data.startDate) / (60 * 1000);\r\n                }\r\n\r\n                if ($scope.pipEndDate !== null && $scope.pipEndDate !== undefined) {\r\n                    end = _.isDate($scope.pipEndDate) ? $scope.pipEndDate : null;\r\n\r\n                    if (!start) {\r\n                        end = getDateJSON($scope.pipEndDate);\r\n                    }\r\n\r\n                    $scope.data.endDate = pipDateTime.toStartDay(end);\r\n                    $scope.data.endTime = (<any>new Date(end) - $scope.data.endDate) / (60 * 1000);\r\n                }\r\n\r\n                validateStartDate();\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n            }\r\n\r\n            function getTimeInterval() {\r\n                var result, i, j, minutes;\r\n\r\n                result = [];\r\n                for (i = 0; i < 24; i++) {\r\n                    for (j = 0; j < 2; j++) {\r\n                        minutes = j * 30;\r\n                        result.push({\r\n                            id: i * 60 + minutes,\r\n                            time: _.pad(i.toString(), 3, '0').substr(0, 2) + ':' + _.pad(minutes.toString(), 2, '0')\r\n                        });\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            function initDate() {\r\n                $scope.data.startDate = null;\r\n                $scope.data.startTime = null;\r\n                $scope.data.endDate = null;\r\n                $scope.data.endTime = null;\r\n                $scope.data.duration = null;\r\n                $scope.showTime = !toBoolean($scope.pipHideTime);\r\n            }\r\n\r\n            // initialize data\r\n            $scope.intervalTimeCollection = getTimeInterval();\r\n            $scope.data = {};\r\n            initDate();\r\n            defineDate();\r\n\r\n            // process function\r\n            $scope.onChangeStartDate = function (newV) {\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndDate = function () {\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeStartTime = function () {\r\n                if (!$scope.data.startDate) {\r\n                    $scope.data.startDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n                validateStartDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.onChangeEndTime = function () {\r\n                if (!$scope.data.endDate) {\r\n                    $scope.data.endDate = pipDateTime.toStartDay(new Date());\r\n                }\r\n\r\n                validateEndDate();\r\n                $scope.data.duration = setDuration();\r\n                setDate();\r\n                $scope.pipChanged();\r\n            };\r\n\r\n            $scope.isDisabled = function () {\r\n                if ($scope.disabled) {\r\n                    return $scope.disabled();\r\n                }\r\n\r\n                return false;\r\n            };\r\n\r\n            $scope.$watchGroup([$scope.pipStartDate, $scope.pipEndDate], function () {\r\n                if ($scope.data.bind) {\r\n                    initDate();\r\n                    defineDate();\r\n                }\r\n            });\r\n\r\n            $scope.$watch($scope.disabled, function (newValue) {\r\n                $scope.disableControls = newValue;\r\n            });\r\n\r\n            // Add class\r\n            $element.addClass('pip-time-range-edit');\r\n        }\r\n    );\r\n\r\n})();\r\n","(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_directive/date.html',\n    '<div class=\"pip-date layout-row flex\" tabindex=\"-1\"><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-day flex\" ng-disabled=\"disableControls\" ng-model=\"day\" placeholder=\"{{dayLabel}}\" ng-change=\"onDayChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{:: opt }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-monthflex\" ng-disabled=\"disableControls\" ng-model=\"month\" placeholder=\"{{monthLabel}}\" ng-change=\"onMonthChanged()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{:: opt.name }}</md-option></md-select></md-input-container><div class=\"input-container-separator flex-fixed\"></div><md-input-container class=\"input-container flex\"><md-select class=\"pip-date-year flex\" ng-disabled=\"disableControls\" ng-model=\"year\" placeholder=\"{{yearLabel}}\" ng-change=\"onYearChanged()\"><md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{:: opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('date_range_directive/date_range.html',\n    '<div class=\"pip-date-range layout-row flex\" tabindex=\"-1\"><md-input-container ng-show=\"isDay()\" class=\"input-container pip-day flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-day\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onDayClick()\" ng-model=\"day\" ng-change=\"onDayChanged()\" placeholder=\"{{dayLabel}}\" aria-label=\"DAY\"><md-option ng-value=\"opt\" ng-repeat=\"opt in days track by opt\">{{nameDays[$index]}} {{ opt }}</md-option></md-select></md-input-container><md-input-container ng-show=\"isWeek()\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-week\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" ng-model=\"week\" ng-change=\"onWeekChange()\" placeholder=\"{{weekLabel}}\" aria-label=\"WEEK\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in weeks track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $mdMedia(\\'gt-xs\\'), \\'space8\\': $mdMedia(\\'xs\\')}\" ng-show=\"isDay() || isWeek()\"></div><md-input-container ng-show=\"isMonth() && !monthFormatShort\" class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onMonthClick()\" ng-model=\"month\" ng-change=\"onMonthChanged()\" placeholder=\"{{monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in months track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><md-input-container ng-show=\"isMonth() && monthFormatShort\" class=\"flex input-container\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-month\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onMonthClick()\" ng-model=\"month\" ng-change=\"onMonthChanged()\" placeholder=\"{{monthLabel}}\" aria-label=\"MONTH\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in shortMonths track by opt.id\">{{ opt.name }}</md-option></md-select></md-input-container><div class=\"flex-fixed\" ng-class=\"{\\'space16\\': $mdMedia(\\'gt-xs\\'), \\'space8\\': $mdMedia(\\'xs\\')}\" ng-show=\"isMonth()\"></div><md-input-container class=\"input-container flex\" ng-class=\"{\\'flex-fixed\\' : $mdMedia(\\'gt-xs\\')}\"><md-select class=\"select-year\" ng-class=\"{\\'pip-no-line\\' : pipNoLine}\" ng-disable=\"{{disableControls}}\" md-on-open=\"onYearClick()\" ng-model=\"year\" ng-change=\"onYearChanged()\" placeholder=\"{{yearLabel}}\" aria-label=\"YEAR\"><md-option ng-value=\"opt\" ng-repeat=\"opt in years track by opt\">{{ opt }}</md-option></md-select></md-input-container></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_directive/time_range.html',\n    '<p><span ng-if=\"data.start != null\">{{data.start | formatLongDateTime}}</span> <span class=\"separator\" ng-if=\"data.start && data.end\">-</span> <span ng-if=\"data.end != null\">{{data.end | formatLongDateTime}}</span></p>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipDates.Templates');\n} catch (e) {\n  module = angular.module('pipDates.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('time_range_edit_directive/time_range_edit.html',\n    '<div class=\"event-edit layout-row layout-xs-column flex layout-align-start-start\"><div flex=\"47\" class=\"start-time-container\"><p class=\"text-caption text-grey\">{{startLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container\" flex=\"49\"><md-datepicker ng-model=\"data.startDate\" xmd-placeholder=\"{{startLabel}}\" ng-change=\"onChangeStartDate()\" ng-disabled=\"isDisabled()\" aria-label=\"START-DATE\"></md-datepicker></div><div flex=\"\" ng-if=\"showTime\"><md-input-container class=\"input-container\"><md-select aria-label=\"START-TIME\" ng-model=\"data.startTime\" ng-disabled=\"isDisabled()\" ng-change=\"onChangeStartTime(data.startTime)\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div><div flex=\"47\" class=\"end-time-container\"><p class=\"text-caption text-grey\">{{endLabel}}</p><div class=\"layout-row layout-align-space-between-center\"><div class=\"pip-datepicker-container flex-49\"><md-datepicker ng-model=\"data.endDate\" xmd-placeholder=\"{{endLabel}}\" ng-disabled=\"isDisabled()\" ng-change=\"onChangeEndDate()\" aria-label=\"END-DATE\"></md-datepicker></div><div flex=\"\" ng-if=\"showTime\"><md-input-container class=\"input-container\"><md-select aria-label=\"END-TIME\" ng-model=\"data.endTime\" ng-change=\"onChangeEndTime()\" ng-disabled=\"isDisabled()\"><md-option ng-value=\"opt.id\" ng-repeat=\"opt in intervalTimeCollection track by opt.id\">{{ opt.time }}</md-option></md-select></md-input-container></div></div></div></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-dates-html.min.js.map\n"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}